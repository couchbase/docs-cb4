<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE topic PUBLIC "-//OASIS//DTD DITA Topic//EN" "topic.dtd">
<topic id="topic_jzr_ct2_gv">
  
  <title>
    Password-Based Authentication
  </title>
  
  <shortdesc>
    To access Couchbase Server, administrators <i>must</i> authenticate. Applications
    <i>may</i> be required to authenticate, when accessing particular buckets.
    Authentication is password-based, for both administrators
    and applications. For additional security, applications can be designed to use 
    passwords in hash-based challenge-response routines.
  </shortdesc>
  
  <body>
    
    <section>
      
      <title>
        Authentication for Administrators 
      </title>
     
      <p> 
        Administrator usernames and passwords, both required for authentication, are initially established during installation of
        Couchbase Server: see 
        <xref href="../install/init-setup.dita#topic12527/setpass">Configure Server</xref> 
        for details. Subsequently, passwords can be changed by means of the
        password-reset tool,
        <xref href="../cli/cbcli/reset-admin-password.dita"/>
      </p>
        
      <p>
        Best practices for password-definition are 
        listed in the section 
        <xref href="security-passwords.dita#topic_iyx_5ps_lq">Couchbase passwords</xref>. 
      </p>
      
      <p>
        When the Couchbase Web Console is running on the default port, <codeph>http://localhost:8091</codeph>,
        the administrator's username and password are passed in the clear, from the administrator's browser
        to the console. Optionally, Couchbase Web Console can be configured for <i>secure access</i>, at
        <codeph>https://localhost:18091</codeph>; so that the username and password are passed in
        encrypted form. For information, see
        <xref href="./security-comm-encryption.dita" scope="local" format="dita">Encryption On the Wire</xref>.
      </p>
        
    </section> 
    
    <section id="standardport">
      <title>
        Authentication for Applications
      </title>
      
      <p>
        Buckets can be password-protected. To
        access password-protected buckets, applications must authenticate, using one of four
        mechanisms provided  by the <i>Simple Authentication 
        and Security Layer</i> (SASL) framework. These are PLAIN, and three members of the
        <i>Salted Challenge Response Authentication Mechanism</i> family
        of hash functions; which are SCRAM-SHA1, SCRAM-SHA256, and SCRAM-SHA512.
        The SCRAM mechanisms allow
        applications to authenticate securely, by transmitting the password only in <i>protected form</i>.
        Drivers may need to be updated, to support SHA-based hash functions.
      </p>
      
      <p>
        Note that <i>default buckets</i>, provided with Couchbase Server for demonstration
        and test purposes, are not password-protected. 
      </p>
      
    </section>
    
    <section>
      <title>
        Configuring Access Control
      </title>
      
      <p>
        You can configure access control on a bucket in either of two ways. For both options, use the
        Couchbase Web Console.
      </p>
      
      <p>
        Access the console, and left-click on the <uicontrol>Buckets</uicontrol> option, in the navigation-bar
        to the left. This brings up the <uicontrol>Buckets</uicontrol> screen:
      </p>
      
      <p>
        <image href="./pict/bucketScreen.png" align="left" height="330" width="702"/>
      </p>
        
    </section>
    
    <section>
      
      <title>
        Configure Access Control with Authentication
      </title>
      
      <p>
        Left-click on the
        <uicontrol>+ Add Data Bucket</uicontrol> option, near the top. The
        <uicontrol>+ Add Data Bucket</uicontrol> dialog now appears:
      </p>
      
      <p>
        <image href="./pict/addDataBucket.png" align="left" height="354" width="328"/>
      </p>
      
      <p>
        To configure access control with authentication, use the <uicontrol>Access Control</uicontrol>
        panel. This allows access on port 11211, and requires
        SASL authentication. Enter a 
        password into the <uicontrol>Enter password</uicontrol> dialog.
        This password should comply with the best-practice rules referred to above. The password is
        saved and applied to the bucket when you click on the <uicontrol>Add Bucket</uicontrol> button.
      </p>
      
    </section>
    
    <section>
      
      <title>
        Configure Access Control without Authentication
      </title>
      
      <p>
        Alternatively, you can establish access control that does not require authentication. To
        do so, left-click on the <uicontrol>Show
        advanced bucket settings</uicontrol> tab, near the bottom of the <uicontrol>+ Add Data
        Bucket</uicontrol> dialog as initially displayed. The dialog now expands vertically; and
        the <uicontrol>Access Control</uicontrol> panel becomes visible, mid-way down:
      </p>
      
      <p>
        <image href="./pict/accessControl.png" align="left" height="103" width="365"/>
      </p>
      
      <p>
        To select access control by means of the <i>Dedicated Port</i>, check the checkbox, and enter a port-number of your
        choice. 
      </p>
      
      <p>
        This port supports the ASCII protocol, and does not require authentication.
      </p>
      
      <p>
         Note that server-side <i>moxi</i> proxy is deprecated in Couchbase
         Server version 4.5 and above.  For application-design, either use the Couchbase SDK or client-side moxi. 
      </p>
          
    </section>  
    
    <section>
      
      <title>
        Password Authentication-Mechanisms
      </title>
      
      <p>
        In ascending order of strength, the Couchbase password-authentication mechanisms are as follows:
      </p>
      
      <ul>
        
        <li>
          <i>PLAIN</i>: The client sends the password in unencrypted form. All
          clients support this authentication-method. It is insecure, providing no defence against
          passwords being stolen in tranmission.
          
          <p>
            <!-- Vertical space -->
          </p>
        </li>
        
        <li>
          <i>SCRAM-SHA1</i>: Uses a 160-bit key. 
          
          <p>
            <!-- Vertical space -->
          </p>
          
        </li>
        
        <li>
          <i>SCRAM-SHA256</i>: One of a group of hash functions referred to as <i>SHA2</i>, SCRAM-SHA256 uses a 
          256-bit key.
          
          <p>
            <!-- Vertical space -->
          </p>
          
        </li>
        
        <li>
          <i>SCRAM-SHA512</i>: Another hash function from the <i>SHA2</i> group, SCRAM-SHA512 uses a
          512-bit key; and is the strongest-supported authentication protocol.
          
          <p>
            <!-- Vertical space -->
          </p>
          
        </li>
        
      </ul>
      
      <p>
        During initial
        client-server negotiation, the strongest protocol supported by both Couchbase Server and the
        application's client OS is selected for use. 
        For example, if the client supports only the PLAIN protocol, the PLAIN protocol is used; but
        if the client also supports the SCRAM-SHA1 protocol, then SCRAM-SHA1 is used.
      </p>
      
      <p>
        A challenge-response method can be transmitted through both encrypted and unencrypted channels. 
      </p>
      
      <p>
        Note that the SCRAM challenge-response protocols authenticate only the process of password-validation. 
        To secure the subsequent session, TLS should be used.
      </p>
    
    </section>
      
  </body>
</topic>
