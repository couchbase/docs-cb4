<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE topic PUBLIC "-//OASIS//DTD DITA Topic//EN" "topic.dtd">

<topic id="topic_security_user_input">
 
 <title>
  User Input Validation
 </title>
 
 <shortdesc>
  User input should be validated by the client application, before the input is sent
  to Couchbase Server: this constitutes protection against malicious update, 
  insertion, and
  erasure of data.
 </shortdesc>
 <body>
  
  <section>
   <title>
    Forms of Attack
   </title>

  <p>
   The following forms of attack, based on the manipulation of user input, should
   be anticipated:
  </p>
  
  <ul>
   <li>
    Injecting arbitrary key-value pairs into an existing document. 
    
    <p>
     <!-- Vertical space -->
    </p>
    
   </li>
   
   <li>
    Changing the user-specified document-type from <i>private</i> to <i>public</i>; and thereby
    increasing the possibility of illicit access. 
    
    <p>
     <!-- Vertical space -->
    </p>
    
   </li>
   
   <li>
    Overriding important document-fields. 
    
    <p>
     <!-- Vertical space -->
    </p>
    
   </li>
  </ul>
  
  <p>
   For example, a malicious user might attempt to overwrite an existing password by generating
   the following JSON document:
  </p>
  
  <codeblock>{"user": "will","password":"<varname>0asd21$1%</varname>", "created":"2012-06-12", "password":"<varname>password</varname>"}</codeblock>
  
  <p>
   In this document, the first password-field contains <codeph>0asd21$1%</codeph>, which is the intended value.
   Note however, that an additional <codeph>password</codeph> name-value pair has been concatenated
   onto the document-content. Submission of this modified document would result in the plain <codeph>password</codeph> 
   value overwriting the earlier specified, intended password.
  </p>
   
  </section>
  
  <section>
   <title>
    Forms of Protection
   </title>
  
  <p>
   Malicious user-input is most effectively protected against by client applications
   that do not permit unconstrained document-configuration by users; and instead impose a more restrictive interface;
   whereby, for example, only specific values or name-value pairs are accepted, and are properly validated
   before dispatch. (A document-model featuring
   Java POJOs or .NET POCOs might be used for such purposes.)
  </p>
  
  </section>
 </body>
</topic>