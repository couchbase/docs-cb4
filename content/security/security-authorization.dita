<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE topic PUBLIC "-//OASIS//DTD DITA Topic//EN" "topic.dtd">
<topic id="authorization">
  
  <title>
    Authorization
  </title>
  
  <shortdesc>
    For authorizing users, Couchbase Server 
    provides <i>Role-Based Access Control</i>.
  </shortdesc>
  
  <body>
    
    <section>
      
      <title>
        Role-Based Access Control
      </title>
      
    <p>
      Couchbase provides <i>Role-Based Access Control</i> (RBAC), in which access 
      privileges are assigned to fixed roles; which are in turn assigned to
      administrators and applications. 
    </p>
      
      <p>
        Couchbase Server Enterprise Edition provides RBAC with multiple roles for finer access 
        control. Community Edition provides multiple users that can be assigned to limited set 
        of roles. There are three fixed roles in the community edition of Couchbase providing 
        coarser access control: Bucket Full Access (<codeph>bucket_full_access[*]</codeph>), Admin (<codeph>admin</codeph>), and Read Only Admin (<codeph>ro_admin</codeph>).
      </p>
    
    </section>
    
    <section>
      <title>
        Example Scenarios
      </title>
      
      <p>
        Couchbase RBAC provides a secure solution for each of 
        the following scenarios:
      </p>
      
      <ul>
        <li>
          An application consists of several services, each of which has a different
          purpose. Compliance demands that each service be given a different set of read and write privileges,
          in order to constrain its activities to those absolutely required.
          
          <p>
            <!-- Vertical space -->
            
          </p>
          
        </li>
        
        <li> 
          An application is available to several different classes of user. Each user-class
          has a different set of requirements for reading and writing data.
          Compliance demands that each user-class be given no more than the minimum privileges 
          for supporting its requirements.
          
          <p>
            <!-- Vertical space -->
            
          </p>
          
        </li>
        
        <li>
          A Couchbase bucket has been defined to contain sensitive data 
          that should be accessible to only a minimal
          subset of administrators. While highly select members of the subset should be granted either
          read or read-write privileges on the data itself (for example, in order to define
          Views, set up XDCR filters, or run queries); others should be granted access
          only to statistical data provided in support of the bucket
          (for example, in relation to memory-management or performance). 
          
          <p>
            <!-- Vertical space -->
            
          </p>
          
        </li>
        
        <li>
          Test and production environments respectively require different degrees of constraint 
          to be applied to read and write access. Administrators, developers, applications, and services should 
          therefore each be granted one set of privileges for the test environment, and another 
          (more restrictive) for the production.
          
          <p>
            <!-- Vertical space -->
            
          </p>
          
        </li>
        
      </ul>
      
      
    </section>
    
    <section>
      <title>
        RBAC Concepts
      </title>
      
      <p>
        The following concepts are essential to an understanding of Couchbase RBAC:
      </p>
      
      <ul>
        <li>
          <i>Resource</i>: An entity the access to which must be controlled. A resource can
          be specified either individually, by name; or as a group (for example, all buckets), by means of a wildcard
          character. Resources are
          described in
          <xref href="./security-resources-under-access-control.dita" scope="local" format="dita">Resources
          under Access Control</xref>.
          
          <p>
            <!-- Vertical space -->
          </p>
          
        </li>
        
        <li>
          <i>Privilege</i>: The right, assigned by Couchbase Server, to apply an action to a resource.
          Possible actions include <i>read</i>, <i>write</i>, and <i>execute</i>. The associations of
          privileges to resources and roles are explained in
          <xref href="./security-roles.dita" scope="local" format="dita">Roles</xref>.
          
          <p>
            <!-- Vertical space -->
          </p>
          
        </li>
        
        <li>
          <i>Role</i>: An entity associated with a fixed set of privileges. The
          association of privileges to roles is described in
          <xref href="./security-roles.dita" scope="local" format="dita">Roles</xref>.
          
          <p>
            <!-- Vertical space -->
          </p>
          
        </li>
        
        <li>
          <i>User</i>: An identity, recognized by Couchbase Server, based on the passing
          of a <i>username</i> and <i>password</i>. A user can be assigned one or more 
          <i>roles</i>: the privileges associated with each assigned role determine 
          the resource-access granted the user. Users can be <i>local</i> (defined on
          Couchbase Server) or <i>external</i> (defined on a remote, network-accessible
          system). Each user might be an administrator or an application. For information on how to
          manage users, see
          <xref href="./security-rbac-user-management.dita" scope="local" format="dita">RBAC User
          Management</xref>.
        </li>
        
      </ul>
      
    </section>
    
    <section>
      
      <title>
        RBAC Security Model
      </title>
      
      <p>
      Couchbase RBAC controls access to cluster-resources. Resources can only
      be accessed by users. A user may be an administrator or an application.
      </p>
      
      <p>
      Users are added to Couchbase Server by the Full Administrator. Each user
      must be defined with a username and password. When attempting to access
      resources, each user must authenticate by means of these credentials.
      </p>
      
      <p>
      Users may be defined locally (in which case their password is defined on
      Couchbase Server) or externally (in which case their
      password is defined on a remote system, such as an LDAP server). These two
      forms of definition constitute separate <i>Authentication Domains</i>; each being its
      own separate namespace, with no clash of usernames possible across
      namespaces. See 
      <xref href="./security-authentication.dita" scope="local" format="dita">Authentication</xref>,
      for more information.
      </p>
      
      <p>
      A user can be assigned one or more
      roles by the Full Administrator. Each role is itself associated with a subset 
      of privileges; a
      privilege being a form of action, such as Read, Write, Execute, 
      or Manage. Each privilege is associated with a resource; such as a
      bucket, index, view, or DCP stream.
      </p>
      
      <p>
      For example, the Data Reader role features the Read privilege, which is
      applied to the 
      data of a bucket. When a user has been assigned the Data Reader role, 
      and attempts to gain read-access to the bucket's data by submitting their
      credentials, Couchbase Server identifies the user, recognises their assigned role and
      privilege, and duly
      authorises read-access. 
      </p>
      
      <!-- to be added
      <p>
      In the following diagram the Data Reader role has been assigned to two different
      users. Assigned privileges differ; and consequently, the users have access to
      different resources. 
      </p>
      -->
      
      <p>
      Note that resource-access can optionally be specified by means of
      <i>parameterisation</i>. This means that a wildcard character has been used, during
      role-assignment, to specify that a privilege applies to all resource-instances
      within a resource-class: for example, to all buckets.
      </p>
      
    </section>
    
  </body>
  
</topic>
