<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE concept PUBLIC "-//OASIS//DTD DITA Concept//EN" "concept.dtd">
<concept id="security-client-ssl">
	<title>Secure Data Access</title>
	<shortdesc>Couchbase Server client libraries support client-side encryption using the Secure
		Sockets Layer (SSL) and Transport Layer Security (TLS).</shortdesc>
	
		
	<conbody>
		<note>Couchbase Server and SDKs support TLS v1.0 - 1.2 by default. Which version is used depends
			on the client and server version. Older versions might still use SSL and should be
			upgraded to newer version of the SDK.</note>
		<p>Encryption for data access is performed through client-server communication and view
			access.</p>
		

		<section><title>SSL/TLS Based Client-server Communication </title><p>Couchbase Server client
				libraries support client-side encryption using the SSL/TLS protocol by encrypting
				data in-flight between the client and the server. For Couchbase clients released
				after version 2.0, Couchbase Server provides secure client-server communication that
				does not require configuration. </p><p>When a TLS connection is established, a
				handshaking, known as the <term>TLS Handshake Protocol</term>, occurs. Within this
				handshake, a client hello (<codeph>ClientHello</codeph>) and a server hello
					(<codeph>ServerHello</codeph>) message are passed (RFC 5246). First, the client
				sends a cipher suite list, a list of the cipher suites that it supports, in order of
				preference. Then the server replies with the cipher suite that it has selected from
				the client cipher suite list. Check whether your clients support TLS. </p><p>To
				enable SSL/TLS on the client side, you need to get a certificate from Couchbase
				Server and then follow the steps specific to the client you are using.  </p><p>To
				obtain the certificate, access the Couchbase Web Console, navigate to <menucascade>
					<uicontrol>Settings</uicontrol>
					<uicontrol>Certificate</uicontrol>
					<uicontrol>Show certificate</uicontrol>
				</menucascade> and copy the certificate. </p><note type="note">The certificate that
				is obtained is a self-signed server-generated certificate. </note><note type="note"
				>If the Couchbase Server certificate is re-generated, you must obtain a new
				certificate. </note><p>The following clients support SSL/TLS: </p><ul>
				<li>Java</li>
				<li>.NET</li>
				<li>Node.js</li>
				<li>PHP</li>
				<li>C</li>
				<li>Go </li>
			</ul><note type="note">Use the Couchbase network port <codeph>11207</codeph> for data
				communication between the client and the data nodes using SSL/TLS.
					</note><p><b>SSL/TLS Based View Access</b>
			</p><p>A new port <codeph>18092</codeph> is established for view access:
					<codeph>https://couchbase_server:18092</codeph>
			</p><p><b>Supported Ciphers</b></p> Couchbase Server uses the ciphers that are accepted
			by default by OpenSSL. <p>The default is to have high-security ciphers built in with
				openSSL. For example, on the MAC OS these are: <ul>
					<li>AES256-SHA...YES</li>
					<li>AES128-SHA...YES</li>
					<li>DES-CBC3-SHA...YES </li>
				</ul></p><p>You can override this selection by setting the environment variable
				before starting Couchbase as follows:
					</p><p><codeph>COUCHBASE_SSL_CIPHER_LIST</codeph>= &lt;<varname>list of ciphers
					to accept</varname>&gt; </p><p>Set the variable to
					<codeph>COUCHBASE_SSL_CIPHER_LIST= MEDIUM, HIGH</codeph> to include only medium-
				and high-security ciphers for your installation.</p> For example, on the MAC OS
			these are: <ul>
				<li>SEED-SHA...YES</li>
				<li>AES256-SHA...YES</li>
				<li>AES128-SHA...YES</li>
				<li>DES-CBC3-SHA...YES</li>
				<li>RC4-SHA...YES</li>
				<li>RC4-MD5...YES</li>
				<li>RC4-MD5...YES </li>
			</ul></section>
		</conbody></concept>
