<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE topic PUBLIC "-//OASIS//DTD DITA Topic//EN" "topic.dtd">
<topic id="topic_gp4_1yl_s5">
  <title>X.509 Certificates for TLS</title>
  <body>
    <p>Couchbase Server 4.5 Enterprise Edition supports X.509 certificates for Transport Layer
      Security (TLS).</p>
    <p>With X.509 certificates, Couchbase Server can strongly encrypt client-server communications
      and <xref href="http://developer.couchbase.com/documentation/server/4.1/xdcr/xdcr-intro.html"
        format="html" scope="external">XDCR</xref> (Cross Data Center Replication).</p>
    <p><image href="pict/ca_sys_diagram.png" id="image_gnp_5mk_y5" width="570"/></p>
    <p>With CA-based certificates, you also get simplified certificate management and certificate
      rotation without client downtime. Full administrators in Couchbase can manage certificates
      using the Couchbase CLI tools (as described in <xref
        href="../cli/cbcli/couchbase-cli-ssl-manage.html" format="html"/>) or REST SPI (as described in  <xref
        href="../rest-api/rest-x509.dita#reference_ytt_hdx_hv"/>).</p>
    <note type="note">Your prior knowledge of TLS/SSL, PKI certificates including X.509
      certificates, and Certificate Authorities (CAs) is assumed for this overview. </note>
    
   <section><title>When to use X.509 Certificates</title><p>An X.509 certificate does more than just
        distribute the public key: it is signed by a trusted (internal or third-party) CA and
        verifies the identity of the server so that clients know their information is not being sent
        to a rogue
      server.</p>
    <p>Some common scenarios which may require use of X.509 certificates are:</p>
        <ul id="ul_j3z_b1k_1v">
        <li>In production where clients have to go through the internet.</li>
        <li>When transferring sensitive data on the wire between application and Couchbase Server,
          or between data centers (XDCR).</li>
        <li>When mandated by regulatory compliance regulations.</li>
      </ul></section>
    

    <section> <title>CA Hierarchies Supported by Couchbase</title>
      <p>Couchbase customers can tie Couchbase Server with their CA hierarchies. The CA at the top
        of a hierarchy is called the root authority, or root CA. There are two types of CA
        hierarchies supported by Couchbase: single- or n-tier. </p>
      
      <dl>
        <dlentry>
          <dt>Single-Tier Hierarchy</dt>
          <dd>In its simplest form, the single-tier hierarchy starts with a root CA. <p><image
                href="pict/ca_single_tier.png" id="image_my1_wmk_y5" align="left"/></p><p>For
              example, as shown in the figure above, the root CA is also the issuing CA. All
              certificates immediately below the root certificate inherit its trustworthiness and
              can be used to secure systems. </p><p>Although this is the simplest form of CA
              hierarchy, most enterprises use an N-tier CA hierarchy as described next.</p></dd>
        </dlentry>
      </dl>
      <dl>
        <dlentry>
          <dt>N-Tier Hierarchy</dt>
          <dd>Typically, in many production deployments, a hierarchy will have multiple
                CAs.<p><image href="pict/ca_n_tier.png" id="image_t1g_ymk_y5" align="left" width="570"/>
            </p></dd>
          <dd>In a multi-tier hierarchy, the root CA issues certificates to the intermediate CAs,
            which in turn generate intermediate certificates used to sign the client certificates
            such as a cluster certificate:<ul>
              <li>Trusted root CA > Intermediate CA > Cluster certificate</li>
              <li>Trusted root CA > Intermediate CA 1 > Intermediate CA 2.... > Intermediate CA N >
                Cluster certificate </li>
            </ul><p>When you need to regenerate the intermediate certificate, ensure that the chain
              can be verified up to the root CA. </p><p>If all intermediate certificates are not
              installed on your server, some clients might think you are on an insecure connection.
              This results in 'untrusted' warnings like the following:</p><p><image
                href="pict/back-to-safety.png" id="image_ofr_hg1_z5" align="left" width="570"/>
            </p><p>To avoid such warnings, a server should always send a complete trust chain. The
              trust chain contains your certificate concatenated with all intermediate
              certificates.</p>
          </dd>
        </dlentry>
      </dl>
    
    </section>
    
   
  </body>
</topic>
