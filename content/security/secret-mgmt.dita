<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE topic PUBLIC "-//OASIS//DTD DITA Topic//EN" "topic.dtd">
<topic id="topic_s2r_2yt_gy">
  <title>Secret Management and Hardening</title>
  <shortdesc>Using the Secret Management functionality, Couchbase Server provides a way to
    securely manage server secrets, which helps hardening of Couchbase Server. This feature allows
    businesses to fulfill important requirements around their server secrets (such as passwords)
    needed for compliance.</shortdesc>
  <body>
    <note>Secret Management is an Enterprise Edition only feature.</note>
    <p>A secret is something you don't want anyone to know, for Couchbase Server these
      are entities such as administrator and bucket passwords. Secrets must be stored in a secure
      way and access to these secrets must be controlled to reduce the risk of accidental exposure.
      With secret management in Couchbase Server, secrets are written to disk in encrypted format.
      Couchbase uses an AES 256-bit algorithm in GCM mode to encrypt secrets using an encryption
      hierarchy as shown in the following illustration.</p>
    <p>
      <image href="pict/secret-mgmt.png" width="570" id="image_secret_mgmt"/></p><p>
    To make use of this feature, set the master password for each Couchbase Server node.
    The master password is at the top of the encryption hierarchy. The master password is either user
      specified or inserted into the system using a system environment variable
        <codeph>CB_MASTER_PASSWORD</codeph>. If the environment variable is not
      set, Couchbase Server waits until the master password is specified using the prompt. Couchbase
      recommends that you use a strong master password.</p>
    <p>When you specify a master password, Couchbase Server derives a master key from that password. This
      zero-knowledge password design hardens the Couchbase Server system. </p>
    <p>To bootstrap the system, the master key is used to open the encrypted data key. The decrypted
      data key is then used to open the encrypted secrets, and the secrets are used to start
      Couchbase Server. </p>
    <note>This is primarily a production feature for hardening Couchbase Server security. If you do not
    wish to make use of this feature then you do not have to set a master password.</note>
    
    <section id="section_password_rotation">
      <title>Password Rotation</title>
      <p>With Secret Management, you can rotate your secrets at different levels of the
        key hierarchy periodically or in the event of a breach. </p>
      <p>
        <ul id="ul_kdl_mzt_gy">
          <li>Master password rotation - This first level of rotation can be achieved by setting a
            new password using the CLI or REST API. Couchbase Server allows the flexibility of setting one
            master password per node. </li>
          <li>Data key rotation - This second level of rotation can be done by changing the data key
            using the CLI or REST API. </li>
          <li>Secret rotation - This third level of rotation can be done by changing the values of
            the secrets. For example, to reset the administrator password secrets use the <xref
              href="../cli/cbcli/reset-admin-password.dita">couchbase-cli reset-admin-password</xref>
            command.</li>
        </ul>
      </p><p>For better security, you can rotate your password anytime without any application downtime, and
        all rotation requests are audited by Couchbase Server if the <xref
          href="security-auditing.dita#topic_a5p_npm_lq">auditing</xref> option is enabled. </p>
    </section>
    <section id="section_configure_master_password">
      <title>Configuring the Master Password</title>
      <p>You can set the master password by using the environment variable or during the initial
        startup using the prompt.</p>
      <p>To indicate Couchbase Server to <i>encrypt</i> secrets using the new master password, use
        the REST API or CLI command, for example, run the following CLI command: </p>
      <p><codeph>couchbase-cli master-password –c &lt;server-ip>:8091 –u Administrator –p password
          —new-password</codeph></p>
      <p>At this point, you’ll be asked to enter a new master password to encrypt your node's
        secrets. For example, you can specify a strong password such as "P@$$wor4".</p>
      <p>
        <note>The above step must be repeated for every Couchbase Server node in the cluster. The secret
          management <cmdname>couchbase-cli</cmdname> commands must be run on the same node that the
          server is on.</note>
      </p>
      <p>To indicate Couchbase Server to <i>decrypt</i> secrets, follow one of the following
        options: </p>
      <p>Set the environment variable to indicate Couchbase Server to read the password from the
        environment variable. <note>If Couchbase Server is started as a service, make sure the environment variable is
          available to the service, otherwise, if Couchbase Server is started as a script, then use
          the <cmdname>export</cmdname> command.</note></p>
      
      <p>For example, on Ubuntu, use the bash shell terminal to run the following command: </p>
      <p><codeph>export CB_MASTER_PASSWORD=P@$$wor4</codeph>
        <note>If you’re a developer and wants to try out secret management on Mac OS X, you may want
          to consider the following: <p>On Mac OS X version, exporting the
              <codeph>CB_MASTER_PASSWORD</codeph> environment variable will not work with Couchbase
            Server. Instead, open the <filepath>/Applications/Couchbase
              Server.app/Contents/Resources/start-server.sh</filepath> script and add the export
            variable in that file.</p></note></p>
      <p>To set the master password using the prompt:<ol id="ol_rkj_wmd_3y">
          <li>Set the environment variable to indicate Couchbase Server to wait for the master
            password to be submitted via prompt:<p dir="ltr"><codeph>export
                CB_WAIT_FOR_MASTER_PASSWORD=true</codeph></p></li>
          <li>Run the following command to manually enter the password for a
                server:<p><codeph>couchbase-cli master-password -c &lt;server-ip>:8091
                --send-password</codeph></p></li>
        </ol>
        This script allows you three attempts to correctly enter the password. 
      <note> By default, Couchbase Server reads the
          environment variable to decrypt secrets on startup. If you are starting Couchbase Server using a
          script, after setting the environment variable for a password prompt using command line
          you must restart Couchbase Server, and in another prompt manually enter the password using
          the CLI command. </note></p><p>To rotate your server secrets using the CLI command, see <xref
          href="../cli/cbcli/master-password.dita#reference_b1h_jnt_gy">master-password</xref> for
        details. </p>
      <p>To rotate your server secrets using the REST API, see <xref
          href="../rest-api/rest-secret-mgmt.dita#topic_jdz_bd3_hy">Secret Management API</xref> for
        details.</p>
    </section>  
  </body>
  
</topic>
