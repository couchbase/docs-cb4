<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE topic PUBLIC "-//OASIS//DTD DITA Topic//EN" "topic.dtd">
<topic id="topic_s2r_2yt_gy">
  
  <title>
    Secret-Management
  </title>
  
  <shortdesc>
    <i>Secret-Management</i> provides a way of
    managing server-secrets. This increases the security of your data, and potentially 
    makes it easier to meet compliance-requirements.
  </shortdesc>
  
  <body>
    
    <section id="secret-management">
      
      <title>
        Understanding Secret-Management
      </title>
      
      <!-- We need a good description of secrets here.
        -->
      
      <p>
        <i>Secret-Management</i> (which is an Enterprise Edition feature of Couchbase Server) allows secrets
        to be written to disk in encrypted format. <i>Secrets</i> are Couchbase Server-defined, and include
        system-essential passwords and certificates.
        Couchbase uses an AES 256-bit algorithm in GCM mode, to encrypt secrets using an encryption
        hierarchy; as shown in the following illustration.
      </p>
    
      <p>
        <image href="pict/secret-mgmt.png" width="570" id="image_secret_mgmt"/>
      </p>
      
    </section>
    
    <section>
      <title>
        Setting the Master Password
      </title>
      
      <p>
        Secret-Management is an optional feature that only works when the <i>master password</i> is set for each Couchbase Server node. This
        can be specified by means of the
        <xref href="../cli/cbcli/couchbase-cli-master-password.html" scope="local" format="html">master-password</xref> CLI command;
        the REST API 
        <xref href="../rest-api/rest-secret-mgmt.dita" scope="local" format="dita">POST /node/controller/changeMasterPassword</xref> method;
        and (on all supported operating systems other than Mac OS X) by explicitly 
        setting the <codeph>CB_MASTER_PASSWORD</codeph> environment variable, at the command-prompt.
      </p>
      
      <p>
        Note that since the <codeph>CB_MASTER_PASSWORD</codeph> does not work with Couchbase Server
        on Mac OS X, Mac developers should open the 
        <codeph>/Applications/Couchbase Server.app/Contents/Resources/start-server.sh</codeph> 
        script, and add the export variable to that file.
      </p>
        
      <p>
        When you specify the master password, Couchbase Server derives a <i>master key</i> from that password, using
        the strong <i>Key Derivation Function</i> PBKDF2. Couchbase Server
        also creates a random
        <i>data key</i>, which is then encrypted with the master key. The data key will be used to encrypt all secrets
        on disk, using an AES 256-bit algorithm, in GCM mode. To bootstrap the system, the master key is used to open
        the encrypted data key; the data key is then used to open the encrypted secrets; and the secrets are then used
        to start Couchbase Server.
      </p>
      
      <!-- The following paragraph needs review. I'm not sure I have this right, yet.
        -->
      
      <p>
        If you establish the master password by setting the environment variable for the current node while Couchbase
        Server is running, Couchbase Server performs encryption on secrets from that point. However, 
        by default, the <i>decryption</i> of secrets relies on Couchbase Server having
        read the environment variable on startup. Therefore, if Couchbase Server has already been started as a service at the
        time you set the environment variable, you
        must explicitly make the newly established variable available to the service. If Couchbase Server has already been started
        as a script, you must use the <codeph>export</codeph> command, to make it available to the script.
      </p>
      
      <p>
        From Couchbase Server 4.6.2 onwards, on initial start-up, Couchbase Server waits by default for the master
        password to be entered at the prompt. Enter the password by means of the CLI command with 
        the <codeph>--send-password</codeph> option:
      </p>
        
        <codeblock>couchbase-cli master-password -c <i>server-ip-address</i>:8091 --send-password</codeblock>
      
      <p>
        This CLI command allows you three attempts to enter the password correctly.
      </p>
        
      <p>
        Note that Couchbase Server 4.6.0 and 4.6.1 do <i>not</i> wait by default for the master password to be entered. To
        make them do so, set the following, additional environment variable:
      </p>
      
      <codeblock>export CB_WAIT_FOR_MASTER_PASSWORD=true</codeblock>

    </section>
    
    <section id="password_rotation">
      
      <title>
        Performing Rotation
      </title>
      
      <p>
        The Couchbase Server Secret-Management system allows you to <i>rotate</i> (periodically change, to reduce
        the risk of illicit discovery or deciphering) the different elements of the system:
      </p>
      
      <p>
        <ul id="ul_kdl_mzt_gy">
          
          <li>
            <b>Master-password rotation</b>: This <i>first level of rotation</i> is achieved by setting a
            new password, using the 
            <xref href="../cli/cbcli/couchbase-cli-master-password.html" scope="local" format="html">CLI command</xref>, the
            <xref href="../rest-api/rest-secret-mgmt.dita" scope="local" format="dita">REST API method</xref>, 
            or (other than on Mac OS X) the environment variable, as indicated above. One
            master password per node needs to be set. 
            
            <p>
              <!-- Vertical space -->
            </p>
            
          </li>
          
          <li>
            <b>Data-key rotation</b>: This <i>second level of rotation</i> is achieved by changing the data-key,
            using the <xref href="../cli/cbcli/couchbase-cli-master-password.html" scope="local" format="html">CLI command</xref> with
            the <codeph>--rotate-data-key</codeph> option, or the REST API 
            <xref href="../rest-api/rest-secret-mgmt.dita#topic_jdz_bd3_hy" scope="local" format="dita">POST /node/controller/rotateDataKey</xref> method.
          
            <p>
              <!-- Vertical space -->
            </p>
            
          </li>
          
          <li>
            <b>Secret rotation</b>: This <i>third level of rotation</i> is achieved by changing the values of
            the secrets themselves. For example, to reset the secret that is an administrator password, use the 
            <xref href="../cli/cbcli/couchbase-cli-reset-admin-password.html" format="html">couchbase-cli reset-admin-password</xref>
            command.
            
            <p>
              <!-- Vertical space -->
            </p>
          
          </li>
          
        </ul>
        
      </p>
      
      <p>
        Note that if the 
        <xref href="security-auditing.dita#topic_a5p_npm_lq">auditing</xref> option is enabled, all rotation-requests
        are audited by Couchbase Server. 
      </p>
      
    </section>
    
  </body>
  
</topic>
