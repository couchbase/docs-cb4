<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE concept
 PUBLIC "-//OASIS//DTD DITA Concept//EN" "concept.dtd">
<concept id="compression">
    <title>Compression</title>
    <shortdesc id="shortdesc">In response to increasing volumes of data being sent over the wire, Couchbase Data Platform now provides data compression between the SDK and Couchbase Server.</shortdesc>
    <prolog>
        <metadata>
            <othermeta name="langSelector" content="hidden"/>
        </metadata>
    </prolog>
  <conbody>
        <section id="architecture">
            <title>Overview</title>
            <p>Documents may already be stored compressed with Snappy. Now documents may be passed from client applications to the server in compressed form, saving around 40% in bandwidth, and also transmission time. These operations take place automatically, after <codeph>HELLO</codeph> negotiation with the server, and do not require any changes on the client side, beyond updating to a recent SDK version with compression support (see release notes).</p>
        </section>

        <section id="limits">
            <title>Limits</title>
            <p>The document must be below 20MB in size in both compressed and uncompressed form. Compression 
              is only available in the Enterprise Edition of Couchbase Data Platform.</p>
        </section>


        <section id="Modes">
            <title>Operating Modes</title>
              <p>The three modes in which compression can be used, “off”, “passive” and “active”, are per bucket configuration settings on the cluster. Depending on how it is set, the HELLO negotiation will fail or succeed. The <codeph>HELLO</codeph> flag for compression has the value <codeph>0x0a</codeph> and is defined as:
<codeblock>PROTOCOL_BINARY_FEATURE_SNAPPY = 0x0a</codeblock></p>
              <table frame="all" rowsep="1" colsep="1" id="compression-operating-modes">
                <title>Compression Operating Modes</title>
                  <tgroup cols="4">
                    <colspec colname="action" colnum="1" colwidth="1*"/>
                    <colspec colname="off" colnum="2" colwidth="1*"/>
                    <colspec colname="passive" colnum="3" colwidth="1*"/>
                    <colspec colname="active" colnum="4" colwidth="1*"/>
                    <thead>
                        <row>
                            <entry></entry>
                            <entry><b>OFF</b></entry>
                            <entry><b>PASSIVE</b></entry>
                            <entry><b>ACTIVE</b></entry>
                        </row>
                    </thead>
                    <tbody>
                        <row>
                            <entry>Sending SNAPPY feature with HELLO</entry>
                            <entry>ignore</entry>
                            <entry>acknowledge</entry>
                            <entry>acknowledge</entry>
                        </row>
                        <row>
                            <entry>Sending compressed data when SNAPPY feature <b>enabled</b></entry>
                            <entry>-</entry>
                            <entry>accept</entry>
                            <entry>accept</entry>
                        </row>
                        <row>
                            <entry>Sending compressed data when SNAPPY feature <b>disabled</b></entry>
                            <entry>reject as invalid</entry>
                            <entry>reject as invalid</entry>
                            <entry>reject as invalid</entry>
                        </row>
                        <row>
                            <entry>Receiving data which were previously compressed on the server</entry>
                            <entry>server inflates and sends plain data</entry>
                            <entry>server sends compressed data</entry>
                            <entry>server sends compressed data</entry>
                        </row>
                        <row>
                            <entry>Receiving data which were <b>not</b> previously compressed on the server</entry>
                            <entry>server sends plain data</entry>
                            <entry>server sends plain data</entry>
                            <entry>server might send compressed data (the compression is done in the background on the server)</entry>
                        </row>
                    </tbody>
                  </tgroup>
              </table>
            <p></p>

        </section>


        <section id="guarantee">
            <title>Acceptance Guarantee</title>
            <p>The server may change compression settings for the bucket at any time, but it is guaranteed that once the socket negotiates compression through <codeph>HELLO</codeph>, the server will never reject compressed data, even if the bucket setting has been changed.</p>
        </section>


        <section id="threshold">
            <title>Minimum Size</title>
            <p>While the tiniest of documents will not be reduced in size by compressing, there is another category of slightly larger documents in whose case the time overhead of compressing and decompressing outweighs the slight advantage of marginally reduced transmission time from client to server or back.</p>
            <p>To safeguard against the case of several thousand documents stealing CPU time to barely discernable advantage, a threshold for minimum doument size to compress is set in the SDK, with a sensible default value - that value can be seen for your chosen SDK in its API documentation (normally 32 bytes), and you can override this to disable compression:<ul>
             <li>For Java, to disable compression from client to server, <xref href="http://docs.couchbase.com/sdk-api/couchbase-core-io-1.6.0/com/couchbase/client/core/env/DefaultCoreEnvironment.Builder.html#compressionMinSize-int-" format="html" scope="external">set <codeph>compressionMinSize</codeph> to max int (2147483647)</xref>. Alternatively, to disable compression in both directions, set the Java system property <codeph>com.couchbase.snappyEnabled</codeph> to <codeph>False</codeph>.</li>
             <li>For .NET, Snappy compression is not currently supported.</li>
             <li>For SDKs using LCB's connstr (Node.js, PHP, Python), override the default with <codeph>"compression=off"</codeph> in your connection string. Additionally, for Python you can set the <codeph>couchbase.bucket.Bucket.compression</codeph> property to <codeph>COMPRESS_NONE</codeph>.</li>
             <li>For Go, can also be disabled by using <codeph>compression=off</codeph> in the connection string.</li></ul></p>
        </section>
    </conbody>
</concept>
