<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE topic PUBLIC "-//OASIS//DTD DITA Topic//EN" "topic.dtd">
<topic id="java-fts">
    <title>Full Text Search (FTS) using the C (libcouchbase) SDK with Couchbase Server</title>
    <titlealts><navtitle>Searching from the SDK</navtitle></titlealts>
    <shortdesc>You can use the Full Text Search service (FTS) to create queryable full-text indexes
        in Couchbase Server. This page describes how to use Full Text Search using the C
        SDK.</shortdesc>
    <body>
        <p>Couchbase offers Full-Text search support, allowing you to search for documents that
            contain certain words or phrases. In the C SDK, you can search full-text indexes by
            using the row-based <apiname>lcb_fts_query()</apiname> API (<codeph>#include
                &lt;libcouchbase/cbft.h></codeph> first, though!)</p>
        <p>To use the <apiname>lcb_fts_query</apiname> function, first create an
                <apiname>lcb_CMDFTS</apiname> structure, and populate it with a query. The query
            should be specified as a JSON-encoded string and can be generated using any JSON
            encoder:<codeblock outputclass="language-c">    std::string encodedQuery(
        "{\"query\":{\"match\":\"hoppy\"},\"indexName\":\"beer-search\",\"size\":10}");
    lcb_CMDFTS cmd = { 0 };
    cmd.callback = rowCallback;
    cmd.query = encodedQuery.c_str();
    cmd.nquery = encodedQuery.size();</codeblock><note
                type="tip">See a fully compilable example using FTS from the C SDK: <xref
                    href="https://github.com/couchbaselabs/devguide-examples/blob/server-4.5/c/fts-basic.cc"
                    format="html" scope="external"
                /></note><codeblock outputclass="language-c">static void rowCallback(lcb_t, int, const lcb_RESPFTS *resp)
{
    if (resp->rflags &amp; LCB_RESP_F_FINAL) {
        printf("Status: %d\n", resp->rc);
        printf("Meta: %.*s\n", (int)resp->nrow, resp->row);
        if (resp->htresp) {
            printf("HTTP Response: %.*s\n", (int)resp->htresp->nbody, resp->htresp->body);
        }
    } else {
        printf("Row: %.*s\n", (int)resp->nrow, resp->row);
    }
}</codeblock>Note
            that the <codeph>indexName</codeph> must be present in the query.</p>
        <p>The callback (i.e. <apiname>lcb_CMDFTS::callback</apiname>) is invoked once for each
            query hit, and one more time (with the <apiname>LCB_RESP_F_FINAL</apiname> flag set in
            the <apiname>lcb_RESPFTS::rflags</apiname> field) with the query response metadata. The
            metadata contains things such as response <xref
                href="../full-text-search-overview.dita#full-text-search/facets"
                ><i>facets</i></xref></p>
        <p>Refer to <xref href="../../fts/fts-queries.dita#topic_q2x_tl4_1v"/> for more information
            about the encoded query format.</p>
    </body>
</topic>
