<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE concept PUBLIC "-//OASIS//DTD DITA Concept//EN" "concept.dtd">
<concept id="concept_j3z_zhm_zs">
	<title>Browser and CLI Access</title>
    <shortdesc>You can browse and access documents in Couchbase using browser and command line tools
        without writing any code. This can be helpful to you if you simply wish to inspect cluster
        data without writing code. You can access individual documents using the <i>command line</i>
        and <i>web console</i>.</shortdesc>
    <prolog>
        <metadata>
            <othermeta name="langSelector" content="hidden"/>
        </metadata>
    </prolog>
	<conbody>
        <section id="cli-access"><title>Command-Line</title>You can access documents in Couchbase
            using command line interfaces. You can use the <codeph>cbc</codeph> tool for simple
            document lookups by their IDs (or <i>keys</i>) and the <xref
                href="../n1ql/n1ql-intro/cbq.dita#concept_s5k_qtx_1t">cbq</xref> tool to issue
            N1QL queries. This section will discuss the installation and usage of the
                <codeph>cbc</codeph> tool, and is targeted towards Linux and Mac OS X users (though
                <codeph>cbc</codeph> can also be used on Windows).</section>
        <section><title>Installing the command-line KV client</title>To use the <codeph>cbc</codeph>
            tool, first install the C SDK. Note that you will also need to install the <i>command
                line
                tools</i>.<codeblock spectitle="Debian/Ubuntu" outputclass="language-bash">wget http://packages.couchbase.com.s3.amazonaws.com/releases/couchbase-release/couchbase-release-1.0-2-amd64.deb
sudo dpkg -i couchbase-release-1.0-2-amd64.deb
sudo apt-get update
sudo apt-get install libcouchbase2-bin</codeblock><codeblock spectitle="CentOS/RHEL" outputclass="language-bash">wget http://packages.couchbase.com.s3.amazonaws.com/releases/couchbase-release/couchbase-release-1.0-2-x86_64.rpm
sudo rpm -ivh couchbase-release-1.0-2-x86_64.rpm
sudo yum install libcouchbase2-bin</codeblock><codeblock spectitle="Mac OS X" outputclass="language-bash">brew install libcouchbase</codeblock><note>The
                    <codeph>cbc</codeph> tool is part of the C SDK. Refer to <xref
                    href="c/start-using-sdk.dita#toplevel">C SDK</xref> for other installation
                options.</note></section>
        <section><title>Using the command-line KV client</title>The <codeph>cbc</codeph> command
            contains subcommands that perform various operations on the server. Some subcommands
                are:<ul id="ul_xn5_nhm_zs">
                <li><codeph>cbc create</codeph> (create/update documents)</li>
                <li><codeph>cbc cat</codeph> (retrieve a document)</li>
                <li><codeph>cbc rm</codeph> (remove a document).</li>
            </ul>To point the client at a cluster, provide one of the cluster nodes using the -U
                argument:<screen>$ cbc cat <varname>document-id</varname> -U couchbase://<varname>node-ip-or-hostname</varname></screen><p>You
                can store a document using the <codeph>cbc create</codeph>
                command.</p><codeblock>$ <b>cbc create document_id -V '{"json":"value"}'</b>
document_id         Stored. CAS=0xd0d92f40500</codeblock><note>The
                command line client is not JSON-aware. If dealing with JSON documents, ensure that
                values passed to it are well formed JSON because the <cmdname>cbc</cmdname> program
                does not do any validation.</note><p>You can retrieve a document using the
                    <codeph>cbc cat</codeph>
                subcommand.</p><screen>$ <b>cbc cat document_id</b>
document_id          CAS=0xe0004ea40100, Flags=0x0. Size=16
{"json":"value"}</screen><p>You
                can find out more about the <codeph>cbc</codeph> command by referring to your local
                    <codeph>man</codeph> pages or by viewing its <xref
                    href="https://github.com/couchbase/libcouchbase/blob/master/doc/cbc.markdown"
                    format="html" scope="external">documentation</xref>.</p></section>
        <section>
            <title>Using the command-line query shell (cbq)</title>
            <p>You can use the <xref href="../n1ql/n1ql-intro/cbq.dita#concept_s5k_qtx_1t"
                    >cbq</xref> program as a command line query shell to issue N1QL queries in
                couchbase. <i>cbq</i> is available on all cluster nodes and does not require a
                separate installation. Simply run <i>cbq</i> from the Couchbase installation
                directory (<codeph>/opt/couchbase/bin/cbq</codeph> on Linux and
                    <codeph>"/Applications/Couchbase
                    Server.app/Contents/Resources/couchbase-core/bin/cbq"</codeph>). Once in the
                shell, you should be greeted by a prompt and ready to issue any N1QL
                query.<screen>$ ./cbq
cbq> <b>select airportname FROM `travel-sample` WHERE airportname IS NOT NULL LIMIT 1;</b>
{
    ...
    "results": [
        {
            "airportname": "Abbeville"
        }
    ]
    ...
}</screen></p>
        </section>
        <section id="webui-access">
            <title>Web Console Document Access</title>
            <p>You can use the Web Console to view, edit, and create JSON documents up to 2.5KB in
                size. To access documents using the Web Console:<ol id="ol_lxc_g3m_zs">
                    <li>Navigate your browser to a cluster node. Type the address of the cluster
                        with the admin port (8091). Use your <varname>username</varname> (usually
                            <userinput>Administrator</userinput>). The <varname>password</varname>
                        is the password you used when setting up the cluster.</li>
                    <li>Once logged in, go to the <uicontrol>Data Buckets</uicontrol> section
                                <p><image href="shared/images/webui-buckets.png" width="350px"
                                id="image_zpl_njh_cw"/></p></li>
                    <li>Click on the <uicontrol>Documents</uicontrol> button of the
                            <codeph>default</codeph> bucket: <p><image
                                href="shared/images/webui-documents.png" width="650px"
                                id="image_dwl_4jh_cw"/></p>
                    </li>
                    <li>To retrieve a document, type in the document ID and click on
                            <uicontrol>Lookup ID</uicontrol>. This will then open the document edit
                                page:<p><image href="shared/images/webui-lookup.png" width="300px"
                                id="image_qlq_4jh_cw"/><image
                                href="shared/images/webui-editor-existing.png" width="350px"
                                id="image_vl5_4jh_cw"/></p></li>
                    <li>To create a new document, return to the <uicontrol>Documents</uicontrol>
                        section and click on <uicontrol>Create Document</uicontrol><p><image
                                href="shared/images/webui-create-document.png" width="350"
                                id="image_tq2_pjh_cw"/></p></li>
                    <li>Youâ€™ll be prompted to enter a document ID<p><image
                                href="shared/images/webui-newdoc-prompt.png" width="300px"
                                id="image_q3n_pjh_cw"/></p></li>
                    <li>Once created, you can now edit your document. Don't forget to
                            <uicontrol>Save</uicontrol> when done<p><image
                                href="shared/images/webui-editor-new.png" width="650px"
                                id="image_jrw_pjh_cw"/></p></li>
                </ol></p>
        </section>
        <section>
            <title>Web Console Query Accesss</title>
            <p>You can use the <xref href="../tools/query-workbench.dita#topic_prr_nyh_t5">Query
                    Workbench</xref> to issue queries using the web console.</p>
        </section>
    </conbody>
</concept>
