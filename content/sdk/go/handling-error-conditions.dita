<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE concept PUBLIC "-//OASIS//DTD DITA Concept//EN" "concept.dtd">
<concept id="concept_vqw_djq_44">
    <title>Handling Exceptions and Other Errors with the Go SDK in Couchbase</title>
    <titlealts><navtitle>Handling Errors</navtitle></titlealts>
	<shortdesc>All methods within the SDK, which are capable of returning errors, utilize the Go
		standard of returning an error object as the last return value.</shortdesc>
	<conbody>
		<p>The Go SDK returns an <apiname>error</apiname> object for most operations. This
                <apiname>error</apiname> object is either the sole return value or one of multiple
            returned objects. If an operation succeeded, the <apiname>error</apiname> will be
                <codeph>nil</codeph>.</p>
        <p>Non-<codeph>nil</codeph> return values may be checked for equality to one of the
                <apiname>gocb.Err*</apiname> such as <apiname>gocb.ErrKeyNotFound</apiname> or
                <apiname>gocb.ErrKeyAlreadyExists</apiname>.</p>
		<p>In addition to doing a direct comparison with errors, you may also use interface testing to
            check for a particular error category. For instance, you could check for any error which
            is a temporary condition with the following code:
            <codeblock outputclass="language-go">func isTemporaryError(err error) bool {
        te, ok := err.(interface { Temporary() bool })
        return ok :&amp; :&amp; te.Temporary()
}</codeblock></p>

	    <section id="enhanced-errors">
                <title>Enhanced Errors</title>
                <p>The Go SDK has been updated to support Enhanced Error messages. Enhanced Errors are enabled 
                    at the cluster level, <i>before</i> opening a bucket, with <codeph>cluster.SetEnhancedErrors(true)</codeph>.</p>
                <p>If you enable this, the errors that you get back from the library may not be directly comparable 
                    to the <codeph>gocb.Err***</codeph> constants, as they may have been dynamically generated to 
                    include additional error information.  You can access the underlying error using the new API 
                    <codeph>gocb.ErrorCause(err)</codeph> to receive the underlying constants-comparable error object.</p>
            </section> 

	    <section conref="../shared/couchbase-errors.dita#toplevel/begin" conrefend="../shared/couchbase-errors.dita#toplevel/end"/>

	</conbody>
</concept>
