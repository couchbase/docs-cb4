<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE topic PUBLIC "-//OASIS//DTD DITA Topic//EN" "topic.dtd">
<topic id="threshold-logging">
  <title>Threshold Logging Tracing through the SDK</title>
  <titlealts><navtitle>Threshold Logging</navtitle></titlealts>
    <shortdesc conref="../shared/tracing.dita#tracing/shortdesc"/>
    
    <body>
        <section conref="../shared/tracing.dita#tracing/why_tracing">
        </section>

        <section conref="../shared/tracing.dita#tracing/open_tracing">
        </section>
        
        <section conref="../shared/tracing.dita#tracing/threshold_configuration">
        </section>

            
        <section id="tracing_dot_net">
            <title>
                Threshold Logging in Go
            </title>
            <p>
             Response Time Observability is implemented in the Go SDK from version 1.4 onwards. 
               With <codeph>OperationTracingEnabled</codeph> set to true [the default in Couchbase Server 5.5], <codeph>operation_tracing</codeph> is passed in the cluster 
               connection query string. And with <codeph>OperationTracingServerDurationEnabled</codeph> set [it 
               currently defaults to <codeph>false</codeph>], the <codeph>server_duration</codeph> is passed in the cluster connection 
               query string. This is a brief example of customizing the threshold settings.<codeblock outputclass="language-go">cluster, _ := gocb.Connect("couchbase://localhost”)
// cluster, _ := gocb.Connect("couchbase://localhost?operation_tracing=true&amp;server_duration=true”) example of using connection string options
cluster.Authenticate(gocb.PasswordAuthenticator{
    Username: username,
    Password: password,
})

tracer := gocb.ThresholdLoggingTracer{}
tracer.Interval = 1 * time.Second
tracer.KvThreshold = 500 * time.Millisecond
tracer.ViewsThreshold = 1 * time.Second
tracer.N1qlThreshold = 1 * time.Second
tracer.SearchThreshold = 1 * time.Second
tracer.AnalyticsThreshold = 1 * time.Second
tracer.SampleSize = 20
cluster.SetTracer(&amp;tracer)  // Note that this must come before cluster.OpenBucket</codeblock>
            </p>
        </section>
    </body>
</topic>