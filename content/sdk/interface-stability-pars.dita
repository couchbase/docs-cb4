<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE topic PUBLIC "-//OASIS//DTD DITA Topic//EN" "topic.dtd">
<topic id="toplevel">
  <title>Interface Stability Paragraphs</title>
  <body>
        <section id="interface-stability-section">
            <title>Interface Stability</title>
            <p id="interface-stability-par">The SDK contains multiple APIs of various degrees of stability. In this section,
                stability is indicated to mean:<ul id="ul_uhm_tth_hw">
                    <li><b>Implementation Stability</b>: How thoroughly the implementation has been
                        tested. A stable implementation means one that has been throughly tested and
                        QA'd while an unstable one is new and not fully tested</li>
                    <li><b>Interface Stability</b>: How likely the interface is to change or be
                        removed entirely. A stable interface is one that is guaranteed not to change
                        between versions, meaning that you may use an API of a given SDK version and
                        be assured that the given API will retain the same parameters and behavior
                        in subsequent versions. An unstable interface is one which may appear to
                        work or behave in a specific way within a given SDK version, but may change
                        in its behavior or arguments in future SDK versions, causing odd application
                        behavior or compiler/API usage errors</li>
                </ul>Couchbase uses three interface stability classifiers. You may find these
                classifiers appended as annotations or comments within documentation for each
                    API:<ul id="ul_dzk_f5h_hw">
                    <li><b>Committed</b>: This stability level is used to indicate the most stable
                        interfaces that are guaranteed to be supported and remain stable between SDK
                        versions.</li>
                    <li><b>Uncommitted</b>: This level is used to indicate APIs that are
                            <i>unlikely</i> to change, but <i>may</i> still change as final consenus
                        on their behavior has not yet been reached. <i>Uncommitted</i> APIs usually
                        end up becoming stable APIs.</li>
                    <li><b>Volatile</b>: This level is used to indicate experimental APIs that are
                        still in flux and may likely be changed. It may also be used to indicate
                        inherently private APIs that may be exposed, but "YMMV" (your mileage may
                        vary) principles apply. <i>Volatile</i> APIs typically end up being promoted
                        to <i>uncommitted</i> after undergoing some modifications.</li>
                </ul>APIs that are marked as <i>committed</i> are likely to also have a stable
                implementation, however <i>uncommitted</i> and <i>volatile</i> APIs are not
                necessarily unstable, but are marked as such to indicate that the Couchbase team has
                not made a commitment to these APIs.</p>
        </section>
  </body>
</topic>
