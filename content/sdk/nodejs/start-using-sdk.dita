<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE topic PUBLIC "-//OASIS//DTD DITA Topic//EN" "topic.dtd">
<topic id="toplevel">
    <title>Install and Start Using the Node.js SDK with Couchbase Server</title>
    <titlealts><navtitle>Start Using the SDK</navtitle></titlealts>
    <body>
        <section><title>Installing the Server</title>Install Couchbase Server first, if you haven't
            done so already. Refer to the <xref
                href="../../install/install-intro.dita">installation
                guide</xref> for server installation instructions.</section>
        <section id="install-node"><title>Installing the SDK</title><p>To install the SDK, simply
                use <codeph>npm</codeph>. On non-windows platforms you will also need to install
                    <xref href="https://github.com/nodejs/node-gyp" format="html"
                    scope="external">node-gyp</xref>:</p><codeblock outputclass="language-bash">npm install couchbase </codeblock><p>On 
            the Windows platform using Node.js versions prior to 6.0, manual installation of OpenSSL and 
            the <xref href="#toplevel/standalone-lcb">C SDK (libcouchbase)</xref> is required. It is recommended 
            to use Node.js 6.0 and later.</p>
            <p>Information on new features, fixes, known issues
                as well as information on how to install older release versions is <xref
                    href="/server/other-products/release-notes-archives/nodejs-sdk" format="html"
                    scope="peer">in the release notes</xref>.</p>
        </section>
        <section id="using-node">
            <title>Hello Couchbase</title>
            <p>Once you've installed the SDK, you can run this simple code snippet showcasing some
                of its features. Before running, be sure to replace <i>localhost</i> with the
                hostname of a node in your cluster, if running the SDK on a different host.</p>
            <codeblock outputclass="language-javascript">var couchbase = require('couchbase')
var cluster = new couchbase.Cluster('couchbase://localhost/');
cluster.authenticate('USERNAME', 'PASSWORD');
var bucket = cluster.openBucket('bucketname');
var N1qlQuery = couchbase.N1qlQuery;

bucket.manager().createPrimaryIndex(function() {
  bucket.upsert('user:king_arthur', {
    'email': 'kingarthur@couchbase.com', 'interests': ['Holy Grail', 'African Swallows']
  },
  function (err, result) {
    bucket.get('user:king_arthur', function (err, result) {
      console.log('Got result: %j', result.value);
      bucket.query(
      N1qlQuery.fromString('SELECT * FROM bucketname WHERE $1 in interests LIMIT 1'),
      ['African Swallows'],
      function (err, rows) {
        console.log("Got rows: %j", rows);
      });
    });
  });
});</codeblock>
            <p>The above shows how to <xref
                    href="../core-operations.dita#devguide_kvcore_generic"
                    >upsert</xref> (<i>insert-or-update</i>) a single document and execute a query
                searching for specific criteria, in this case, any user who has an interest in
                African Swallows.</p>
            <p>The code creates a <apiname>Cluster</apiname> object representing a Couchbase
                cluster. A connection to a data bucket is established using
                    <apiname>Cluster.openBucket</apiname>, returning a <apiname>Bucket</apiname>
                object. The returned <apiname>Bucket</apiname> object is then used to perform
                document operations, and then executes a query.</p>
        </section>
        <section>
            <title>Additional Resources</title>
            <ul id="ul_shm_4yg_cw">
                <li>An API reference is generated for each release and can be found at <xref
                        href="http://docs.couchbase.com/sdk-api/couchbase-node-client-2.4.5/"
                        format="html" scope="external"/></li>
                <li>The source code repsitory is at <xref
                        href="https://github.com/couchbase/couchnode" format="html" scope="external"
                    /> where you can see all the latest development. You can also contribute to the
                    project - follow instructions in the source repository</li>
            </ul>
        </section>
        <section id="standalone-lcb"><title>Using an external C SDK</title><p>The node.js SDK comes
                with an embedded version of the C SDK in order to streamline the installation
                experience. It may be necessary to use an external version of the C SDK if you wish
                to:</p><ul id="ul_km5_jsv_tv">
                <li>Use SSL connections with Couchbase</li>
                <li>Use a version of the C SDK contains bug fixes not available in the embedded
                    version</li>
                <li>Develop the SDK itself and wish to speed up build times</li>
            </ul>To install the Node.js SDK using an external C SDK installation, <xref
                href="../c/start-using-sdk.dita#toplevel">install the libcouchbase library</xref> first,
            and point <codeph>npm</codeph> to it during the install.
            <codeblock outputclass="language-bash"># Assuming you have libcouchbase installed in /usr/local
# such that /usr/local/lib/libcouchbase.so (or .dylib) exists:
npm install couchbase --compile --couchbase-root=/usr/local</codeblock></section>
        <section><title>Installing previous versions</title><p>You can install a previous release of
                the SDK using <codeph>npm install couchbase@x.y.z</codeph></p>where
                <codeph>x.y.z</codeph> is the version. For example, to install version 2.0.1,
            use:<codeblock outputclass="language-bash">npm install couchbase@2.0.1</codeblock></section>
    </body>
    </topic>
