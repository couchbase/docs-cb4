<?xml version="1.0" encoding="utf-8"?>
<!DOCTYPE concept
  PUBLIC "-//OASIS//DTD DITA Concept//EN" "concept.dtd">
<concept id="php-at_plus">
  <title>Scan Consistency Using the PHP SDK with Couchbase Server</title>
  <titlealts><navtitle>Using Scan Consistency</navtitle></titlealts>
  <shortdesc>You can balance performance against consistency in N1QL queries via the Couchbase PHP client and the AtPlus option.</shortdesc>
  <conbody>
    <section id="scan_consistency"><p>
        Setting a <xref href="https://developer.couchbase.com/documentation/server/5.1/architecture/querying-data-with-n1ql.html#story-h2-2" 
        format="html" scope="external">Scan Consistency</xref>, lets you choose between <codeph>NOT_BOUNDED</codeph> (the default), for sharpest performance; <codeph>REQUEST_PLUS</codeph>, for strongest consistency; and <codeph>AT_PLUS</codeph>, for a good balance between increased performance and completeness of results.
      </p>

      <p>The following example &#8212; for which mutation tokens must be enabled during connection &#8212; shows AT_PLUS in action:<codeblock  outputclass="language-php">&lt;?php

$cluster = new \Couchbase\Cluster('couchbase://192.168.1.194?fetch_mutation_tokens=true');
$bucket = $cluster->openBucket('default');
$RANDOM_NUMBER = rand(0, 10000000);
$result = $bucket->upsert('user:'.$RANDOM_NUMBER, array(
    "name" => array("Brass", "Doorknob"),
    "email" => "brass.doorknob@example.com",
    "random" => $RANDOM_NUMBER)
);
// construct mutation state from the list of mutation results
$mutationState = \Couchbase\MutationState::from($result);
$query = \Couchbase\N1qlQuery::fromString(
    'SELECT name, email, random, META(default).id FROM default WHERE $1 IN name'
);
$query->positionalParams(['Brass']);
// If this line is removed, the latest 'random' field might not be present
$query->consistentWith($mutationState);
printf("Expecting random: %d\n",  $RANDOM_NUMBER);
$result = $bucket->query($query);
foreach ($result->rows as $row) {
    printf("Name: %s, Email: %s, Random: %d\n", implode(" ", $row->name), $row->email, $row->random);
    if ($row->random == $RANDOM_NUMBER) {
        echo "!!! Found or newly inserted document !!!\n";
    }
    if (getenv("REMOVE_DOORKNOBS")) {
        echo "Removing " . $row->id . " (Requested via env)\n";
        $bucket->remove($row->id);
    }
}</codeblock></p>
    </section>

  </conbody>
</concept>