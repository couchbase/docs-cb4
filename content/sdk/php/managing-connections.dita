<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE concept PUBLIC "-//OASIS//DTD DITA Concept//EN" "concept.dtd">
<concept id="concept_ppz_lhq_44">
 <title>Managing Connections </title>
 <shortdesc>This section shows how to instantiate a client object to connect to a Couchbase cluster
		as well as how to configure encryption. </shortdesc>

<conbody>
	<p>To manage Cluchbase Server connections, you need to configure the client, connect to a bucket,
			and configure SSL.</p>
	<section>
		<title>Configuring the Client</title>

		<p>To configure the client, instantiate a new <codeph>Cluster</codeph> object:</p>
		<codeblock outputclass="language-php">$myCluster = new CouchbaseCluster('couchbase://10.4.4.1,10.4.4.2,10.4.4.3');</codeblock>
		<p>In addition to the connection string passed to the <codeph>Cluster</codeph> object, you can
				include a username and password. The username and password are required to perform
				management operations against your cluster. If you do not use the cluster management
				aspects of the SDK, the user name and password parameters are optional. Keep in mind
				that these credentials are the same ones you use to log in to the Couchbase
				administrator console, not those specified for the bucket itself. </p>
	</section>


	<section>

		<title>Connecting to a Bucket</title>
		<p>To connect to a bucket, call the <codeph>openBucket()</codeph> method against your
			<codeph>Cluster</codeph> instance, passing in the name of the bucket that you want to
			connect to. If no bucket name is specified, the default bucket is opened. The following
			example shows how to connect to a bucket:</p>
		<codeblock outputclass="language-php">$myCluster = new CouchbaseCluster();
$myBucket = $myCluster->openBucket('default');</codeblock>
		<p>In addition to the bucket name, you can optionally include the bucket password if one has been
			defined, as shown in the following example:</p>
		<codeblock outputclass="language-php">$myCluster = new CouchbaseCluster();
$myBucket = $myCluster->openBucket('default', 'password');</codeblock></section>
<section><title>Disconnecting from a
	Bucket</title>
		<p>To close the connection to a bucket, call its <codeph>disconnect()</codeph> method. This method
			queues the disconnection of all open connections and causes any pending operations to fail.
		</p>
	</section>

        <section>
            <title>Scalability and concurrency</title>
            <p>Creating a new <apiname>Bucket</apiname> object is relatively expensive, and keeping
                many idle <apiname>Bucket</apiname> objects will negatively impact server
                performance (if done at a large scale).</p>
            <p>PHP SDK by default uses persistent connections to reuse underlying IO objects if the
                connection strings are the same.</p>
        </section>

        <section conref="../c/managing-connections.dita#toplevel/connstr-begin"
            conrefend="../c/managing-connections.dita#toplevel/connstr-end"/>
</conbody>

</concept>
