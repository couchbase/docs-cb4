<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE topic PUBLIC "-//OASIS//DTD DITA Topic//EN" "topic.dtd">
<topic id="topic_qkc_cnm_qv">
    <title>Install and Start Using the PHP SDK with Couchbase Server</title>
    <titlealts><navtitle>Start Using the SDK</navtitle></titlealts>
    <shortdesc>The Couchbase PHP SDK allows you to connect to a Couchbase cluster from PHP. The
        Couchbase PHP SDK is a native PHP extension and uses the Couchbase high-performance C
        library to handle communicating to the cluster over Couchbase binary protocols. The
        Couchbase PHP SDK is compatible with both PHP 5.6 and 7.0.</shortdesc>
    <body>
        <section><title>Installing on Linux</title>For installation on Linux, install the
                <i>couchbase-release</i> repository, and then install the <i>libcouchbase</i>
            packages. The following examples download and install <i>couchbase-release</i>
            repsitory, a C and C++ compiler, the C SDK development files (<i>libcouchbase-devel</i>
            [RPM] or <i>libcouchbase-dev</i> [DEB]), PHP development files, and finally the PHP SDK
            using
            <i>pecl</i>.<codeblock spectitle="Debian and Ubuntu" outputclass="language-bash"># Only needed during first-time setup:
wget http://packages.couchbase.com/releases/couchbase-release/couchbase-release-1.0-2-amd64.deb
sudo dpkg -i couchbase-release-1.0-2-amd64.deb
# Will install or upgrade packages
sudo apt-get update
sudo apt-get install libcouchbase-dev build-essential php-dev zlib1g-dev
sudo pecl install pcs-1.3.3 # since couchbase-2.2.4
sudo pecl install couchbase</codeblock><codeblock spectitle="RHEL and CentOS" outputclass="language-bash"># Only needed during first-time setup:
wget http://packages.couchbase.com/releases/couchbase-release/couchbase-release-1.0-2-x86_64.rpm
sudo rpm -iv couchbase-release-1.0-2-x86_64.rpm
# Will install or upgrade existing packages
sudo yum install libcouchbase-devel gcc gcc-c++ php-devel zlib-devel
sudo pecl install pcs-1.3.3 # since couchbase-2.2.4
sudo pecl install couchbase</codeblock></section>
        <section><title>Installation on Mac OS X</title><p>To install the library on Mac OS X, first install the de-facto package manager for OS X: <xref
                    href="http://brew.sh/" format="html" scope="external">homebrew</xref>. Once
                    <i>homebrew</i> is
                configured:<codeblock outputclass="language-bash">brew update # get list of latest packages
brew install libcouchbase
# brew install homebrew/php/php{XY}-couchbase, where XY is your version of PHP
brew install homebrew/php/php70-couchbase # for PHP 7.0</codeblock></p>If
            you have PECL installed, you may use <codeph>pecl install couchbase</codeph> to install
            the Couchbase PHP SDK.</section>
        <section><title>Installing on Microsoft Windows</title><p>When using Microsoft Windows,
            download one of the pre-built binaries at
            <xref href="http://developer.couchbase.com/server/other-products/release-notes-archives/php-sdk" format="html" scope="external">Archives</xref>,
            matching your environment or at <xref href="http://pecl.php.net/package/couchbase" format="html" scope="external">PECL</xref>.
            You also have the option of downloading the <xref href="https://github.com/couchbaselabs/php-couchbase"
                format="html" scope="external">source</xref> for the SDK and building it
            directly. </p></section>
        <section><title>Post Installation - Setting up the php.ini</title><p>Once the PHP SDK has been installed, you need to specify
            that the PHP interpreter should load the Couchbase SDK as an extension. To do
            this:<ol id="ol_rr1_cpz_zv">
                <li>Locate the location of your php.ini file. This can be done by <codeph>php
                    --ini</codeph><codeblock outputclass="language-bash">$ php --ini
Configuration File (php.ini) Path: /usr/local/etc/php/7.0
Loaded Configuration File:         /usr/local/etc/php/7.0/php.ini
Scan for additional .ini files in: /usr/local/etc/php/7.0/conf.d
Additional .ini files parsed:      (none)</codeblock></li>
                <li>Insert the following line in the <codeph>php.ini</codeph> file; this should be
                        in the <codeph>[PHP]</codeph> section. If you don't know where that is,
                        simply search for existing commented or uncommented
                            <codeph>extension=</codeph> entries in the
                        file.<codeblock spectitle="Linux and Mac OS">extension=couchbase.so</codeblock><codeblock spectitle="Windows">extension=couchbase.dll</codeblock>
                        The Couchbase SDK (as of 2.2.4) depends on
                        both the JSON and <xref
                        href="https://pecl.php.net/package/pcs"
                        format="html" scope="external">PCS (PHP Code
                        Service) extensions</xref>.  Releases from 2.0.0 through
                        2.2.3 depend only on the JSON extension. Make sure that the load order is correct. For example, if your distribution has just a single
                            <codeph>php.ini</codeph> file, just insert the line after
                            <codeph>extension=json.so</codeph>. If your distribution uses a
                            <codeph>conf.d</codeph>-style, name the file with the Couchbase SDK ini
                        so that it will be alphabetically ordered after the JSON extension. <note
                            type="important">Because the extension depends on the C library
                            (libcouchbase), the shared object <codeph>libcouchbase.so</codeph> or
                                <codeph>libcouchbase.dll</codeph> has to be accessible by the PHP
                            process when loading the extension. On UNIX-like systems no additional
                            steps are necessary, because the libcouchbase package installs shared
                            objects into a common system location. For Windows though, it must be
                            copied into either into a location from the <codeph>PATH</codeph> for
                            the PHP executable or into a directory with like executables (like
                            apache2, IIS or php.exe). This is controlled by your PHP distribution's
                            setup, so see its documentation for further information.</note></li>
            </ol></p></section>
        <p>Information on
            new features, fixes, known issues as well as information on how to install
            older release versions is <xref
                href="/server/other-products/release-notes-archives/php-sdk"
                format="html" scope="peer">in the release notes</xref>.
        </p>
        <section>
            <title>Hello Couchbase</title>
            <p>The Hello Couchbase example consists of one PHP file,
                <filepath>hello-couchbase.php</filepath>. The code opens a connection to
                Couchbase Server, retrieves a document, modifies the document, and stores the
                updated document in the database. Here's the
                <filepath>hello-couchbase.php</filepath> code:</p>
            <codeblock outputclass="language-php" spectitle="hello-couchbase.php"><![CDATA[<?php
$bucketName = "default";

// Connect to Couchbase Server
$cluster = new CouchbaseCluster("couchbase://127.0.0.1");
$bucket = $cluster->openBucket($bucketName);

// Store a document
echo "Storing u:king_arthur\n";
$result = $bucket->upsert('u:king_arthur', array(
    "email" => "kingarthur@couchbase.com",
    "interests" => array("African Swallows")
));

var_dump($result);

// Retrieve a document
echo "Getting back u:king_arthur\n";
$result = $bucket->get("u:king_arthur");
var_dump($result->value);

// Replace a document
echo "Replacing u:king_arthur\n";
$doc = $result->value;
array_push($doc->interests, 'PHP 7');
$bucket->replace("u:king_arthur", $doc);
var_dump($result);

echo "Creating primary index\n";
// Before issuing a N1QL Query, ensure that there is
// is actually a primary index.
try {
    // Do not override default name, fail if it is exists already, and wait for completion
    $bucket->manager()->createN1qlPrimaryIndex('', false, false);
    echo "Primary index has been created\n";
} catch (CouchbaseException $e) {
    printf("Couldn't create index. Maybe it already exists? (code: %d)\n", $e->getCode());
}

// Query with parameters
$query = CouchbaseN1qlQuery::fromString("SELECT * FROM `$bucketName` WHERE \$p IN interests");
$query->namedParams(array("p" => "African Swallows"));
echo "Parameterized query:\n";
var_dump($query);
$rows = $bucket->query($query);
echo "Results:\n";
var_dump($rows);]]></codeblock>
            <p>The console output should look similar to this:</p>
            <screen><![CDATA[Storing u:king_arthur
object(CouchbaseMetaDoc)#4 (5) {
  ["error"]=>
  NULL
  ["value"]=>
  NULL
  ["flags"]=>
  NULL
  ["cas"]=>
  string(10) "eldhjkkzcw"
  ["token"]=>
  NULL
}
Getting back u:king_arthur
object(stdClass)#5 (2) {
  ["email"]=>
  string(24) "kingarthur@couchbase.com"
  ["interests"]=>
  array(1) {
    [0]=>
    string(16) "African Swallows"
  }
}
Replacing u:king_arthur
object(CouchbaseMetaDoc)#6 (5) {
  ["error"]=>
  NULL
  ["value"]=>
  object(stdClass)#5 (2) {
    ["email"]=>
    string(24) "kingarthur@couchbase.com"
    ["interests"]=>
    array(2) {
      [0]=>
      string(16) "African Swallows"
      [1]=>
      string(5) "PHP 7"
    }
  }
  ["flags"]=>
  int(33554438)
  ["cas"]=>
  string(10) "eldhjkkzcw"
  ["token"]=>
  NULL
}
Creating primary index
Primary index has been created
Parameterized query:
object(CouchbaseN1qlQuery)#8 (2) {
  ["options"]=>
  array(2) {
    ["statement"]=>
    string(45) "SELECT * FROM `default` WHERE $p IN interests"
    ["$p"]=>
    string(16) "African Swallows"
  }
  ["adhoc"]=>
  bool(true)
}
Results:
object(stdClass)#11 (3) {
  ["rows"]=>
  array(1) {
    [0]=>
    object(stdClass)#10 (1) {
      ["default"]=>
      object(stdClass)#9 (2) {
        ["email"]=>
        string(24) "kingarthur@couchbase.com"
        ["interests"]=>
        array(2) {
          [0]=>
          string(16) "African Swallows"
          [1]=>
          string(5) "PHP 7"
        }
      }
    }
  }
  ["status"]=>
  string(7) "success"
  ["metrics"]=>
  array(4) {
    ["elapsedTime"]=>
    string(11) "11.623318ms"
    ["executionTime"]=>
    string(11) "11.605128ms"
    ["resultCount"]=>
    int(1)
    ["resultSize"]=>
    int(220)
  }
}]]></screen>
        </section>
        <section>
            <title>API Reference</title>
            <p>The API reference is generated for each version. The API reference for version
                    <keyword keyref="php-current-version"/> is at <xref keyref="php-api-link"/></p>
        </section>
    </body>
</topic>
