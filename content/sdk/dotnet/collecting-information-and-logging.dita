<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE topic PUBLIC "-//OASIS//DTD DITA Topic//EN" "topic.dtd">
<topic id="collecting-information-and-logging-dotnet">
    <title>Collecting Information and Logging in the .NET SDK with Couchbase Server</title>
    <titlealts><navtitle>Collecting Information</navtitle></titlealts>
	<shortdesc>The logging infrastructure in the .NET SDK depends on which .NET runtime you're
    targerting. For applications that are targeting .NET Framework 4.5+ the SDK uses the Apache
    Common Infrastructure Libraries and applications that are targeting .NET Core the SDK uses
    Microsoft.Extensions.Logging.</shortdesc>

    <body>
    <section><title>Logging in applications targeting .NET Framework 4.5+</title>
      <p>The Apache Common Infrstucture libraries provides a common interface for logging adapters.
        The SDK currently uses version 3.3.1 of Common.Logging.</p>
        <p>In order to use logging within the SDK, you need to reference the packages for the
        adapter you want to use. There are adapaters available for all the major logging
        implementations. More information and a list of available adapters is available on the
        project website <xref href="http://net-commons.github.io/common-logging/" format="html"
          scope="external">here</xref>.</p>
      <p>The following steps describe the process for using the Log4Net Adapter with the SDK: </p>
        <ol id="steps">
            <li> Using the NuGet Package Manager in Visual Studio, include the following package in
          your project: <filepath>Common.Logging.Log4Net1213</filepath>
          <image href="images/common-logging-log4net1213.jpg" id="image_tpg_c32_3p"/>
        </li>
            <li>
                <p>In your <filepath>App.Config</filepath> or <filepath>Web.Config</filepath>, add the following elements between
                the <codeph>&lt;configuration> and &lt;/configuration></codeph> tags so that your configuration looks like
                this:</p>
                <codeblock outputclass="language-xml">&lt;?xml version="1.0" encoding="utf-8" ?>
&lt;configuration>
  &lt;configSections>
    &lt;sectionGroup name="common">
      &lt;section name="logging" type="Common.Logging.ConfigurationSectionHandler, Common.Logging" />
    &lt;/sectionGroup>
    &lt;section name="log4net" type="log4net.Config.Log4NetConfigurationSectionHandler, log4net" />
  &lt;/configSections>

  &lt;common>
    &lt;logging>
      &lt;factoryAdapter type="Common.Logging.Log4Net.Log4NetLoggerFactoryAdapter, Common.Logging.Log4Net1213">
        &lt;arg key="configType" value="INLINE" />
      &lt;/factoryAdapter>
    &lt;/logging>
  &lt;/common>

  &lt;log4net>
    &lt;appender name="FileAppender" type="log4net.Appender.FileAppender">
      &lt;param name="File" value="C:\temp\log.txt" />
        &lt;layout type="log4net.Layout.PatternLayout">
          &lt;conversionPattern value="%date [%thread] %level %logger - %message%newline" />
        &lt;/layout>
    &lt;/appender>
    &lt;root>
      &lt;level value="DEBUG" />
        &lt;appender-ref ref="FileAppender" />
    &lt;/root>
  &lt;/log4net>
  
  &lt;startup>
    &lt;supportedRuntime version="v4.0" sku=".NETFramework,Version=v4.5.1" />
  &lt;/startup>
&lt;/configuration>                </codeblock>
                <note>This example creates a FileAppender. There's a wide variety of possible appenders and configuration options you can customize to your liking. For more information regarding customizing your configuration, check out the <xref href="http://logging.apache.org/log4net/release/manual/configuration.html" format="html" scope="external">Log4Net documentation</xref>.</note>
            </li>
        </ol>
    </section>
    <section><title>Logging in applications targeting .NET Core</title>
    <p>As part of the new .NET Core runtime, Microsoft have added a new abstraction interface. This
        is conceptually very similar to the Common.Logging, however has additional support built in
        for ASP.NET 5 and other Microsoft libraries. </p>
      <p>To get logging to work within the .NET SDK, you need will need to add a package for the
        adapater to connect with. There are a number of logging implementations based on
        Mictosoft.Extensions.Logging that can be viewed <xref
          href="https://github.com/aspnet/Logging" format="html" scope="external">here</xref>. There
        are also some basic Microsoft provided adapaters such as Debug, Console and EventLog.</p>
      <p>The following instructions show how to get up and running with the NLog adapater with the
        SDK in an ASP.NET 5 web application:<ol id="ol_ef3_z1c_py">
          <li>Add the following two dependencies to your
            <codeph>project.json</codeph>:<codeblock outputclass="language-json">"dependencies": {
  "NLog.Extensions.Logging": "1.0.0-*",
  "CouchbaseNetClient": "2.4.0"
}</codeblock></li>
          <li>Create a nlog.config in the root of your project, an example config could look like
            this:<codeblock outputclass="language-xml">&lt;?xml version="1.0" encoding="utf-8" ?>
&lt;nlog xmlns="http://www.nlog-project.org/schemas/NLog.xsd"
      xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
      autoReload="true"
      internalLogLevel="Warn"
      internalLogFile="c:\temp\internal-nlog.txt">

  &lt;!-- define various log targets -->
  &lt;targets>
    &lt;!-- write logs to file -->
    &lt;target xsi:type="File" name="ownFile-web" fileName="c:\temp\ownFile-web-${shortdate}.log"
                 layout="${longdate}|${event-properties:item=EventId.Id}|${logger}|${uppercase:${level}}|${message} ${exception}" />
   
    &lt;target xsi:type="File" name="couchbase" fileName="c:\temp\couchbase-${shortdate}.log"
             layout="${longdate}|${event-properties:item=EventId.Id}|${logger}|${uppercase:${level}}|  ${message} ${exception}" />
  &lt;/targets>

  &lt;rules>
    &lt;logger name="Couchbase.*" minlevel="Trace" writeTo="couchbase" final="true" />
    &lt;logger name="*" minlevel="Trace" writeTo="ownFile-web" />
  &lt;/rules>
&lt;/nlog></codeblock></li>
          <li>in startup.cs update<codeph>Configure</codeph> with the
            following:<codeblock outputclass="language-csharp">using NLog.Extensions.Logging;
using Couchbase.Logging;

  public void Configure(IApplicationBuilder app, IHostingEnvironment env, ILoggerFactory loggerFactory)
  {
      loggerFactory.AddNLog();
      LogManager.ConfigureLoggerFactory(loggerFactory);
      ...</codeblock></li>
        </ol></p>
      <p>More details on configuring NLog with Microsoft.Extensions.Logging can be found <xref
          href="https://github.com/NLog/NLog.Extensions.Logging" format="html" scope="external"
          >here</xref>.</p>
    </section>
</body>
</topic>
