<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE concept PUBLIC "-//OASIS//DTD DITA Concept//EN" "concept.dtd">
<concept id="sv-queries">
  <title>Writing Spatial View Functions</title>
  <shortdesc>Spatial views use a single spatial function that is similar to the map function used in
		MapReduce views.</shortdesc>
  <conbody>
    <p>A major difference between MapReduce views and spatial views is that spatial views don't have
			a map and a reduce function, but only a single so-called "spatial function". That function
			is very similar to the map function in MapReduce views. </p>
		<p>Spatial views use a single spatial function that is similar to the map function used in
			MapReduce views.</p>
    <p>To create a spatial view, use the <codeph>emit()</codeph> function. The emit() function
			parameters are  a key and a value. The key must be a multidimensional bounding box. There
			are several ways to define multidimensional bounding boxes. For more information about
			keys, see <xref href="sv-writing-views-keys.dita#sv-writing-views-keys" />. The value can
			be any arbitrary valid JSON.</p>
    <p>Here is an example spatial view function that emits a point with its height:</p>
    <codeblock outputclass="language-javascript">function(doc, meta) {
  if (doc.loc &amp;&amp; doc.height &amp;&amp; doc.name) {
     emit([doc.loc.lon, doc.loc.lat, doc.height], doc.name);
  }
}</codeblock>
    <p>You can put a spatial view function into a design document by using the object name
				<codeph>spatial</codeph> to indicate the nature of the view definition. For example, the
			following design document includes the previous function as a view named
				<codeph>points</codeph>.</p>
    <codeblock outputclass="language-json">{
   "spatial" : {
      "points" : "function(doc, meta) {if (doc.loc  &amp;&amp; doc.height &amp;&amp; doc.name) {
          emit([doc.loc.lon, doc.loc.lat, doc.height], doc.name);}}"
   }
}</codeblock>
    <p>If your document already contains GeoJSON encoded data, you can directly emit that geometry:</p>
    <codeblock outputclass="language-javascript">function(doc, meta) {
  if (doc.geometry &amp;&amp; doc.name) {
     emit([doc.geometry], doc.name);
  }
}    </codeblock>
    <p>To execute the spatial query, use the design document format that uses the embedded spatial
			function. For example, a design document named <codeph>main</codeph> that resides within
			the bucket <codeph>places</codeph> is executed with this URL:
				<codeph>http://[localhost]:8092/places/_design/main/_spatial/points</codeph>.</p>
  </conbody>

</concept>
