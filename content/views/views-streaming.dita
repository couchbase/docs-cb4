<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE concept PUBLIC "-//OASIS//DTD DITA Concept//EN" "concept.dtd">
<concept id="views-streaming">

	<title>Stream-based Views</title>
	<abstract>
		<shortdesc>Stream-based views reduce latency for view updates, providing faster view
			consistency and fresher data.</shortdesc>Views use the streaming protocol, Database
		Change Protocol (DCP). </abstract>


	<conbody>

		<p>With DCP, data does not need to be persisted to disk before retrieving it with a view query.
			DCP offers the following benefits for views: </p>
		<ul>
			<li>Views are updated with key-value data sooner.</li>
			<li>Latency for view updates is reduced.</li>
			<li>Views are more closely synchronized with the data.</li>
		</ul>
		
		<p>The following diagram shows, at a high-level, how stream-based views operate.</p>
		
		<image href="images/stream-based-views.png" width="600px"></image>

		<p>When submitting a view query, a parameter can be included that specifies data freshness
			requirements. The name of the parameter is <codeph>stale</codeph> and it takes the
			following values:</p>

		<ul>
			<li><codeph>ok</codeph>—The server returns the current entries from the index file.</li>
			<li><codeph>update_after</codeph>—The server returns the current entries from the index,
				and then initiates an index update.</li>
			<li><codeph>false</codeph>—The server waits for the indexer to finish the changes that
				correspond to the current key-value document set and then returns the latest entries
				from the view index.</li>
		</ul>

		<p>Every 5 seconds the automatic update process checks whether 5000 changes have occurred. If
			a minimum of 5000 changes occurred, an index update is triggered. Otherwise, no update is
			triggered. When triggered, the indexer requests from DCP all changes since it was last run.
			The default number of changes to check for is 5000, but that number can be configured by
			setting the <codeph>updateMinChanges</codeph> option. The update interval can also be
			configured by setting the <codeph>updateInterval</codeph> option. </p>

		<p>The <codeph>stale=false</codeph> view query argument has been enhanced. When an application
			sends a query that has the <codeph>stale</codeph> parameter set to false, the application
			receives all recent changes to the documents, including changes that haven't yet been
			persisted to disk. It considers all document changes that have been received at the time
			the query was received. This means that using the durability requirements or observe
			feature to block for persistence in application code before issuing the
				<codeph>stale=false</codeph> query is no longer needed. It is recommended that you
			remove all such application level checks after upgrading.</p>


		<note type="other" othertype="Best practice">For better scalability and throughput, we recommend
			that you set the value of the <codeph>stale</codeph> parameter to <codeph>ok</codeph>.
			With the stream-based views, data returned when <codeph>stale</codeph> is set to
				<codeph>ok</codeph> is closer to the key-value data, even though it might not
			include all of it.</note>

	</conbody>

</concept>
