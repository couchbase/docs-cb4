<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE concept PUBLIC "-//OASIS//DTD DITA Concept//EN" "concept.dtd">
<concept id="views-writing-custom-reduce">
 <title>Custom Reduce Functions</title>
 <shortdesc>The <codeph>reduce()</codeph> function has to work slightly differently to the
  <codeph>map()</codeph> function. </shortdesc>
 <conbody>
  
   <p>In the primary form, a <codeph>reduce()</codeph>
    function must convert the data supplied to it from the corresponding
    <codeph>map()</codeph> function.</p>
   <p>The core structure of the reduce function execution is shown the figure below.</p>
   <fig>
    <image href="images/custom-reduce.png" width="480">
     <alt/>
    </image>
   </fig>
   <p>The base format of the <codeph>reduce()</codeph> function is as follows:</p>
   <codeblock>function(key, values, rereduce) {
â€¦

return retval;
}
</codeblock>
   <p>The reduce function is supplied three arguments:</p>
   <ul>
    <li><codeph>key</codeph></li>
   </ul>
   <p>The <codeph>key</codeph> is the unique key derived from the <codeph>map()</codeph>
    function and the <codeph>group_level</codeph> parameter.</p>
   <ul>
    <li><codeph>values</codeph></li>
   </ul>
   <p>The <codeph>values</codeph> argument is an array of all of the values that match a
    particular key. For example, if the same key is output three times,
    <codeph>data</codeph> will be an array of three items containing, with each item
    containing the value output by the <codeph>emit()</codeph> function.</p>
   <ul>
    <li><codeph>rereduce</codeph></li>
   </ul>
   <p>The <codeph>rereduce</codeph> indicates whether the function is being called as part of
    a re-reduce, that is, the reduce function being called again to further reduce the input
    data.</p>
   <p>When <codeph>rereduce</codeph> is false:</p>
   <codeblock>* The supplied `key` argument will be an array where the first argument is the
  `key` as emitted by the map function, and the `id` is the document ID that
  generated the key.

* The values is an array of values where each element of the array matches the
  corresponding element within the array of `keys`.
</codeblock>
   <p>When <codeph>rereduce</codeph> is true:</p>
   <codeblock>* `key` will be null.

* `values` will be an array of values as returned by a previous `reduce()`
  function.
</codeblock>
   <p>The function should return the reduced version of the information by calling the
    <codeph>return()</codeph> function. The format of the return value should match the
    format required for the specified key.</p>

 </conbody>
</concept>
