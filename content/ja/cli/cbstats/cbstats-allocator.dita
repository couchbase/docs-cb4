<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE reference PUBLIC "-//OASIS//DTD DITA Reference//EN" "reference.dtd">
<reference id="cbstats-allocator">
  <title><cmdname>allocator</cmdname></title>
  <shortdesc>Provides information on memory management.</shortdesc>
  <refbody>
    <section>
      <title>Syntax</title>
      <p>Request syntax:</p>
      <codeblock>cbstats [host]:11210 allocator</codeblock>
    </section>
    <section><title>Description</title>
    <p>This command is used to collect information on memory management.</p>
    
    </section>
    <section><title>Options</title>
      <p>None</p>
      
    </section>
    <section>
      <title>Examples</title>
      <p>Example request:</p>
      <codeblock>cbstats 10.5.2.54:11210 allocator</codeblock>
   
 
      <p><b>Response:</b></p>
      <codeblock>
------------------------------------------------
MALLOC:      211296632 (  201.5 MiB) Bytes in use by application
MALLOC: +     11730944 (   11.2 MiB) Bytes in page heap freelist
MALLOC: +     10833696 (   10.3 MiB) Bytes in central cache freelist
MALLOC: +      3404400 (    3.2 MiB) Bytes in transfer cache freelist
MALLOC: +     18832632 (   18.0 MiB) Bytes in thread cache freelists
MALLOC: +      1781920 (    1.7 MiB) Bytes in malloc metadata
MALLOC:   ------------
MALLOC: =    257880224 (  245.9 MiB) Actual memory used (physical + swap)
MALLOC: +      1236992 (    1.2 MiB) Bytes released to OS (aka unmapped)
MALLOC:   ------------
MALLOC: =    259117216 (  247.1 MiB) Virtual address space used
MALLOC:
MALLOC:           8855              Spans in use
MALLOC:             16              Thread heaps in use
MALLOC:           8192              Tcmalloc page size
------------------------------------------------
Call ReleaseFreeMemory() to release freelist memory to the OS (via madvise()).
Bytes released to the OS take up virtual address space but no physical memory.
------------------------------------------------
Total size of freelists for per-thread caches,
transfer cache, and central cache, by size class
------------------------------------------------
class   1 [        8 bytes ] :     7825 objs;   0.1 MiB;   0.1 cum MiB
class   2 [       16 bytes ] :     1149 objs;   0.0 MiB;   0.1 cum MiB
class   3 [       32 bytes ] :    47076 objs;   1.4 MiB;   1.5 cum MiB
class   4 [       48 bytes ] :    51137 objs;   2.3 MiB;   3.9 cum MiB
class   5 [       64 bytes ] :     3987 objs;   0.2 MiB;   4.1 cum MiB
class   6 [       80 bytes ] :     5528 objs;   0.4 MiB;   4.5 cum MiB
class   7 [       96 bytes ] :    18530 objs;   1.7 MiB;   6.2 cum MiB
class   8 [      112 bytes ] :    39207 objs;   4.2 MiB;  10.4 cum MiB
class   9 [      128 bytes ] :    25812 objs;   3.2 MiB;  13.6 cum MiB
class  10 [      144 bytes ] :      399 objs;   0.1 MiB;  13.6 cum MiB
class  11 [      160 bytes ] :      321 objs;   0.0 MiB;  13.7 cum MiB
class  12 [      176 bytes ] :      201 objs;   0.0 MiB;  13.7 cum MiB
class  13 [      192 bytes ] :      162 objs;   0.0 MiB;  13.7 cum MiB
class  14 [      208 bytes ] :       70 objs;   0.0 MiB;  13.7 cum MiB
class  15 [      224 bytes ] :       77 objs;   0.0 MiB;  13.8 cum MiB
class  16 [      240 bytes ] :       72 objs;   0.0 MiB;  13.8 cum MiB
class  17 [      256 bytes ] :       81 objs;   0.0 MiB;  13.8 cum MiB
class  18 [      288 bytes ] :       38 objs;   0.0 MiB;  13.8 cum MiB
class  19 [      320 bytes ] :       52 objs;   0.0 MiB;  13.8 cum MiB
class  20 [      352 bytes ] :      112 objs;   0.0 MiB;  13.9 cum MiB
class  21 [      384 bytes ] :       44 objs;   0.0 MiB;  13.9 cum MiB
class  22 [      416 bytes ] :       18 objs;   0.0 MiB;  13.9 cum MiB
class  23 [      448 bytes ] :       60 objs;   0.0 MiB;  13.9 cum MiB
class  24 [      480 bytes ] :       77 objs;   0.0 MiB;  13.9 cum MiB
class  25 [      512 bytes ] :     2726 objs;   1.3 MiB;  15.3 cum MiB
class  26 [      576 bytes ] :      114 objs;   0.1 MiB;  15.3 cum MiB
class  27 [      640 bytes ] :       84 objs;   0.1 MiB;  15.4 cum MiB
class  28 [      704 bytes ] :       99 objs;   0.1 MiB;  15.4 cum MiB
class  29 [      768 bytes ] :      125 objs;   0.1 MiB;  15.5 cum MiB
class  30 [      832 bytes ] :      124 objs;   0.1 MiB;  15.6 cum MiB
class  31 [      896 bytes ] :       43 objs;   0.0 MiB;  15.7 cum MiB
class  32 [      960 bytes ] :       24 objs;   0.0 MiB;  15.7 cum MiB
class  33 [     1024 bytes ] :       45 objs;   0.0 MiB;  15.7 cum MiB
class  34 [     1152 bytes ] :       29 objs;   0.0 MiB;  15.8 cum MiB
class  35 [     1280 bytes ] :       42 objs;   0.1 MiB;  15.8 cum MiB
class  36 [     1408 bytes ] :       29 objs;   0.0 MiB;  15.9 cum MiB
class  37 [     1536 bytes ] :       30 objs;   0.0 MiB;  15.9 cum MiB
class  38 [     1792 bytes ] :      213 objs;   0.4 MiB;  16.3 cum MiB
class  39 [     2048 bytes ] :      523 objs;   1.0 MiB;  17.3 cum MiB
class  40 [     2304 bytes ] :       14 objs;   0.0 MiB;  17.3 cum MiB
class  41 [     2560 bytes ] :        7 objs;   0.0 MiB;  17.3 cum MiB
class  45 [     4096 bytes ] :       31 objs;   0.1 MiB;  17.5 cum MiB
class  46 [     4608 bytes ] :        5 objs;   0.0 MiB;  17.5 cum MiB
class  47 [     5120 bytes ] :        1 objs;   0.0 MiB;  17.5 cum MiB
class  49 [     6656 bytes ] :        4 objs;   0.0 MiB;  17.5 cum MiB
class  50 [     8192 bytes ] :       36 objs;   0.3 MiB;  17.8 cum MiB
class  51 [     9216 bytes ] :       38 objs;   0.3 MiB;  18.1 cum MiB
class  55 [    16384 bytes ] :       11 objs;   0.2 MiB;  18.3 cum MiB
class  56 [    20480 bytes ] :        4 objs;   0.1 MiB;  18.4 cum MiB
class  58 [    26624 bytes ] :        2 objs;   0.1 MiB;  18.4 cum MiB
class  59 [    32768 bytes ] :        9 objs;   0.3 MiB;  18.7 cum MiB
class  60 [    40960 bytes ] :        4 objs;   0.2 MiB;  18.9 cum MiB
class  63 [    65536 bytes ] :        9 objs;   0.6 MiB;  19.4 cum MiB
class  71 [   131072 bytes ] :        9 objs;   1.1 MiB;  20.6 cum MiB
class  72 [   139264 bytes ] :        4 objs;   0.5 MiB;  21.1 cum MiB
class  87 [   262144 bytes ] :        9 objs;   2.2 MiB;  23.3 cum MiB
------------------------------------------------
PageHeap: 3 sizes;   11.2 MiB free;    1.2 MiB unmapped
------------------------------------------------
     1 pages *     84 spans ~    0.7 MiB;    0.7 MiB cum; unmapped:    0.7 MiB;    0.7 MiB cum
    14 pages *      1 spans ~    0.1 MiB;    0.8 MiB cum; unmapped:    0.1 MiB;    0.8 MiB cum
    53 pages *      1 spans ~    0.4 MiB;    1.2 MiB cum; unmapped:    0.4 MiB;    1.2 MiB cum
>255   large *      1 spans ~   11.2 MiB;   12.4 MiB cum; unmapped:    0.0 MiB;    1.2 MiB cum
   </codeblock>
    </section>
  </refbody>
</reference>
