<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE concept PUBLIC "-//OASIS//DTD DITA Concept//EN" "concept.dtd">
<concept id="concept_mm2_xtm_g5">
 <title>Document modification [Beta]</title>
 <shortdesc>A query may be used to efficiently modify documents conforming to specific criteria.
        This query is part of the DML (Data Manipulation Language) and is considered Beta at the
        time of writing.</shortdesc>
 <conbody>
        <hazardstatement>
            <messagepanel id="messagepanel_hgh_b25_g5">
                <typeofhazard>N1QL DML Statements are non-idempotent</typeofhazard>
                <howtoavoid>Executing a DML N1QL statement may result in modification of data even
                    if the actual statement fails to execute. Application-side retry logic should
                    take this into account when doing something like <codeph>SET
                        field=field+1</codeph> for example.</howtoavoid>
            </messagepanel>
        </hazardstatement>
        <section><title>UPDATE</title>Documents may be updated selectively based on a specific set
            of constraints using the <codeph>UPDATE</codeph> statement. You can update documents
            based on their <i>document ID</i> or by a secondary attribute.<p>The following snippet
                updates the <codeph>sale_price</codeph> of every product-type document to be 25% off
                the original price. It also makes use of the <codeph>RETURNING</codeph> keyword also
                to return relevant information from within the document
                itself.</p><p><codeblock>query = N1QLQuery(
'UPDATE default '
    'SET sale_price=ROUND(price-(price * 0.25), 2) '
    'WHERE type=$1'
    'RETURNING name, price, sale_price',
    'product'
)

for row in cb.n1ql_query(query):
print '{0} WAS: {1:2}. NOW ONLY {2:2}'.format(
        row['name'], row['price'], row['sale_price'])</codeblock>The
                    <codeph>UPDATE</codeph> keyword can also be used for in-place updates of
                specific document IDs using the <codeph>USE KEYS</codeph> specifier. The following
                example updates a single field in a document, specified by its document
                ID:<codeblock>query = N1QLQuery(
'UPDATE default USE KEYS $keys SET description=$desc',
    keys=['utilikilt1_speaker'],
    desc='Use this handy utilikilt as a fashion accessory or in the garage, and lets '
)
cb.n1ql_query(query).execute()</codeblock></p></section>
        <section><title>DELETE</title>Documents may also be removed using a syntax similar to
                <codeph>UPDATE</codeph>. Like <codeph>UPDATE</codeph>, the <codeph>DELETE</codeph>
            statement is powerful as it allows deletion of items by using secondary criteria. The
            example below removes all documents that have a type of
            <codeph>product</codeph><codeblock>meta = cb.n1ql_query(
    N1QLQuery('DELETE from default WHERE type=$1', 'product')
).execute().meta
print 'Deleted {0} items!'.format(meta['metrics'].get('mutationCount', 0))</codeblock></section>
        <section><title>UPDATE/DELETE examples</title>C | <xref
                href="https://github.com/couchbaselabs/devguide-examples/blob/master/python/n1ql-update-delete.py"
                format="html" scope="external">Python</xref> | Java | .NET | node.js | Go</section>
    </conbody>
</concept>
