<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE concept PUBLIC "-//OASIS//DTD DITA Concept//EN" "concept.dtd">
<concept id="concept_wtt_2jq_44">
 <title>Performance tuning</title>
 <shortdesc>Pay particular attention to how you schedule operations and interact with buckets and
		views. You can maximize the performance of your application by following best practices for
		using these resources.</shortdesc>
 <conbody>
  <p>Though the Python client and Couchbase Server are extremely performant, you can follow these
            guidelines to ensure the most effective use of your computing resources:</p>
  <ul>
   <li>Couchbase bucket connections are relatively expensive to establish in relation to the
                operations performed on them. Because of this, you should open each bucket only once
                per application instance. Due to multiplexing performed within the client, opening
                multiple connections can cause issues and will not benefit performance in most
                cases.</li>
   <li>Don't use too many views and buckets. A large number of buckets or views can negatively
				affect the performance of Couchbase Server and any connected clients.</li>
   <li>Performing multiple operations simultaneously increases throughput and is important to
				achieving the best possible operation speeds. Most of the CRUD methods have
					<codeph>_multi</codeph> variants. If using the Twisted API, you can also dispatch two
				discrete operations simultaneously, rather than waiting for an operation callback.</li>
            <li>If your application is strictly single-threaded, you may pass the
                    <varname>unlock_gil=False</varname> option to the <apiname>Bucket</apiname>
                constructor. This will make the client slightly faster; however this will also
                likely crash the application if your application (or any of its dependencies) are
                making use of Python threads.</li>
  </ul>
 </conbody>
</concept>
