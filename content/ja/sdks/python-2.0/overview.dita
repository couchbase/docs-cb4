<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE concept PUBLIC "-//OASIS//DTD DITA Concept//EN" "concept.dtd">
<concept id="concept_z3r_zgq_44">
	<title>Overview</title>
	<shortdesc>The Python SDK enables you to interact with Couchbase Server from a Python
		application.</shortdesc>
	<conbody>
		<p>The Python SDK consists of a C extension and a Python layer written atop of it. The C extension
			utilizes the Couchbase C Client. The SDK consists of the following:</p>
		<ul>
			<li>Couchbase Python Client</li>
			<li>Developer guide (you're reading it now!)</li>
			<li>Python API reference</li>
			<li>Sample applications (<xref href="https://github.com/couchbaselabs/beersample-python"
					format="html" scope="external">beer database</xref>) </li>
		</ul>

		<section>
			<title>Architecture</title>
			<p>To debug errors, you must be familiar with the architecture of the Python client to understand
				where problems might originate. The following components participate in typical
				operations: </p>
			<ul>
				<li><p><b>Couchbase Server</b></p>
					<p>This is the server itself, which stores your data. Errors can happen here if
						your data does not exist, or if there are connectivity issues with one or
						more nodes in the server. While Couchbase Server is scalable and fault
						tolerant, there are naturally some conditions that cause failures (for
						example, if all nodes are unreachable).</p></li>

				<li><p><b>libcouchbase (The C library)</b></p>
					<p>libcouchbase, our C client library, provides the underlying layer that
						handles network communication and protocol handling between a client and a
						Couchbase node. Network connectivity issues tend to happen here.</p></li>

				<li><p><b>Python C Extension Layer</b></p>
					<p>The binding layer contains the C code that provides the bulk of the client. It interfaces
						with the C library component, handles passing of information between the C library
						and your application, performs input validation, and encoding and decoding of keys
						and values. The extension also provides the core support for Twisted and gevent
						integration.</p>
				</li>
				<li><p><b>Pure Python Layer</b></p>
					<p>The Python layer is written in, well, Python. Simple key-value operations are normally just
						dispatched to the extension layer. Most of the view operations are handled
						here as well, with the C binding layer just performing the lower-level
						network handling.</p></li>
			</ul>
		</section>

		<section>
			<title>Compatibility</title>
			<p>To take advantage of all features offered by Couchbase Server, you need to know what version
				of the client provides compatibility for the features you want to use. The following
				matrix shows which versions of the Python client support the major features of each
				version of Couchbase Server.</p>
			<p>Note that some of the features are dependent on the underlying C library
					(<i>libcouchbase</i>).</p>
			<p>
				<table frame="all" rowsep="1" colsep="1" id="table_zfd_dbs_5t">
					<title>Couchbase Server abd SDK Supported Version Matrix</title>
					<tgroup cols="6" align="left">
						<colspec colname="c1" colnum="1" colwidth="1.2*"/>
						<colspec colname="c2" colnum="2" colwidth="1.0*"/>
						<colspec colname="c3" colnum="3" colwidth="1.0*"/>
						<colspec colname="c4" colnum="4" colwidth="1.0*"/>
						<colspec colname="c5" colnum="5" colwidth="1.0*"/>
						<colspec colname="c6" colnum="6" colwidth="1.0*"/>
						<thead>
							<row>
								<entry/>
								<entry>Server 1.8</entry>
								<entry>Server 2.0</entry>
								<entry>Server 2.5</entry>
								<entry>Server 3.0</entry>
								<entry>Server 4.0</entry>
							</row>
						</thead>
						<tbody>
							<row>
								<entry namest="c1" nameend="c6"><b>Basic features</b></entry>
							</row>
							<row>
								<entry>CRUD operations</entry>
								<entry namest="c2" nameend="c6">Since 1.0</entry>
							</row>
							<row>
								<entry>View Querying APIs</entry>
								<entry namest="c2" nameend="c6">Since 1.0</entry>
							</row>
							<row>
								<entry namest="c1" nameend="c6"><b>Advanced features</b></entry>
							</row>
							<row>
								<entry>Durability Requirements</entry>
								<entry namest="c2" nameend="c6">Since 1.1.0/<i>libcouchbase</i> 2.3.0</entry>
							</row>
							<row>
								<entry>Fast (CCCP) Bootstrapping</entry>
								<entry namest="c2" nameend="c3">Not Supported</entry>
								<entry namest="c4" nameend="c6">Since <i>libcouchbase 2.3.0</i></entry>
							</row>
							<row>
								<entry>SSL Connectivity</entry>
								<entry namest="c2" nameend="c4">Not Supported</entry>
								<entry namest="c5" nameend="c6">Since 2.0/<i>libcouchbase 2.4.0</i></entry>
							</row>
							<row>
								<entry>Bulk Operations</entry>
								<entry namest="c2" nameend="c6">Since 1.0</entry>
							</row>
							<row>
								<entry>Cross-SDK Data types</entry>
								<entry>Not Supported</entry>
								<entry namest="c3" nameend="c6">Since 2.0</entry>
							</row>
							<row>
								<entry>N1QL Querying</entry>
								<entry namest="c2" nameend="c5">Not Supported</entry>
								<entry>Since 2.0.1</entry>
							</row>
							<row>
								<entry namest="c1" nameend="c6"><b>Administrative Features</b></entry>
							</row>
							<row>
								<entry>Administrative API</entry>
								<entry namest="c2" nameend="c6">Not Supported</entry>
							</row>
						</tbody>
					</tgroup>
				</table></p>
		</section>

		<section>
			<title>Contributing</title>
			<p>Couchbase welcomes community contributions to the Python SDK. The <xref
					href="https://github.com/couchbase/couchbase-python-client" format="html"
					scope="external">Python SDK source code</xref> is available on GitHub.</p>
		</section>
	</conbody>


</concept>
