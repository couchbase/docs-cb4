<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE concept PUBLIC "-//OASIS//DTD DITA Concept//EN" "concept.dtd">
<concept id="concept_ff3_2jq_44">
 <title>Setting up logging</title>
 <shortdesc>Go SDK currently doesn't support highly detailed logging.</shortdesc>
 <conbody>
  <p>While the Go SDK does not currently support highly detailed logging, it allows the
   specification of a logging endpoint that will log various details from within the SDK to aid in
   the diagnosis of issues that may occur. To utilize this functionality, execute the code (similar
   to the one presented) at the beginning of your application and prior to any use of the
    <codeph>gocb</codeph> or <codeph>gocbcore</codeph> library methods. </p>
  <p>Note that in this example we use a built-in logger that will log all messages to standard
   output, but you can use any structure that matches the <codeph>gocbcore.Logger</codeph>
   interface.</p>
  <p>
   <codeblock outputclass="language-go">import (
   "github.com/couchbaselabs/gocb/gocbcore"
)

func main() {
   gocbcore.SetLogger(gocbcore.DefaultStdOutLogger())

   // Use the gocb library.
}</codeblock>
  </p>
 </conbody>
</concept>
