<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE concept PUBLIC "-//OASIS//DTD DITA Concept//EN" "concept.dtd">
<concept id="concept_wx1_bbb_4t">
 <title>Ensuring Durability with ReplicateTo</title>
 <shortdesc>Similar to how PersistTo works, you can use ReplicateTo enum to ensure that a key has
  been replicated to "n" nodes before a write is considered successful.</shortdesc>
 <conbody>
  <section>
   <title>Example: using ReplicateTo</title>
   <p>Here is an example of replicating to two (2) nodes in a four (4) node cluster:</p>
   <codeblock outputclass="language-csharp">
    private static async Task&lt;bool&gt; InsertWithReplicateTo(Post value)
    {
        var result = await _bucket.UpsertAsync(value.PostId, value, Couchbase.ReplicateTo.Two);
        if (result.Success)
        {
            return true;
        }
        return false;
    }
   </codeblock>
   <p>In this case, we do not care about persistence, just that the key has been replicated to at
    least two (2) nodes in the cluster. Note that the trade-off of using ReplicateTo on a write is
    availability at the expense of latency, since it takes a bit longer to ensure that the key has
    replicated to each of the specified nodes.</p>
  </section>
 </conbody>
</concept>
