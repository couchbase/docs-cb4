<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE concept PUBLIC "-//OASIS//DTD DITA Concept//EN" "concept.dtd">
<concept id="concept_d3g_1bb_4t">
 <title>Ensuring Durability with PersistTo</title>
 <shortdesc>PersistTo allows you to ensure that a write has persisted to "n" nodes before a write is
  considered successful.</shortdesc>
 <conbody>
  <section>
   <p>When a write is performed in Couchbase Server, it is first written to memory, so that it is
    immediately available for reads. Then it is asynchronously written to disk, if the bucket is a
    persistent Couchbase bucket. The mutation is queued and pushed to the replicas if they are
    configured while setting up your server and eventually persisted to disk on each replica.</p>
   <title>Example: using PersistTo</title>
   <p>Here is an example of persisting to two (2) nodes in a four (4) node cluster:</p>
   <codeblock outputclass="language-csharp">
    static async Task&lt;bool&gt; InsertWithPersistTo(Post value)
    {
        var result = await _bucket.InsertAsync(value.PostId,  value, ReplicateTo.Zero, Couchbase.PersistTo.Two);
        if (result.Success)
        {
            return true;
        }
        //log reason here
        return false;
    }
    </codeblock>
   <p>Here we do not care how many the replicas the key has been persisted to, but instead we are
    concerned that each replica has persisted to at least two (2) nodes in the cluster.</p>
  </section>
 </conbody>
</concept>
