<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE dita PUBLIC "-//OASIS//DTD DITA Composite//EN" "ditabase.dtd">
<dita>
  <concept id="concept_i5h_mdx_p4">
    <title>Common client settings</title>
    <shortdesc>Common client settings can be modified via the <apiname>lcb_cntl()</apiname>
			API.</shortdesc>
    <conbody>
      <section>
        <title>Operation timeouts</title>
        <p>Operation timeouts set the upper limit on the time the library will wait for an operation
          to receive a reply before invoking the callback for the operation with an error code of
            <codeph>LCB_ETIMEDOUT</codeph>. When using the library in blocking mode this also
          determines the amount of time your program can block before having control returned to
          your application. You should generally modify timeouts if you are in blocking mode and
          your application has a requirement for faster responsiveness (in this case, the timeouts
          should be lowered at the risk of receiving higher errors during network slowdowns) or if
          you have a slow network (in which case the timeouts should be increased, potentially
          increasing the time your application blocks).</p>
        <p>As there are several types of operations that can be done with the library, there are
					several timeout settings that can be applied. Here they are:<table frame="all"
						rowsep="1" colsep="1" id="table_sn2_xdx_p4">
						<title>Operation Timeouts</title>
						<tgroup cols="2">
							<colspec colname="c1" colnum="1" />
							<colspec colname="c2" colnum="2" />
							<thead>
								<row>
									<entry>Setting</entry>
									<entry>Description</entry>
								</row>
							</thead>
							<tbody>
								<row>
									<entry><codeph>LCB_CNTL_OP_TIMEOUT</codeph></entry>
									<entry>The timeout setting for key-value operations</entry>
								</row>
								<row>
									<entry><codeph>LCB_CNTL_VIEW_TIMEOUT</codeph></entry>
									<entry>The timeout setting for <i>view</i> requests. In this sense, it
										means HTTP operations created with
											<codeph>LCB_HTTP_TYPE_VIEWS</codeph>
									</entry>
								</row>
								<row>
									<entry><codeph>LCB_CNTL_DURABILITY_TIMEOUT</codeph></entry>
									<entry>The timeout setting indicating how long to poll the nodes to
										ensure the persistence and/or replication of items to their respective
										nodes</entry>
								</row>
								<row>
									<entry><codeph>LCB_CNTL_HTTP_TIMEOUT</codeph></entry>
									<entry>The timeout setting for HTTP operations created with
											<codeph>LCB_HTTP_TYPE_MANAGEMENT</codeph></entry>
								</row>
							</tbody>
						</tgroup>
					</table></p>
      </section>
      <section>
        <title>Bootstrap options</title>
        <p>Bootstrap options control how the client requests a new configuration from the cluster.
          This affects both the initial connection to the cluster (i.e.
            <apiname>lcb_connect()</apiname>) as well as the behavior when the client determines a
          new configuration is needed.<table frame="all" rowsep="1" colsep="1" id="table_lhf_jfx_p4">
            <title>Bootstrap Options</title>
            <tgroup cols="2">
              <colspec colname="c1" colnum="1"/>
              <colspec colname="c2" colnum="2"/>
              <thead>
                <row>
                  <entry>Setting</entry>
                  <entry>Description</entry>
                </row>
              </thead>
              <tbody>
                <row>
                  <entry><codeph>LCB_CNTL_CONFIGURATION_TIMEOUT</codeph></entry>
                  <entry>Controls the total amount of time to wait for a new configuration to be
                    received from the cluster. This is mainly useful during the initial bootstrap
                    process (i.e. <apiname>lcb_connect()</apiname>). This sets the maximum amount of
                    time that the library will spend trying to retrieve a configuration before the
                    bootstrap callback is invoked with an error (and/or
                      <apiname>lcb_wait()</apiname> returns after an initial
                      <apiname>lcb_connect()</apiname>).</entry>
                </row>
                <row>
                  <entry><codeph>LCB_CNTL_CONFIG_NODE_TIMEOUT</codeph></entry>
                  <entry>When retrieving a configuration, this determines the maximum amount of time
                    to wait for a node to respond before requesting the configuration from the next
                    node in the list. Note that the <codeph>LCB_CNTL_CONFIGURATION_TIMEOUT</codeph>
                    <i>overrides</i> this option - in the sense that the client will never wait any
                    longer than <codeph>LCB_CNTL_CONFIGURATION_TIMEOUT</codeph> time to retrieve the
                    initial configuration.</entry>
                </row>
                <row>
                  <entry><codeph>LCB_CNTL_RANDOMIZE_BOOTSTRAP_HOSTS</codeph></entry>
                  <entry>When the library receives multiple nodes in the connection string (or there
										are multiple nodes in the cluster), it will start contacting the first
										node in the list and progress onwards when a new configuration is
										required. This setting determines whether this access should be random
										or whether to contact the nodes in the order they were passed.</entry>
                </row>
              </tbody>
            </tgroup>
          </table></p>
      </section>
    </conbody>
  </concept>
</dita>
