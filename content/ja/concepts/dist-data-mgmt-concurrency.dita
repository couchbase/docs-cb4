<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE concept PUBLIC "-//OASIS//DTD DITA Concept//EN" "concept.dtd">
<concept id="concept_r2s_rvy_zs">
 <title>Concurrency</title>
 <shortdesc>In a busy distributed data management system, conflicts might arise with multiple clients attempting to write the same document simultaneously. All Couchbase Server operations are atomic at the document level.  Couchbase Server offers both optimistic and pessimistic locking to prevent concurrency errors.</shortdesc>
 <conbody>
  <p>Optimistic locking is based on the <b>Compare-and-Swap (CAS) Value</b>, a unique and atomically
   incrementing identifier that is part of every documentâ€™s metadata. Several update operations
   require a successful CAS value check in order to succeed. The application passes the CAS value as
   a parameter. Couchbase Server then verifies the CAS Value has not changed before a document is
   deleted or modified to effectively prevent conflicts without having to lock records. This is the
   preferred, best practice, method of handling concurrency with Couchbase.</p>
  
  <p>Couchbase Server also supports pessimistic locking (similar to semaphores), which is less commonly used. Pessimistic locks are automatically released to prevent unrecoverable deadlocks.
  </p>
 </conbody>
</concept>
