<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE reference PUBLIC "-//OASIS//DTD DITA Reference//EN" "reference.dtd">
<reference id="reference_pxg_ftc_pp">
  <title>Retrieving Log Information</title>
  <shortdesc>Log information is retrieved via the <codeph>/diag</codeph> and <codeph>/sasl_logs</codeph> REST endpoints.</shortdesc>
  
  <reference id="rest-logs-get-diag">
    <title>Getting log and server info</title>
  <refbody>
    
    <section><title>HTTP method and URI</title>
      <p>To retrieve log and server diagnostic information, perform a GET with the <codeph>/diag</codeph> endpoint.</p>
      
      <codeblock>GET /diag</codeblock>
    </section>
    
    
    <section><title>Syntax</title>
      <p>Curl request syntax:</p>
      <codeblock>curl -v -X GET -u [admin]:[password] http://[hostname]:8091/diag</codeblock>
    </section>
    
    
    <section><title>Example</title>
      <p>Curl request example:</p>
      <codeblock>curl -v -X GET -u Administrator:password \
  http://127.0.0.1:8091/diag      </codeblock>
    </section>
  </refbody>
  </reference>
  
  <reference id="rest-logs-get-sasl">
    <title>Getting generic log info</title>
    <refbody>
      
      <section><title>HTTP method and URI</title>
        <p>To retrieve a generic list of logs, perform a GET with the <codeph>/sasl_logs</codeph> endpoint.</p>
        <codeblock>GET /sasl_logs</codeblock>
      </section>
      
      
      <section><title>Syntax</title>
        <p>Curl request syntax:</p>
        <codeblock>curl -v -X GET -u [admin]:[password] 
  http://[hostname]:8091/sasl_logs       </codeblock>
      </section>
      
      <section><title>Example</title>
        <p>Curl request example:</p>
        
        <codeblock>curl -v -X GET -u Administrator:password \ 
  http://127.0.0.1:8091/sasl_logs        </codeblock>
    </section>
    </refbody>
  </reference>
  
  
  
  <reference id="rest-logs-get-sasl-single">
    <title>Getting specific log info</title>
    <refbody>
    
    <section><title>HTTP method and URI</title>
      
      <p>To retrieve a specific log file, perform a GET on the <codeph>sasl_logs</codeph> endpoint and 
        provide a specific log category.</p>
      
      <codeblock>GET /sasl_logs/[log_name]</codeblock>
    </section>
    
    <section><title>Syntax</title>
      <p>Curl request syntax:</p>
      
      <codeblock>curl -v -X GET -u [admin]:[password] 
  http://[hostname]:8091/sasl_logs/[log_name]      </codeblock>
      
      <p>Where
          the <i>logName</i> is one of the following log types:</p><ul>
            <li>babysitter</li>
            <li>couchdb</li>
            <li>debug</li>
            <li>error</li>
            <li>info</li>
            <li>mapreduce_errors</li>
            <li>ssl_proxy</li>
            <li>stats</li>
            <li>view</li>
            <li>xdcr</li>
            <li>xdcr_errors</li>
          </ul>
    </section>
    
    <section><title>Example</title>
      
      <p>Curl request example to retrieve SSL proxy log information:</p>
      
      <codeblock>curl -v -X GET -u Administrator:password \
  http://10.5.2.118:8091/sasl_logs/ssl_proxy</codeblock>
    </section>
    
    <section><title>Response</title>
      
      <p>Returns information similar to the following:</p>
      
      <codeblock>* About to connect() to 10.5.2.118 port 8091 (#0)
*   Trying 10.5.2.118... connected
* Connected to 10.5.2.118 (10.5.2.118) port 8091 (#0)
* Server auth using Basic with user 'Administrator'
&gt; GET /sasl_logs/ssl_proxy HTTP/1.1
&gt; Authorization: Basic QWRtaW5pc3RyYXRvcjpwYXNzd29yZA==
&gt; User-Agent: curl/7.21.4 (x86_64-unknown-linux-gnu) libcurl/7.21.4 OpenSSL/0.9.8b zlib/1.2.3
&gt; Host: 10.5.2.118:8091
&gt; Accept: */*
&gt; 
&lt; HTTP/1.1 200 OK
&lt; Transfer-Encoding: chunked
&lt; Server: Couchbase Server
&lt; Pragma: no-cache
&lt; Date: Thu, 06 Feb 2014 22:50:12 GMT
&lt; Content-Type: text/plain; charset=utf-8
&lt; Cache-Control: no-cache
&lt; 
logs_node (ssl_proxy):
-------------------------------
[ns_server:info,2014-01-24T11:25:18.066,nonode@nohost:&lt;0.30.0&gt;:ns_ssl_proxy:init_logging:84]Brought up ns_ssl_proxy logging
[error_logger:info,2014-01-24T11:25:18.082,nonode@nohost:error_logger&lt;0.5.0&gt;:ale_error_logger_handler:log_report:72]
=========================PROGRESS REPORT=========================
          supervisor: {local,ns_ssl_proxy_sup}
             started: [{pid,&lt;0.64.0&gt;},
                       {name,ns_ssl_proxy_server_sup},
                       {mfargs,{ns_ssl_proxy_server_sup,start_link,[]}},
                       {restart_type,permanent},
                       {shutdown,infinity},
                       {child_type,supervisor}]</codeblock></section>
    
  </refbody>
  </reference>
    
</reference>
