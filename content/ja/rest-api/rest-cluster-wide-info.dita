<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE concept PUBLIC "-//OASIS//DTD DITA Concept//EN" "concept.dtd">
<concept id="concept_whr_1x1_34">
 <title>Collecting diagnostics</title>
 <shortdesc>The REST API enables you to collect and send diagnostics by using HTTP requests.</shortdesc>
 <conbody>
  <p>You can use the following REST APIs to manage log collection.</p>
 	<table>
 		<tgroup cols="3">
 			<thead>
 				<row>
 					<entry>HTTP method</entry>
 					<entry>URI path</entry>
 					<entry>Description</entry>
 				</row>
 			</thead>
 			<tbody>
 				<row>
 					<entry><codeph>GET</codeph></entry>
 					<entry><codeph>/pools</codeph></entry>
 					<entry>Retrieve a list of nodes in the cluster</entry>
 				</row>
 				<row>
 					<entry><codeph>POST</codeph></entry>
 					<entry><codeph>/collectLogs/start</codeph></entry>
 					<entry>Start log collection</entry>
 				</row>
 				<row>
 					<entry><codeph>POST</codeph></entry>
 					<entry><codeph>/collectLogs/cancel</codeph></entry>
 					<entry>Cancel log collection</entry>					
 				</row>
 				<row>
 					<entry><codeph>GET</codeph></entry>
 					<entry><codeph>/pools/default/tasks</codeph></entry>
 					<entry>Retrieve log collection status</entry>
 				</row>
 			</tbody>
 		</tgroup>
 	</table>
 	
 	
 	<section>
 		<title>Retrieving a list of cluster nodes</title>
 		<p>You can retrieve a list of the nodes in a cluster with the following HTTP request:</p>
 		<codeblock>
GET /pools
 		</codeblock>
 		<p>The response contains a list of the nodes in the cluster and the status of each node. The node status can be up, pending, or down.</p>
 	</section>
 	
 	<section>
 		<title>Starting log collection</title>
 		<p>
 			You can start log collection with the following REST request:
 		</p>
 		<codeblock>
POST /collectLogs/start
 		</codeblock>
 		<p>The message body for this request contains a JSON document that uses the following
				parameters:</p>
 		<table>
 			<tgroup cols="4">
 				<thead>
 					<row>
 						<entry>Name</entry>
 						<entry>Type</entry>
 						<entry>Description</entry>
 						<entry>Required</entry>
 					</row>
 				</thead>
 				<tbody>
 					<row>
 						<entry><codeph>customer</codeph></entry>
 						<entry>string</entry>
 						<entry>Customer name. The valid characters are uppercase and lowercase letters, digits, underscore, period, and space. Maximum length is 50 characters. If spaces are used in the customer name, they are replaced with underscores. Invalid values are rejected.</entry>
 						<entry>yes, when the <codeph>upload</codeph> parameter is set to <codeph>true</codeph>.</entry>
 					</row>
 					<row>
 						<entry><codeph>from</codeph></entry>
 						<entry>string</entry>
 						<entry>Nodes to collect logs from. The value can be:
 							<ul>
 								<li><codeph>allnodes</codeph>—collect from all nodes in the cluster.</li>
 								<li><codeph>nodes</codeph>—collect only from nodes specified in the <codeph>nodes</codeph> parameter.</li>
 							</ul>
 						</entry>
 						<entry>yes</entry>
 					</row>
 					<row>
 						<entry><codeph>nodes</codeph></entry>
 						<entry>array</entry>
 						<entry>List of nodes to collect logs from.</entry>
 						<entry>yes, when the <codeph>from</codeph> parameter is set to <codeph>nodes</codeph>.</entry>
 					</row>
 					<row>
 						<entry><codeph>ticket</codeph></entry>
 						<entry>string</entry>
 						<entry>Couchbase support ticket number. The valid characters are digits 0 through 9. Maximum length is 7 characters. Invalid values are rejected.</entry>
 						<entry>no, but applicable only when the <codeph>upload</codeph> parameter is set to <codeph>true</codeph>.</entry>
 					</row>
 					<row>
 						<entry><codeph>upload</codeph></entry>
 						<entry>Boolean</entry>
 						<entry>Indicates whether to upload the collected logs to Couchbase support.</entry>
 						<entry>no</entry>
 					</row>
 					<row>
 						<entry><codeph>upload_host</codeph></entry>
 						<entry>string</entry>
 						<entry>Fully-qualified domain name, optionally prefixed with the <filepath>https://</filepath> protocol specifier. If no protocol is specified, it defaults to <filepath>https://</filepath>, which is the only valid protocol. If an invalid protocol is specified, the request returns an error.</entry>
 						<entry>yes, when the <codeph>upload</codeph> parameter is set to <codeph>true</codeph>.</entry>
 					</row>
 					
 				</tbody>
 			</tgroup>
 		</table>
 	</section>
 	
 	<section>
 		<title>Stopping log collection</title>
 		<p>
 			You can stop log collection with the following HTTP request:
 		</p>
 		<codeblock>
POST /collectLogs/cancel
 		</codeblock>
 		
 	</section>
 	
 	<section>
 		<title>Retrieving log collection status</title>
 		<p>
 			You can retrieve the status of the log collection operation with the following HTTP request:
 		</p>
 		<codeblock>
GET /pools/default/tasks
 		</codeblock>
 		
 	<p>The response to this request includes a JSON document that contains the following objects:</p>
 		<table>
 			<tgroup cols="3">
 				<thead>
 					<row>
 						<entry>Name</entry>
 						<entry>Type</entry>
 						<entry>Description</entry>
 					</row>
 				</thead>
 				<tbody>
 					<row>
 						<entry><codeph>per_node</codeph></entry>
 						<entry>array</entry>
 						<entry>Status information for each node. Each entry in the array contains the following items:
 						<ul>
 							<li><codeph>artifact</codeph>—name of the artifact</li>
 							<li><codeph>details</codeph>—additional information about the status</li>
 							<li><codeph>node_name</codeph>—name of the node</li>
 							<li><codeph>result</codeph>—status of the collection operation on this node. Possible values are: <codeph>pending</codeph>, <codeph>in_progress</codeph>, <codeph>collected</codeph>, <codeph>uploaded</codeph>, <codeph>upload_failed</codeph>, <codeph>failed</codeph>, <codeph>cancelled</codeph>.</li>							
 						</ul></entry>
 					</row>
 					<row>
 						<entry><codeph>status</codeph></entry>
 						<entry>string</entry>
 						<entry>Overall status of the log collection operation. The value can be <codeph>idle</codeph> or <codeph>running</codeph>.</entry>
 					</row>
 					<row>
 						<entry><codeph>type</codeph></entry>
 						<entry>string</entry>
 						<entry>The kind of information the document contains. The value is <codeph>collect_logs</codeph></entry>
 					</row>
 				</tbody>
 			</tgroup>
 		</table>
 		<p>The structure of the result document looks similar to this:</p>
 		<codeblock>
{
    "type": "collect_logs"
    "status": "status", 
    "perNode": [
       {
            "artifact": "artifact_name", 
            "node_name": "node_name", 
            "result": "status",
            "details”: "optional additional details on failure reason etc."
        },
    ],
} 
 		</codeblock>
 		
 	</section>
 	
 </conbody>
</concept>
