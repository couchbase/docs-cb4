<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE concept PUBLIC "-//OASIS//DTD DITA Concept//EN" "concept.dtd">
<concept id="concept_cn2_5ck_r5">
    <title>Release Notes</title><shortdesc>Release notes for the 1.2 version of the Kafka connector.</shortdesc>
    <conbody>
    <section>
        <title>Couchbase Kafka Connector 1.2.1 GA (23 December 2015)</title>
        <p>Version 1.2.1 is the general availability (GA) release of the Kafka connector. 
            It fixes issues several important issues like KAFKA-20, KAFKA-21, 
            improves performance of default Zookeeper initializer and makes state management more precise.
        </p>
            
        <p><b>New features and Behavioral Changes</b></p>
                <p>This release contains the following features:</p>

                <ul>
                    <li>
                        <xref href="https://www.couchbase.com/issues/browse/KAFKAC-20" format="html" scope="external">KAFKAC-20</xref>:
                        By default the state for stream has been stored incorrectly, which leads to rollbacks and ERR_RANGE errors. The issue has been fixed in the core java library, and the connector code has been adopted to it. The API of building state has been changed and now it initializes vbucketUUID property of the stream state. For example:
			<codeblock outputclass="language-java"><![CDATA[CouchbaseKafkaConnector connector = CouchbaseKafkaConnector.create(builder.build());
BucketStreamAggregatorState state = connector.buildState(Direction.TO_CURRENT);
connector.run(state, RunMode.RESUME);
]]></codeblock>
                        As important API change <codeph>CouchbaseKafkaConnector.buildState()</codeph> does not accept the name for the state. And in general name of the state has been removed from the public API.
                    </li>
                    <li>
                        <xref href="https://www.couchbase.com/issues/browse/KAFKAC-21" format="html" scope="external">KAFKAC-21</xref>:
                        Improve performance of Zookeeper by fixing the bug, when it triggered iteration over all streams to persist the state when just one was changed. Also an option to throttle write rate of the serializer introduced: <codeph>couchbaseStateSerializationThreshold()</codeph> which controls minimum period in milliseconds (by default 2) which have to pass between to state serialization operation. So under high load this option could be larger.
                    </li>
                    <li>
                        <xref href="https://www.couchbase.com/issues/browse/KAFKAC-23" format="html" scope="external">KAFKAC-23</xref>:
                        This improvement exposes sequence number for each mutation and remove message going in DCP stream, so that it could be used to inspect the current state.
                    </li>
                </ul>
            </section>



<section>
        <title>Couchbase Kafka Connector 1.2.0 GA (13 October 2015)</title>
    <p> Version 1.2.0 is the general availability (GA) release of the Kafka connector. 
        It fixes issues with missing events in the streams, improves state initialization, 
        and introduces flow control.</p>
   
    
    <p><b>New Features and Behavioral Changes</b>
            </p>
                <p>This release contains the following features:</p>

                <ul>
                    <li>
                        <xref href="https://www.couchbase.com/issues/browse/KAFKAC-16" format="html" scope="external">KAFKAC-16</xref>:
                        Helper to gather current state of the streams, to simplify initialization of the streams. For example the following code will fetch all changes up to current state. See more info on documentation for class <codeph>Direction</codeph>.
			<codeblock outputclass="language-java"><![CDATA[CouchbaseKafkaConnector connector = CouchbaseKafkaConnector.create(builder.build());
BucketStreamAggregatorState state = connector.buildState("hello", Direction.TO_CURRENT);
connector.run(state, RunMode.RESUME);
]]></codeblock>
                    </li>
                    <li>
                        <xref href="https://www.couchbase.com/issues/browse/KAFKAC-11" format="html" scope="external">KAFKAC-11</xref>: Update Zookeeper state serializer to work with recent core library.
                    </li>
                    <li>
                        Allow to override Couchbase and Kafka credentials during connector initialization from the code.
			<codeblock outputclass="language-java"><![CDATA[CouchbaseKafkaConnector connector = CouchbaseKafkaConnector.create(
        Collections.singletonList("couchbase1.vagrant"), "default", "",
        "kafka1.vagrant", "default",
        environmtnt);
]]></codeblock>
                    </li>
                    <li>
                        <xref href="https://www.couchbase.com/issues/browse/JVMCBC-217" format="html" scope="external">JVMCBC-217</xref>:
                        In the core library flow control for streaming connection has been implemented. The connector can specify the buffer limit, which represents capacity of the events consumer. When the producer (Couchbase Server) will reach this value, it will stop emitting the events until the connector will notify about free space. The API of this feature exposed as two settings on environment: <codeph>dcpConnectionBufferSize()</codeph>, which represents the size of the window in bytes (default value is 20MB), and <codeph>dcpConnectionBufferAckThreshold()</codeph> which controls when the connector will emit buffer acknoledgement message (default is 4MB, which means that the acknowledgements will be sent while the current buffer level is greater than this value).
                    </li>
                </ul>
            </section>
    </conbody>
</concept>





