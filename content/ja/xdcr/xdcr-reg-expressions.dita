<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE concept PUBLIC "-//OASIS//DTD DITA Concept//EN" "concept.dtd">
<concept id="concept_lph_wf2_2s">
 <title>XDCR Filtering Regular Expression</title>
 <shortdesc>This is a list of JavaScript regular expressions (RegEx) you can use for XDCR
  filtering.</shortdesc>
 <conbody>
  <p>Regular expressions (RegEx) are a powerful way to match a sequence of simple characters. You
   can use regular expressions to create filters. </p>
 <p>Regular expressions are case-sensitive: a lowercase 
  &apos;<codeph>a</codeph>&apos; is distinct from an
   uppercase &apos;<codeph>A</codeph>&apos;. You can enclose a range of characters in square brackets to match
   against all of those characters.</p>
  <table>
   <tgroup cols="4">
    <colspec colname="col1" colwidth="1*"/>
    <colspec colname="col2" colwidth="4*"/>
    <thead>
     <row>
      <entry align="left">Expression</entry>
      <entry align="left">Description</entry>
     </row>
    </thead>
    <tbody>
     <row>
      <entry><codeph>[tT]here</codeph></entry>
      <entry>Matches against 'There' and 'there'</entry>
     </row>
     <row>
      <entry><codeph>[ ]</codeph></entry>
      <entry>Might be used on a range of characters separated by a <codeph>-</codeph> character.</entry>
     </row>
     <row>
      <entry><codeph>[0-9]</codeph></entry>
      <entry>Matches any digit.</entry>
     </row>
     <row>
      <entry><codeph>[A-Z]</codeph></entry>
      <entry>Matches any uppercase alpha character.</entry>
     </row>
     <row>
      <entry><codeph>[A-Za-z0-9]</codeph></entry>
      <entry>Matches any alphanumeric character.</entry>
     </row>
     <row>
      <entry><codeph>^</codeph></entry>
      <entry>Matches beginning of input. If the multiline flag is set to <codeph>true</codeph>, also
       matches immediately after a line break character. For example, <codeph>/^A/</codeph> does not
       match the &apos;<codeph>A</codeph>&apos; in "<codeph>an A</codeph>", but does match the
        &apos;<codeph>A</codeph>&apos; in "<codeph>An E</codeph>". <p>The &apos;<codeph>^</codeph>&apos; has a different
        meaning when it appears as the first character in a character set pattern. See <xref
         href="https://developer.mozilla.org/en/docs/Web/JavaScript/Guide/Regular_Expressions#special-negated-character-set"
         format="html" scope="external">complemented character sets</xref> for details and an
        example.</p><p>It can also be used as a "<codeph>not</codeph>" character, therefore
         <codeph>[^0-9] </codeph>matches against any character that is not a digit.</p></entry>
     </row>
    </tbody>
   </tgroup>
  </table> 
  <p>You can use ranges to specify a group of characters. You can also use the following shortcuts:</p>
  <table>
   <tgroup cols="4">
    <colspec colname="col1" colwidth="1*"/>
    <colspec colname="col2" colwidth="4*"/>
    <thead>
     <row>
      <entry align="left">Expression</entry>
      <entry align="left">Description</entry>
     </row>
    </thead>
    <tbody>
     <row>
      <entry><codeph>.</codeph></entry>
      <entry>Matches against any character.</entry>
     </row>
     <row>
      <entry><codeph>\d</codeph></entry>
       <entry>Matches against a digit [0-9]. <b>*</b></entry>
     </row>
     <row>
      <entry><codeph>\D</codeph></entry>
      <entry>Matches against a non-digit <codeph>[^0-9]</codeph>. <b>*</b></entry>
     </row>
     <row>
      <entry><codeph>\s</codeph></entry>
      <entry>Matches against a whitespace character (such as a tab, space, or line feed
        character).<b>*</b></entry>
     </row>
     <row>
      <entry><codeph>\S</codeph></entry>
      <entry>Matches against a non-whitespace character.<b>*</b></entry>
     </row>
     <row>
      <entry><codeph>\w</codeph></entry>
      <entry>Matches against an alphanumeric character
       <codeph>[a-zA-Z_0-9]</codeph>.<b>*</b></entry>
     </row>
     <row>
      <entry><codeph>\W</codeph></entry>
      <entry>Matches against a non-alphanumeric character.<b>*</b></entry>
     </row>
     <row>
      <entry><codeph>\xhh</codeph></entry>
      <entry>Matches against a control character (for the hexadecimal character
        <codeph>hh</codeph>).<b>*</b></entry>
     </row>
     <row>
      <entry><codeph>\uhhhh</codeph></entry>
      <entry>Matches against a Unicode character (for the hexadecimal character
        <codeph>hhhh</codeph>).<b>*</b></entry>
     </row>
     
    </tbody>
   </tgroup>
  </table>
  <note type="note"><b>*</b>Since the backslash character is used to denote a specific search
   expression, if you want to match against this character you must enter a double backslash
    (<codeph>\\</codeph>).</note>
  

  <p>To match against occurrences of a character or expression, you can use the following.</p>
 
  <table>
   <tgroup cols="4">
    <colspec colname="col1" colwidth="1*"/>
    <colspec colname="col2" colwidth="4*"/>
    <thead>
     <row>
      <entry align="left">Expression</entry>
      <entry align="left">Description</entry>
     </row>
    </thead>
    <tbody>
     <row>
      <entry><codeph>*</codeph></entry>
      <entry>Matches against zero or more occurrences of the previous character or expression.</entry>
     </row>
     <row>
      <entry><codeph>+</codeph></entry>
      <entry>Matches against one or more occurrences of the previous character or expression.</entry>
     </row>
     <row>
      <entry><codeph>?</codeph></entry>
      <entry>Matches zero or one occurrence of the previous character or expression.</entry>
     </row>
     <row>
      <entry><codeph>(n)</codeph></entry>
      <entry>Matches <codeph>n</codeph> occurrences of the previous character or expression.</entry>
     </row>
     <row>
      <entry><codeph>(n,m)</codeph></entry>
      <entry>Matches from <codeph>n</codeph> to <codeph>m</codeph> occurrences of the previous character or expression.</entry>
     </row>
     <row>
      <entry><codeph>(n,)</codeph></entry>
      <entry>Matches at least <codeph>n</codeph> occurrences of the previous character or
       expression.</entry>
     </row>
    </tbody>
   </tgroup>
  </table>
  <p>You can provide text to replace all or part of your search string. 
   To do this, you need to group together matches by enclosing them in parentheses so that they can be referenced 
   in the replacement. To reference a matched parameter, use <codeph>$n</codeph> where <codeph>n</codeph> is the 
   parameter starting from <codeph>1</codeph>.</p> 
 </conbody>
</concept>
