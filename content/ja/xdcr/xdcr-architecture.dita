<?xml version="1.0" encoding="utf-8"?>
<!DOCTYPE topic
  PUBLIC "-//OASIS//DTD DITA Topic//EN" "topic.dtd">
<topic xml:lang="en-us" id="topic3175">
  <title>XDCR architecture</title>
  <shortdesc>Key elements of the XDCR (Cross Datacenter Replication) architecture are continuous
    replication, cluster awareness, push-based connection resilient replication, efficiency, and
    active-active conflict resolution.</shortdesc>
  <body>
    
    <dl>
      <dlentry>
        <dt>Continuous replication</dt>
        <dd>XDCR in Couchbase Server provides continuous replication across geographically
          distributed data centers. Data mutations are replicated to the destination cluster after
          they are written to disk. There are multiple data streams shuffled across all vBuckets,
          which are called <term>vBuckets</term> in Couchbase Server. On the source cluster,
          shuffling is performed to move data in parallel to the destination cluster.  The clusters
          scale horizontally, therefore, the more servers there are and more replication streams,
          the faster the replication rate will be. </dd>
      </dlentry>
    </dl>
    <dl>
      <dlentry>
        <dt>Cluster awareness</dt>
        <dd>XDCR is cluster topology aware. The source and destination clusters could have different
          number of servers. If a server in the source or the destination cluster goes down, XDCR
          can get the updated cluster topology information and continue replicating data to
          available servers in the destination cluster.</dd>
      </dlentry>
    </dl>
    <dl>
      <dlentry>
        <dt>Push-based connection resilient replication</dt>
        <dd>XDCR in the Couchbase Server is a push-based replication. The source cluster regularly
          sets checkpoints in the replication queue per the Couchbase Bucket and keeps track of what data
          the destination cluster last received. If the replication process is interrupted, for
          example due to a server crash or intermittent network connection failures, it is not
          required to restart replication from the beginning. Instead, once the replication link is
          restored, replication can continue from the last checkpoint seen by the destination
          cluster.</dd>
      </dlentry>
    </dl>
   
    <dl>
      <dlentry>
        <dt>Active-active conflict resolution</dt>
        <dd>Within a cluster, Couchbase Server provides strong consistency at the document level, as
          well as eventual consistency across clusters. The built-in conflict resolution picks the
          same “winner” on both clusters if the same document is mutated on both of them. If a
          conflict occurs, the document with the most updates will be considered the “winner.” If
          the same document is updated the same number of times on the source and destination
          clusters, the additional metadata is used to pick the “winner.” Such metadata includes
          numerical sequence, CAS value, document flags and expiration TTL value. XDCR applies the
          same rule across clusters to make sure that the document consistency is maintained.</dd>
      </dlentry>
    </dl>
<p><image href="../images/xdcr_conflict_res.png" id="image_gqf_v1f_xq" placement="break" align="left"/></p>
    
        
    <p>The bidirectional replication is set up between Datacenter 1 and Datacenter 2, and both
      clusters start off with the same JSON document (Doc 1). In addition, two additional updates to
      Doc 1 happen on Datacenter 2. In the case of a conflict, Doc 1 on Datacenter 2 is chosen as
      the "winner" because it has seen more updates.</p>
  </body>
  
</topic>
