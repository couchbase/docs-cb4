<?xml version="1.0" encoding="utf-8"?>
<!DOCTYPE topic
  PUBLIC "-//OASIS//DTD DITA Topic//EN" "topic.dtd">
<topic xml:lang="en-us" id="topic4685">
	<title>System Logs</title>
	<shortdesc>Couchbase Server creates a number of different log files depending on the components of
		the system that produce the error and the level and severity of the reported
		problem.</shortdesc>
	<body>
		<table>
			<tgroup cols="2">
				<colspec colname="col1" colwidth="1*"/>
				<colspec colname="col2" colwidth="6*"/>
				<thead>
					<row>
						<entry>Platform</entry>
						<entry>Location</entry>
					</row>
				</thead>
				<tbody>
					<row>
						<entry>Linux</entry>
						<entry><filepath>/opt/couchbase/var/lib/couchbase/logs</filepath></entry>
					</row>
					<row>
						<entry>Windows</entry>
						<entry><filepath>C:\Program
								Files\Couchbase\Server\var\lib\couchbase\logs</filepath> <p>Assumes
							default installation location</p></entry>
					</row>
					<row>
						<entry>Mac OS X</entry>
						<entry><filepath>/Users/couchbase/Library/Application
								Support/Couchbase/var/lib/couchbase/logs</filepath>
						</entry>
					</row>
				</tbody>
			</tgroup>
		</table>
		<p>The table below summarizes the log files for the different components in Couchbase.</p>
		<table><title>Couchbase log files for various components</title>
			<tgroup cols="2">
				<colspec colname="col1" colwidth="1*"/>
				<colspec colname="col2" colwidth="4*"/>
				<thead>
					<row>
						<entry>File</entry>
						<entry>Log Contents</entry>
					</row>
				</thead>
				<tbody>
					<row>
						<entry><codeph>audit</codeph></entry>
						<entry>Security auditing for administrators.</entry>
					</row>
					<row>
						<entry><codeph>babysitter</codeph></entry>
						<entry>The <codeph>babysitter</codeph> process log captures when 
							the larger processes are spawned for cluster management, 
							cross data center replication, views, query, and N1QL.</entry>
					</row>
					<row>
						<entry><codeph>couchdb</codeph></entry>
						<entry>Errors relating to the CouchDB subsystem that supports views, indexes, and related REST
							API issues.</entry>
					</row>
					<row>
						<entry><codeph>debug</codeph></entry>
						<entry>Debug level error messages related to the core server management
							subsystem, excluding information included in the
							<codeph>couchdb</codeph>, <codeph>xdcr</codeph> and
							<codeph>stats</codeph> logs.</entry>
					</row>
					<row>
						<entry><codeph>error</codeph></entry>
						<entry>Error level messages for all subsystems excluding
							cross datacenter replication.</entry>
					</row>
					<row>
						<entry><codeph>goxdcr</codeph></entry>
						<entry>Log messages related to Cross Datacenter Replication (XDCR) written in Go.</entry>
					</row>
					<row>
						<entry><codeph>http_access.log</codeph></entry>
						<entry>The admin access log records server requests (including administrator logins) 
							to the REST API or Couchbase Server web console. It is output in 
							common log format and contains several important fields such as remote client IP, 
							timestamp, GET/POST request and resource requested, HTTP status code, and so on.</entry>
					</row>
					
					<row>
						<entry><codeph>info</codeph></entry>
						<entry>Information level error messages related to the core server
							management subsystem, excluding information included in the
							CouchDB, cross datacenter replication, and stats logs.
						</entry>
					</row>
					<row>
						<entry><codeph>mapreduce_errors</codeph></entry>
						<entry>JavaScript and other view-processing errors are reported in this
							file.</entry>
					</row>
					<row>
						<entry><codeph>memcached.log</codeph></entry>
						<entry>Contains information relating to the core memcached component,
							including vBucket and replica and rebalance data streams requests.
						</entry>
					</row>
					<row>
						<entry><codeph>ns-couchdb</codeph></entry>
						<entry>Contains information related to starting up the CouchDB subsystem.</entry>
					</row>
					<row>
						<entry><codeph>Projector</codeph></entry>
						<entry>Contains information for the projector process that runs on each KV node and sends
							requested index data to the index nodes.</entry>
					</row>
					<row>
						<entry><codeph>reports.log</codeph></entry>
						<entry>Contains only progress report and crash reports for the Erlang
							processes. </entry>
					</row>
					
					<row>
						<entry><codeph>ssl_proxy</codeph></entry>
						<entry></entry>
					</row>
					
					
					<row>
						<entry><codeph>crash-log.bin</codeph></entry>
						<entry>Used to pass service crash reports from the babysitter to the
								<codeph>ns_server</codeph>. For example, if the
								<codeph>ns_server</codeph> is available, any crash of the
							babysitter's child is passed directly to the special crash logger
							service within the <codeph>ns_server</codeph>. If the logger service is
							not attached to the babysiter, then the babysitter saves that crash
							report to the disk and the <codeph>ns_server</codeph> can later obtain
							and log it even if the babysitter is restarted.</entry>
					</row>
					<row>
						<entry><codeph>stats</codeph></entry>
						<entry>Contains periodic reports of the core statistics.</entry>
					</row>
					<row>
						<entry><codeph>tmpfail</codeph></entry>
						<entry>For XDCR, the destination cluster is not able to eject items fast
							enough to make room for new mutations. XDCR retries several times,
							without throwing errors, but after a fixed number of attempts the errors
							are shown to the user. Nevertheless, if a user waits long enough, XDCR
							eventually retries and can replicate the remaining data.</entry>
					</row>
					<row>
						<entry><codeph>views</codeph></entry>
						<entry>Errors relating to the integration of the view system and the core
							server subsystem.</entry>
					</row>
					<row>
						<entry><codeph>xdcr</codeph></entry>
						<entry>Log messages related to starting up the cross datacenter replication subsystem.</entry>
					</row>
					<row>
						<entry><codeph>xcdr_trace</codeph></entry>
						<entry>Cross datacenter replication trace messages</entry>
					</row>
					
					
				</tbody>
			</tgroup>
		</table>
		
		<p>Some logs are automatically rotated after a certain fixed size. For example, individual log files are automatically 
			numbered with the number suffix incremented for each new log, and with a maximum of 20 files per log. 
			Individual log file sizes are limited to 10MB by default.</p>
			
			<p>For other logs, when a log file reaches 40MB it will be rotated and compressed. 
			The file will keep 5 rotations (the current rotation plus four compressed rotations). Here is an example list of log files: 			
			</p>
			<codeblock>-rw-rw---- 1 couchbase couchbase 12M Feb 2 16:15 couchdb.log 
			-rw-rw---- 1 couchbase couchbase 4.8M Feb 2 16:13 couchdb.log.1.gz 
			-rw-rw---- 1 couchbase couchbase 4.5M Jan 30 17:35 couchdb.log.2.gz 
			-rw-rw---- 1 couchbase couchbase 3.9M Jan 30 17:34 couchdb.log.3.gz 
			-rw-rw---- 1 couchbase couchbase 5.7M Jan 30 17:30 couchdb.log.4.gz 
			</codeblock>
			<p>In this list, the oldest file has the largest number.</p>
			
			<p>To provide custom rotation settings for each component, use the following : 		</p>
			<codeblock>{disk_sink_opts_disk_debug, 
			[{rotation, [{size, 10485760}, 
			{num_files, 10}]}]}.</codeblock>
			
			<p>This will rotate the debug.log at 10M and keep 10 copies of the log (the current log and 9 compressed logs).
		</p>
	</body>
</topic>
