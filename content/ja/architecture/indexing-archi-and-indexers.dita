<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE concept PUBLIC "-//OASIS//DTD DITA Concept//EN" "concept.dtd">
<concept id="concept_jdq_cc4_vs">
 <title>Indexing architecture and indexers</title>
 <shortdesc>Couchbase Server provides a number of indexes that can accelerate access for different types of queries.</shortdesc>
 <conbody>
  <p><dl>
   <dlentry>
    <dt>Map-Reduce view indexer</dt>
    <dd>This incremental view indexer takes in a user defined map and reduce function and
      incrementally processes each mutation on the bucket and calculates a view. <p>Views are
       typically useful for interactive reporting type queries where complex data processing and
       custom data reshaping is necessary. Incremental map-reduce views are part of the data service
       and are partitioned across the nodes in the same way as the data. This means the view indexer
       always processes mutations from the local vBuckets.</p><p>You can query incremental
       map-reduce views using the view API. N1QL also allows access to map-reduce views, but only
       allows a static map-reduce function that cannot be altered.</p></dd>
   </dlentry>
   <dlentry>
    <dt>Spatial view indexer</dt>
    <dd>Spatial view indexer takes in a map function that supports processing geographic information
      and allows multidimensional bounding box queries for location aware applications. <p>Much like
       the MapReduce views, spatial views incrementally processes each mutation on the bucket and
       calculate a spatial view. Spatial views are part of the data service and are partitioned
       across the nodes in the same way as the data. This means the spatial view indexer always
       processes mutations from the local vBuckets.</p><p>You can query spatial views using the
       spatial view API.</p></dd>
   </dlentry>
   <dlentry>
    <dt>GSI indexer</dt>
    <dd>The indexer for Global Secondary Indexes (GSIs) is similar to the B+Tree indexers widely
      used in relational databases. GSIs index document attributes and N1QL-based expressions to
      provide a faster lookup with N1QL queries. GSIs are purpose-built for N1QL queries and can
      only be utilized through N1QL queries. <p>GSIs are a part of the index service and are
       independent of the data service. They are partitioned across the nodes independent of the
       data. This means the indexer for GSI typically does not always processes mutations from the
       local vBuckets.</p></dd>
   </dlentry>
  </dl></p>
 </conbody>
</concept>
