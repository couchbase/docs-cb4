<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE concept PUBLIC "-//OASIS//DTD DITA Concept//EN" "concept.dtd">
<concept id="concept_erk_4nj_vs">
 <title>Views, Indexing, and Index Service</title>
 <shortdesc>Views and indexes support querying data in Couchbase Server.</shortdesc>
 <conbody>
  <p>Querying of Couchbase data is accomplished via the following:<ul>
   <li>MapReduce views accessed via the View API. </li>
   <li>Spatial views accessed via the Spatial View API.</li>
   <li>N1QL queries with Global Secondary Indexes (GSI) and MapReduce views.</li>
  </ul></p>
  <section><title>Indexing Architecture and Indexers</title>
   <p>Couchbase Server provides a number of indexes that can accelerate access for different types of queries.</p>
   <dl>
    <dlentry>
     <dt>MapReduce view indexer</dt>
     <dd>This incremental view indexer takes in a user defined map and reduce function and
      incrementally processes each mutation on the bucket and calculates a view. <p>Views are
       typically useful for interactive reporting type queries where complex data processing and
       custom data reshaping is necessary. Incremental MapReduce views are part of the data service
       and are partitioned across the nodes in the same way as the data. This means the view indexer
       always processes mutations from the local vBuckets.</p><p>You can query incremental MapReduce
       views using the view API. N1QL also allows access to MapReduce views, but only allows a
       static MapReduce function that cannot be altered.</p><p>For more information about MapReduce
       views, see <xref href="incremental-map-reduce-views.dita"/>.</p></dd>
    </dlentry>
    <dlentry>
     <dt>Spatial view indexer</dt>
     <dd>Spatial view indexer takes in a map function that supports processing geographic
      information and allows multidimensional bounding box queries for location aware applications.
       <p>Much like the MapReduce views, spatial views incrementally process each mutation on the
       bucket and calculate a spatial view. Spatial views are part of the data service and are
       partitioned across the nodes in the same way as the data. This means the spatial view indexer
       always processes mutations from the local vBuckets.</p><p>You can query spatial views using
       the spatial view API.</p><p>For more information, see <xref href="spatial-views.dita"
      />.</p></dd>
    </dlentry>
    <dlentry>
     <dt>GSI indexer</dt>
     <dd>The indexer for Global Secondary Indexes (GSIs) is similar to the B+Tree indexers widely
      used in relational databases. GSIs index document attributes and N1QL-based expressions to
      provide a faster lookup with N1QL queries. GSIs are purpose-built for N1QL queries and can
      only be utilized through N1QL queries. <p>GSIs are a part of the index service and are
       independent of the data service. They are partitioned across the nodes independent of the
       data. This means the indexer for GSI typically does not always process mutations from the
       local vBuckets.</p><p>For more information, see <xref href="global-secondary-indexes.dita"
       />.</p></dd>
    </dlentry>
   </dl>
   <p>For a comparison between MapReduce views and Global Secondary Indexes, see <xref href="gsi-versus-views.dita"></xref>.</p>
  </section>
 </conbody>
</concept>
