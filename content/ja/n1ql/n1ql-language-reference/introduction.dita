<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE concept
  PUBLIC "-//OASIS//DTD DITA Concept//EN" "concept.dtd">
<concept id="topic_1"  xml:lang="en-US">
  <title  id="title__Toc272567185">Introduction</title>

<conbody>
<p>
The proliferation of internet commerce and activity coupled with the lower cost of computer processing and memory helped change
  the landscape of the database world.  Relational SQL databases, so useful in the past, seem too clunky, rigid, and centralized 
  to reflect new business requirements that, in real time, deal with huge sets of data, large numbers of users, and fluctuations
  in the size of those data and users. The very characteristics of relational databases that made them so useful turned into handicaps.
</p>
  <p> NoSQL databases solve many of the problems of this new world of big users, big data, and cloud
      computing. These databases are flexible (i.e., non-first normal form (N1NF )): data can be
      redundant and unstructured (as opposed to the rigid column/row/relationship structure of
      normalized relational database tables and schemas). </p>
  <p>
  While NoSQL database solutions have entered the marketplace, the supporting high-level query languages have not been as quickly produced.
  </p>
  <p>
    Enter N1QL. N1QL is a leading-edge query language created for use with Couchbase, a document-based database. N1QL provides a common 
    query language and data model for JSON-document databases. N1QL aims to meet the query needs of distributed document-oriented databases.
  </p>
  <p>
 N1QL is based on SQL. It has familiar data definition language (DDL), data manipulation language (DML), and query language (SELECT) statements, yet it works on NoSQL databases features such as key-value stores, multivalue attributes, and nested objects. If you know SQL, you can easily learn N1QL, in fact, youâ€™re more than halfway there.
</p>
</conbody>


</concept>
