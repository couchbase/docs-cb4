<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE concept
  PUBLIC "-//OASIS//DTD DITA Concept//EN" "concept.dtd">
<concept id="topic_8_12"  xml:lang="en-US">
  <title>String Functions</title>
  <conbody >
    <p>String functions perform operations on a string input value and returns a string or other value. </p>

    <p>CONTAINS(expression, substring)</p>
    <p>True if the string contains the substring.</p>

    <p>INITCAP(expression), TITLE(expression)</p>
    <p>Converts the string so that the first letter of each word is uppercase and every other letter is 
      lowercase.</p>
  
    <p>LENGTH(expression)</p>
    <p>Returns length of the string value.</p>

    <p>LOWER(expression)</p>
    <p>Returns lowercase of the string value.</p>

    <p>LTRIM(expression [, characters ])</p>
    <p>Returns string with all leading chars removed. White space by default.</p>

    <p>POSITION(expression, substring)</p>
    <p>Returns the first position of the substring within the string, or -1. The position is
			zero-based, i.e., the first position is 0.</p>

    <p>REPEAT(expression, n)</p>
    <p>Returns string formed by repeating expression n times.</p>

    <p>REPLACE(expression, substring, repl [, n ])</p>
    <p>Returns string with all occurrences of substr replaced with repl. If n is given, at most n replacements
      are performed.</p>

    <p>RTRIM(expression, [, characters ])</p>
    <p>Returns string with all trailing chars removed (white space by default).</p>

    <p>SPLIT(expression [, sep ])</p>
    <p>Splits the string into an array of substrings separated by sep. If sep is not given, any
			combination of white space characters is used.</p>

    <p>SUBSTR(expression, position [, length ])</p>
    <p>Returns substring from the integer position of the given length, or to the end of the string. 
      The position is zero-based, i.e. the first position is 0. If position is negative, it is counted 
      from the end of the string; -1 is the last position in the string.</p>

    <p>TITLE(expression), INITCAP(expression)</p>
    <p>Converts the string so that the first letter of each word is uppercase and every other letter is 
      lowercase.</p>

    <p>TRIM(expression [, characters ])</p>
    <p>Returns string with all leading and trailing chars removed. White space by default.</p>

    <p>UPPER(expression)</p>
    <p>Returns uppercase of the string value.</p>
    <p>Example</p>
    <p>The following example shows the use of a LOWER string function.</p>
    <codeblock> 
    SELECT product
     FROM product
       UNNEST product.categories as categories
       WHERE LOWER(categories) = "appliances"
    </codeblock>
    </conbody></concept>