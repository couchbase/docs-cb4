<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE concept
  PUBLIC "-//OASIS//DTD DITA Concept//EN" "concept.dtd">
<concept id="topic_6"  xml:lang="en-US">
  <title  id="title__Toc272567233">Identifiers</title>
	<shortdesc>An identifier is a symbolic reference to a value in the current context of a query.
		Identifiers can include keyspace names, fields within documents, and aliases. N1QL
		identifiers are case-sensitive. </shortdesc>
  <conbody>
    
    
    <p >An identifier can either be escaped or unescaped. </p>
    
    <codeblock>unescaped-identifier | escaped-identifier</codeblock>
    
  	<p> For example, if the current context is the document <codeph>{"name": "n1ql"} </codeph>, then the identifier <codeph>name</codeph> would evaluate to the value n1ql. </p>
  	
  	<p><b>Unescaped Identifiers</b></p>
  	<p>Unescaped identifiers cannot support the full range of identifiers allowed in a JSON document,
			but do support the most common ones with a simpler syntax.
			<codeblock>[a-zA-Z_] ( [0-9a-zA-Z_$] )*</codeblock></p>
  	<p><b>Escaped Identifiers</b></p>
  	<p>Escaped identifiers are surrounded by backticks and support all identifiers in JSON. You can
			use the backtick character within an escaped identifier by specifying two consecutive
			backtick characters. Keywords cannot be escaped; therefore, escaped identifiers can
			overlap with keywords. <codeblock>` characters `</codeblock></p>
 <p>For example, if you have a hyphen in an attribute name, it can be referred to as `first-name`.</p>
  	<p>Identifiers can be expressed using the dot notation, where the left-most portion of a dotted identifier refers to the name of the data source. For example, in the query SELECT `beer-sample`.name FROM `beer-sample`, `beer-sample`.name is a more formal way of expressing the identifier name. </p>
  	
  	<section><title>Aliases</title><p>Aliases give a temporary name to identifiers. </p>When an alias
			collides with a keyspace or field name in the same scope, the identifier always refers
			to the alias. This enables consistent behavior in scenarios where an identifier only
			collides in some documents. <p>The following table describes some rules that apply when
				referring to the new names created by aliases: <table frame="all" rowsep="1"
					colsep="1" id="table_ncb_hft_lv">
					<tgroup cols="2">
						<colspec colname="c1" colnum="1" colwidth="1.0*"/>
						<colspec colname="c2" colnum="2" colwidth="1.0*"/>
						<thead>
							<row>
								<entry>Aliases in ... Clause</entry>
								<entry>Create New Names That May be Referred to ...</entry>
							</row>
						</thead>
						<tbody>
							<row>
								<entry>FROM </entry>
								<entry>Anywhere in the query </entry>
							</row>
							<row>
								<entry>LET</entry>
								<entry>Anywhere in the query</entry>
							</row>
							<row>
								<entry>LETTING</entry>
								<entry>HAVING, SELECT, and ORDER BY clauses</entry>
							</row>
							<row>
								<entry>SELECT</entry>
								<entry>SELECT and ORDER BY clauses</entry>
							</row>
							<row>
								<entry>FOR</entry>
								<entry>The local collection expression</entry>
							</row>
						</tbody>
					</tgroup>
				</table></p></section>
  	
  </conbody>





</concept>
