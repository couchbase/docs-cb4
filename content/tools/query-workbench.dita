<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE topic PUBLIC "-//OASIS//DTD DITA Topic//EN" "topic.dtd">
<topic id="topic_prr_nyh_t5">
  <title>Query Workbench</title><shortdesc>The <uicontrol>Query Workbench</uicontrol> provides a rich graphical user interface to
    perform query development.</shortdesc>
  <body>
    <p>Using the <uicontrol>Query Workbench</uicontrol>, you can conveniently explore data, create,
      edit, run, and save N1QL queries, view and save query results, and explore the document
      structures in a bucket - all in a single window. </p>
    <p>Features of the Query Workbench include: <ul>
        <li>A single, integrated visual interface to perform query development and testing.</li>
        <li>Easy viewing and editing of complex queries by providing features such as multi-line
          formatting, copy-and-paste, syntax coloring, auto completion of N1QL keywords and bucket
          and field names, and easy cursor movement. </li>
        <li>View the structure of the documents in a bucket by using the N1QL
            <cmdname>INFER</cmdname> command. You no longer have to select the documents at random
          and guess the structure of the document.</li>
        <li>Display query results in multiple formats: JSON, table, and tree. You can also save the
          query results to a file on disk.</li>
      </ul></p>
    <p>From the <uicontrol>Couchbase Web Console</uicontrol> > select the
        <uicontrol>Query</uicontrol> menu. By default, the <uicontrol>Query Workbench</uicontrol>
      tab is displayed. <note>The Query Workbench only runs on nodes which are running the Query
        service. If the Query service is <i>not </i>running on the current node, it provides a link
        to the nodes in the cluster which <i>are</i> running the Query service.</note></p>
    <p>The <uicontrol>Query Workbench</uicontrol> consists of three working areas as shown in the
      following figure: <ul>
        <li><b>Query Editor</b></li>
        <li><b>Bucket Insights</b></li>
        <li><b>Query Results and Plans</b></li>
      </ul><fig id="fig_cyr_zr3_1v">
        <title>Query Workbench Areas</title>
        <image placement="break" href="images/query-workbench-areas.png" width="720"
          id="image_dyr_zr3_1v"/>
      </fig></p>
    <section id="n1ql-editor">
      <title>Using the Query Editor</title>
      <p>The Query Editor is where you build queries, and run the queries using the
          <uicontrol>Execute</uicontrol> button. <note type="tip">You can also execute queries by
          typing a semi-colon (;) at the end of the query and hitting
          <uicontrol>Enter</uicontrol>.</note>The Query Editor provides the following additional
        features: <ul>
          <li><b>Syntax coloring</b> - For easy viewing, N1QL keywords, numbers and string literals
            are differently colored.</li>
          <li><b>Auto-completion</b> - When entering a keyword in the Query editor, if you enter the
              <userinput>tab</userinput> key or <userinput>Ctrl+Space</userinput>, the tool offers a
            list of matching N1QL keywords and bucket names that are close to what you have typed so
            far. For names that have a space or a hyphen (-), the auto-complete option includes back
            quotes around the name. If you expand a bucket in the Data Bucket Analysis, the tool
            learns and includes the field names from the schema of the expanded bucket.</li>
          <li><b>Support for N1QL INFER statements</b> - In the Enterprise Edition, the tool
            supports the N1QL <xref href="../n1ql/n1ql-language-reference/infer.dita">INFER</xref>
            statement. </li>
        </ul></p>
    </section>
    <section><title>Run a Query</title>After entering a query, you can execute the query by either
      typing ‘;’ and pressing <uicontrol>Enter</uicontrol>, or by clicking the
        <uicontrol>Execute</uicontrol> button. When the query is running, the
        <uicontrol>Execute</uicontrol> button changes to <uicontrol>Cancel</uicontrol> that allows
      you to cancel the running query. When you cancel a running query, it stops the activity on the
      server side as well. After running the query, you can use the <uicontrol>Explain</uicontrol>
      link to view the execution plan for the query that is executed in the <uicontrol>Query
        Results</uicontrol> pane.<p>
        <note>The <uicontrol>Cancel</uicontrol> button does not cancel index creation statements.
          The index creation continues on the server side even though it appears to have been
          canceled from the Query Workbench.</note>
      </p></section>
    <section><title>View Query History</title>The tool maintains a history of all the queries
      executed. Use the arrow keys at the top of the editor to navigate through the history. If you
      edit a previous query and execute it, the new query is stored at the end of the history. The
      history is persistent across browser sessions. The query history only saves queries; due to
      limited browser storage it does not save query results. Thus, when you restart the browser or
      reload the page, you can see your old queries, but you must re-execute the queries if you want
      to see their results.<note>Clearing the browser history clears the history maintained by the
        Query Editor as well.</note><p>Click the <uicontrol>history</uicontrol> link, at the top of
        the editor, to open the <wintitle>Query History</wintitle> window. When the window opens,
        the current query is selected.</p><p/><image placement="break"
        href="images/query-workbench-history.png" width="570" id="image_p42_tpr_dz"/><p>You can
        scroll through the entire query history, and click to select an individual query to be at
        the current spot in the history. </p><ul id="ul_ufk_jy3_cz">
        <li><b>Search history</b> - You can search the query history by entering a text in the
          search box located on the top. All matching queries are displayed. If no matching query is
          found, then the entire history is displayed. </li>
        <li><b>Delete a specific entry</b> - Click <uicontrol>Delete Selected</uicontrol> to delete
          the currently selected query from the history.</li>
        <li><b>Delete all entries</b> - Click <uicontrol>Delete All</uicontrol> to delete the entire
          query history. </li>
      </ul></section>
    <p/>
    <section>
      <title>History Status</title>
      <p>The currently shown position in the history is indicated by the numbers next to the history
        link. For example, (151/152) indicates that query #151 is currently shown, out of a total
        history length of 152 queries. Use the forward or back buttons to move to the next or
        previous query in the history. The forward button can also create a new blank query when you
        are already at the end of the query history.</p>
    </section>
    <section>
      <title>Import Query</title>
      <p>You can load a query from a file into the Query Editor. Click <uicontrol>Import</uicontrol>
        and then select a local file that you wish to import. Alternatively, you can drag and drop
        the file from the Desktop into the <uicontrol>Query Editor</uicontrol> to a load a file. The
        content of the file is added in the <uicontrol>Query Editor</uicontrol> as a new query at
        the end of the history.</p>
    </section>
    <section><title>Export Query or Results</title>You can export the query results or query
      statement.  Click <uicontrol>Export</uicontrol> to display <wintitle>Export Query /
        Data</wintitle> window. <p>
        <ul id="ul_wnq_5h2_kz">
          <li>Choose the <uicontrol>Query Results</uicontrol> option to export the results in the
            JSON file format. Specify the name of the JSON file where results are saved, click
              <uicontrol>Save</uicontrol>.</li>
          <li>Choose the <uicontrol>Query Statement</uicontrol> option to export the statement in
            the .txt format. By default, the query is saved as a text file (.txt) in the Downloads
            directory when using Firefox and Chrome browsers.</li>
        </ul>
      </p><p dir="ltr">
        <note>When using Safari, clicking Save loads the data into a new window. You have to save
          the file manually using the <uicontrol>File > Save As</uicontrol> menu.</note>
      </p></section>
    <section><title>Query Preferences</title>You can specify the query settings by clicking the
        <image href="images/query-workbench-settings.png" id="image_jgc_xpr_dz"/>button. The
        <wintitle>Run-Time Preferences </wintitle>window is displayed. <p/><p>
        <image placement="break" href="images/query-workbench-preferences.png" width="570"
          id="image_fl4_frr_dz"/>
      </p>Define the following options and click <uicontrol>Save Preferences</uicontrol>.<p/><p>
        <table frame="all" rowsep="1" colsep="1" id="table_owv_wy3_cz">
          <tgroup cols="2">
            <colspec colname="c1" colnum="1" colwidth="1.0*"/>
            <colspec colname="c2" colnum="2" colwidth="4.0*"/>
            <thead>
              <row>
                <entry>Option</entry>
                <entry>Description</entry>
              </row>
            </thead>
            <tbody>
              <row>
                <entry>Collect query timings</entry>
                <entry>The server records the timing for most operations in the query plan, showing
                  the updated query plan with the query result. Both graphical and textual query
                  plans are updated with the timing information when the query is complete.</entry>
              </row>
              <row>
                <entry>Max Parallelism</entry>
                <entry>This is a cbq-engine option. If you do not specify, the cbq-engine uses its
                  default value.</entry>
              </row>
              <row>
                <entry>Scan Consistency</entry>
                <entry>
                  <p dir="ltr">This is a cbq-engine option. Select one of the following options:</p>
                  <ul id="ul_pwv_wy3_cz">
                    <li dir="ltr">
                      <p dir="ltr">not_bounded</p>
                    </li>
                    <li dir="ltr">
                      <p dir="ltr">request_plus</p>
                    </li>
                    <li dir="ltr">
                      <p dir="ltr">statement_plus</p>
                    </li>
                  </ul>
                  <p dir="ltr">For more information, see <xref
                      href="https://developer.couchbase.com/documentation/server/4.5/n1ql/n1ql-rest-api/index.html"
                      format="html" scope="external">N1QL REST API</xref>.</p>
                </entry>
              </row>
              <row>
                <entry>Positional Parameters</entry>
                <entry>For the prepared queries, this option allows you to specify values for $0,
                  $1, and so on up to as many positional parameters as you have. Click the + button
                  to add new positional parameters, and the - button to remove the parameters. The
                  parameters are automatically labelled as "$0", "$1", and so on.</entry>
              </row>
              <row>
                <entry>Named Parameters</entry>
                <entry>For the prepared queries, this option allows you to specify any number of
                  named parameters. Named parameters must start with the dollar sign ($) for use in
                  prepared queries. Otherwise, they are interpreted as parameters to the Query REST
                  API.</entry>
              </row>
            </tbody>
          </tgroup>
        </table>
      </p></section>
    <section id="bucket-analyzer">
      <title>Viewing the Bucket Insights</title>
      <p>The <b>Bucket Insights</b> area displays all installed buckets in the cluster. By default,
        when the Query Workbench is first loaded, it retrieves a list of available buckets from the
        cluster. The <uicontrol>Bucket Insights</uicontrol> pane is automatically refreshed when
        buckets or indexes are added or removed.</p>
      <p>Click the <uicontrol>Resize</uicontrol> button <image
          href="images/query-workbench-bucket-resize.png" id="image_xvm_ypr_dz"/> to enlarge the
          <uicontrol>Bucket Insights</uicontrol> pane, the <uicontrol>Query Editor </uicontrol>and
          <uicontrol>Query Results</uicontrol> areas are resized accordingly.</p>
      <p>The buckets are grouped into the following categories based on the indexes created for the
        bucket: <ul id="ul_h3j_pdx_1z">
          <li><b>Fully Queryable Buckets</b>: Contain a primary index or a primary index and
            secondary indexes.</li>
          <li><b>Queryable on Indexed Fields</b>: Do not contain a primary index, but have one or
            more secondary indexes.</li>
          <li><b>Non-Indexed Buckets</b>: Do not contain any indexes. These buckets do not support
            queries. You must first define an index before querying these buckets. </li>
        </ul>With the Enterprise Edition, you can expand any bucket to view the schema for that
        bucket: field names, types, and if you hover the mouse pointer over a field name, you can
        see example values for that field. Bucket analysis is based on the N1QL <xref
          href="../n1ql/n1ql-language-reference/infer.dita">INFER</xref> statement, which you can
        run manually to get more detailed results. This command infers a schema for a bucket by
        examining a random sample of documents. Because the command is based on a random sample, the
        results may vary slightly from run to run. The default sample size is 1000 documents. The
        syntax of the command is:
        <codeblock>INFER <varname>bucket-name</varname> [ WITH <varname>options</varname> ]; </codeblock>
        where <varname>options</varname> is a JSON object, specifying values for one or more of
          <varname>sample_size</varname>, <varname>similarity_metric</varname>,
          <varname>num_sample_values</varname>, or <varname>dictionary_threshold</varname>. <fig
          id="fig_fdv_55q_y5">
          <title>Sample INFER statement: INFER `travel-sample` with {"sample_size": 3000};</title>
          <image placement="break" href="images/query-workbench-infer-sample.png" width="720"
            id="image_gdv_55q_y5"/>
        </fig></p>
    </section>
    <section id="results">
      <title>Viewing the Query Results</title>
      <p>When you execute a query, the results are displayed in the <uicontrol>Query
          Results</uicontrol> area. Since large result sets can take a long time to display, we
        recommend using the LIMIT clause as part of your query when appropriate. </p>
      <p>When a query finishes, the query metrics for that query are displayed on the right side of
        the <uicontrol>Execute</uicontrol> and <uicontrol>Explain</uicontrol> buttons. </p>
      <p>
        <ul>
          <li>Status - Shows the status of the query. The values can be: success, failed, or HTTP
            codes.</li>
          <li>Elapsed - Shows the overall query time. </li>
          <li>Execution -Shows the query execution time.</li>
          <li>Result Count - Shows the number of returned documents. </li>
          <li>Mutation Count - Shows the number of documents deleted or changed by the query. This
            appears only for UPDATE and DELETE queries instead of Result Count. Result Size: Shows
            the size in bytes of the query result. </li>
        </ul>
      </p>
      <p>The following figures display the result of the query <codeph>SELECT * FROM `travel-sample`
          LIMIT 1;</codeph> in different formats. </p>
      <p/>
      <p>You can choose to view the results in one of the following formats: <dl>
          <dlentry>
            <dt>JSON Format</dt>
            <dd>
              <p>JSON, where the results are formatted to make the data easy to read. You can also
                expand and collapse objects and array values using the small arrow icons next to the
                line numbers. </p>
              <p/>
              <p>
                <image placement="break" href="images/query-workbench-result-json.png" width="720"
                  id="image_tgc_fz3_cz"/>
              </p>
            </dd>
          </dlentry>
          <dlentry>
            <dt>Table Format</dt>
            <dd>
              <p>Table, where the results are presented in a tabular format. The tool converts the
                JSON documents to HTML tables, and presents sub-objects or sub-arrays as sub-tables.
                This format works well for queries that return an array of objects, like
                  <codeph>select `beer-sample`.* from `beer-sample`;</codeph>. You can hover the
                mouse pointer over a data value to see the path to that value in a tool tip. You can
                sort a column by clicking the column header. </p>
              <p/>
              <p>
                <image placement="break" href="images/query-workbench-result-table.png" width="720"
                  id="image_ah2_gz3_cz"/>
              </p>
            </dd>
          </dlentry>
          <dlentry>
            <dt>Tree Format</dt>
            <dd>Tree (or list), where the results are presented in a tree (or list or outline)
              format. Each sub-object or sub-array is displayed as a sub-list. You can hover the
              mouse pointer over a data value to see the path to that value in a tool tip.<p/><image
                placement="break" href="images/query-workbench-result-tree.png" width="720"
                id="image_jck_hz3_cz"/></dd>
          </dlentry>
        </dl></p>
    </section>
    
    <section>
      <title>Query Plans</title>
      <p>Each time a query is executed, an <codeph>explain</codeph> command is automatically run in
        the background to retrieve the query plan for that query. You may also generate the query
        plan by clicking the <uicontrol>Explain</uicontrol> link. This query plan may be shown as
        either:</p>
      <p>
        <dl>
          <dlentry>
            <dt>Plan</dt>
            <dd>This is where the results are presented in a graphical format. At the top, it shows
              a summary which also shows lists of the buckets, indexes, and fields used by the
              query. At the bottom is a data-flow diagram of query operators, with the initial scans
              at the right, and the final output on the left. Potentially expensive operators are
              highlighted. Once the query is complete, if you have selected the <uicontrol>Collect
                query timings</uicontrol> option in the preferences dialog, the query plan will be
              updated with timing information (where available) for each operation. <p/>
              <p>
                <image placement="break" href="images/query-workbench-result-plan.png" width="720"
                  id="image_ysr_bqr_dz"/>
              </p></dd>
          </dlentry>
        </dl>
        <dl>
          <dlentry>
            <dt>Plan Text </dt>
            <dd>This simply shows the text output of the <i>explain</i> command. <p/><p>
                <image placement="break" href="images/query-workbench-result-plantext.png"
                  width="720" id="image_zct_cqr_dz"/>
              </p></dd>
          </dlentry>
        </dl>
      </p>
    </section>
  </body>
</topic>
