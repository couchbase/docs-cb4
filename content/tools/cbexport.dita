<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE topic PUBLIC "-//OASIS//DTD DITA Topic//EN" "topic.dtd">
<topic id="topic_lt4_wd3_vx">
  <title>cbexport</title>
  <shortdesc><codeph>cbexport</codeph> is a utility to export data from a Couchbase cluster. </shortdesc>
  <body><note>The <codeph>cbexport</codeph> feature is a Developer Preview version. This feature is
      considered experimental and  the functionality may change.</note>
    <p><b>Synopsis</b></p>
    <p><codeblock>cbexport [--version] [--help] &lt;command&gt; [&lt;args&gt;]</codeblock></p>
    <p><b>Description</b></p>
    <p><cmdname>cbexport</cmdname> is used to export data from Couchbase in various formats. For
      more information on how specific commands work, run <codeph>cbexport &lt;command&gt;
        --help</codeph>.</p>
    <p><b>Options</b></p>
    <table frame="all" rowsep="1" colsep="1" id="table_t4f_cq3_vx">
      <title>cbexport options</title>
      <tgroup cols="2">
        <colspec colname="c1" colnum="1" colwidth="1.0*"/>
        <colspec colname="c2" colnum="2" colwidth="2.0*"/>
        <thead>
          <row>
            <entry>Option</entry>
            <entry>Description</entry>
          </row>
        </thead>
        <tbody>
          <row>
            <entry>
              <p>--version</p>
            </entry>
            <entry>Prints the cbexport suite version that the cbexport program came from.</entry>
          </row>
          <row>
            <entry>--help</entry>
            <entry>Prints the synopsis and a list of commands. If a cbexport command is named, this
              option will bring up the manual page for that command.</entry>
          </row>
        </tbody>
      </tgroup>
    </table>
    <p><b>Commands</b></p>
    <p><cmdname>cbexport json</cmdname>: Exports JSON data from Couchbase to a file. </p>
    <p><b>Discussion</b></p>
    <p>The <cmdname>cbexport</cmdname> command is used to export JSON data from Couchbase to various
      formats. Each supported export format is a sub-command of the <cmdname>cbexport</cmdname>
      utility.</p>
    <section><title>cbexport json</title><p><cmdname>cbexport json</cmdname> exports JSON data from
        Couchbase to a file.</p><p><b>Synopsis</b></p><p>
        <codeblock>cbexport json [--cluster &lt;url>] [--bucket &lt;bucket_name>][--format &lt;data_format>]
              [--username &lt;username>][--password &lt;password>]
              [--include-key &lt;key>][--cacert &lt;path>][--no-ssl-verify]
              [--threads &lt;num>][--log-file &lt;path>]</codeblock>
      </p><p><b>Description</b></p><p>Exports JSON data from Couchbase. The <cmdname>cbexport
          json</cmdname> command supports exporting JSON documents to a file with a document on each
        line or a file that contains a JSON list where each element is a document. The file format
        to export to can be specified with the <codeph>--format</codeph> flag. See <xref
          href="#topic_lt4_wd3_vx/dataset-formats" format="dita">Dataset Formats</xref> for more
        details on the supported file formats.</p><p><b>Options</b></p><p>The following tables list
        the required and optional parameters for the <cmdname>cbexport json</cmdname> command.</p><p>
        <table frame="all" rowsep="1" colsep="1" id="table_thk_3q3_vy">
          <title>Required options for cbexport json</title>
          <tgroup cols="2">
            <colspec colname="c1" colnum="1" colwidth="1.0*"/>
            <colspec colname="c2" colnum="2" colwidth="2.0*"/>
            <thead>
              <row>
                <entry>Option</entry>
                <entry>Description</entry>
              </row>
            </thead>
            <tbody>
              <row>
                <entry> -c,--cluster &lt;url></entry>
                <entry>The host name of a node in the cluster to export data from. See <xref
                    href="#topic_fsg_5d3_vx/host-formats-json" format="dita">Host Formats</xref> for
                  details about host name specification formats.</entry>
              </row>
              <row>
                <entry>-u,--username &lt;username></entry>
                <entry>The user name for cluster authentication. The user must have the appropriate
                  privileges to read the bucket from which data will be exported.</entry>
              </row>
              <row>
                <entry>-p,--password &lt;password></entry>
                <entry>The password for cluster authentication. The user must have the appropriate
                  privileges to read from the bucket from which data will be exported. Specifying
                  this option without a value will allow the user to type a non-echoed password to
                  stdin.</entry>
              </row>
              <row>
                <entry>-b,--bucket &lt;bucket_name></entry>
                <entry>The name of the bucket to export data from.</entry>
              </row>
              <row>
                <entry>-f,--format &lt;format></entry>
                <entry>The format of the dataset specified (lines or list). See <xref
                    href="#topic_lt4_wd3_vx/dataset-formats" format="dita">Dataset Formats</xref>
                  for more details on the formats supported by <cmdname>cbexport</cmdname>.</entry>
              </row>
              <row>
                <entry>-o,--output &lt;path></entry>
                <entry>The path to the location of the file that JSON documents from Couchbase
                  should be exported to. This may be an absolute or relative path, but must point to
                  a file. The file does not have to exist when the command is invoked.</entry>
              </row>
            </tbody>
          </tgroup>
        </table>
      </p><table frame="all" rowsep="1" colsep="1" id="table_s21_mq3_vy">
        <title>Optional options for cbexport json</title>
        <tgroup cols="2">
          <colspec colname="c1" colnum="1" colwidth="1*"/>
          <colspec colname="c2" colnum="2" colwidth="1.97*"/>
          <thead>
            <row>
              <entry>Option</entry>
              <entry>Description</entry>
            </row>
          </thead>
          <tbody>
            <row>
              <entry>--include-key &lt;key></entry>
              <entry>Couchbase stores data as key value pairs where the value is a JSON document and
                the key is an identifier for retrieving that document. By default
                  <cmdname>cbexport</cmdname> will only export the value portion of the document. If
                you wish to include the key in the exported document, then this option should be
                specified. The value passed to this option should be the field name that the key is
                stored under.</entry>
            </row>
            <row>
              <entry>--no-ssl-verify</entry>
              <entry>Skips the SSL verification phase. Specifying this flag will allow a connection
                using SSL encryption, but will not verify the identity of the server you connect to.
                You are vulnerable to a man-in-the-middle attack if you use this flag. Either this
                flag or the <codeph>--cacert</codeph> flag must be specified when using an SSL
                encrypted connection.</entry>
            </row>
            <row>
              <entry>--cacert</entry>
              <entry>Specifies a CA certificate that will be used to verify the identity of the
                server being connecting to. Either this flag or the <codeph>--no-
                  ssl-verify</codeph> flag must be specified when using an SSL encrypted
                connection.</entry>
            </row>
            <row>
              <entry>-t,--threads &lt;num></entry>
              <entry>Specifies the number of concurrent clients to use when exporting data. Fewer
                clients means exports will take longer, but there will be less cluster resources
                used to complete the export. More clients means faster exports, but at the cost of
                more cluster resource usage. This parameter defaults to 1 if it is not specified and
                it is recommended that this parameter is not set to be higher than the number of
                CPUs on the machine where the export is taking place.</entry>
            </row>
            <row>
              <entry>-l,--log-file</entry>
              <entry>Specifies a log file for writing debugging information about
                  <cmdname>cbexport</cmdname> execution.</entry>
            </row>
          </tbody>
        </tgroup>
      </table><p id="host-formats-json"><b>Host Formats</b></p><p>When specifying a host for the
          <cmdname>cbexport</cmdname> command the following formats are expected: <ul
          id="ul_m5j_ns3_vy">
          <li><codeph>couchbase://&lt;addr></codeph></li>
          <li><codeph>&lt;addr>:&lt;port></codeph></li>
          <li><codeph>http://&lt;addr>:&lt;port></codeph></li>
        </ul></p><p>We recommend using the <codeph>couchbase://&lt;addr></codeph> format for
        standard installations. The other two formats allow an option to take a port number which is
        needed for non-default installations where the admin port has been set up on a port other
        that 8091.</p><p id="dataset-formats"><b>Dataset Formats</b></p><p>The cbexport command
        supports the following formats:<ul id="ul_frg_4sj_vx">
          <li><b>Lines</b>
            <p>The lines format specifies a file that contains one JSON document on every line in
              the file. This format is specified by setting the <codeph>--format</codeph> option to
              "lines". Here's an example of a file in lines format:
              <codeblock>{"key": "mykey1", "value": "myvalue1"}
{"key": "mykey2", "value": "myvalue2"}
{"key": "mykey3", "value": "myvalue3"}
{"key": "mykey4", "value": "myvalue4"}</codeblock></p></li>
          <li><b>List</b><p>The list format specifies a file which contains a JSON list where each
              element in the list is a JSON document. The file may only contain a single list, but
              the list may be specified over multiple lines. This format is specified by setting the
                <codeph>--format</codeph> option to "list". Here's an example of a file in list
              format:
              <codeblock>[
  {
    "key": "mykey1",
    "value": "myvalue1"
  },
  {"key": "mykey2", "value": "myvalue2"},
  {"key": "mykey3", "value": "myvalue3"},
  {"key": "mykey4", "value": "myvalue4"}
]</codeblock></p></li>
        </ul></p><p><b>Examples</b></p>To export data to /data/lines.json using the lines format and
      running with 4 threads the following command can be
        run.<codeblock>$ cbexport json -c couchbase://127.0.0.1 -u Administrator -p password \
          -b default -o /data/lines.json -f lines -t 4</codeblock><p>To
        export data from /data/list.json using the list format the following command can be run.
        <codeblock>$ cbimport json -c couchbase://127.0.0.1 -u Administrator -p password \
           -b default -o /data/list.json -f list </codeblock></p></section>
  </body>
  <related-links>
    <link href="cbimport.dita"></link>
  </related-links>
</topic>
