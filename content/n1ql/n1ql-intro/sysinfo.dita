<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE concept
  PUBLIC "-//OASIS//DTD DITA Concept//EN" "concept.dtd">
<concept id="topic_2_4" xml:lang="en-US">
	<title id="title__Toc272567200">Getting System Information</title>
	<shortdesc>N1QL has a system catalog that stores metadata about a database. The system catalog is a namespace called <i>system</i>.</shortdesc>
	<conbody>
		<p>There is a keyspace for each type of artifact. The keyspace names are plural in order to avoid conflicting with N1QL keywords.</p>
		<section>
			<title>Logical Hierarchy</title>
			<p>N1QL has the following artifacts:</p>
			<ul>
				<li><b>Datastores</b> 
					<p>Datastores are similar to sites. A datastore is a database deployment, for example, a server cluster, cloud service, or mobile installation. It is analogous to a relation database instance.</p></li>
				<li><b>Namespaces</b> 
					<p>Namespaces are similar to pools. A namespace is a unit of authorization,
						resource allocation, and tenancy. It is analogous to a relational database or
						schema. </p></li>
				<li><b>Keyspaces</b>
					<p>Keyspaces map to buckets in Couchbase Server. A keyspace is a set of
						documents that may vary in structure. It is a unit of authorization and
						resource allocation. It is analogous to a relational database
					table.</p></li>
				<li><b>Indexes</b>
					<p>An index on a keyspace. It is analogous to a relational database index. Types
						of indexes include b-tree (ForestDB or MOI) and view indexes.</p></li>
				<li><b>Dual</b> 
					<p>The dual keyspace has been added for evaluating constant expressions. It contains
					a single entry with no attributes.</p></li>
			</ul>
		</section>

		<section id="querying-datastores">
			<title>Querying Datastores</title>
			<p>You can query datastores using the <codeph>SELECT</codeph> statement as follows:</p>
			<codeblock>SELECT * FROM system:datastores</codeblock>
			<p> The query returns the following attributes: </p>
			<ul>
				<li><systemoutput>id</systemoutput>: string (id for the datastore)</li>
				<li><systemoutput>url</systemoutput>: string (URL for the datastore instance)</li>
			</ul>
		</section>

		<section id="querying-namespaces">
			<title>Querying Namespaces</title>
			<p>You can query namespaces using the <codeph>SELECT</codeph> statement as follows:</p>
			<codeblock>SELECT * FROM system:namespaces</codeblock>
			<p> The query returns the following attributes: </p>
			<ul>
				<li><systemoutput>id</systemoutput>: string (id for the namespace)</li>
				<li><systemoutput>name</systemoutput>: string (name for the namespace)</li>
				<li><systemoutput>store_id</systemoutput>: string (id for the datastore to which the namespace belongs)</li>
			</ul>
		</section>

		<section id="querying-keyspaces">
			<title id="title__Toc272567207">Querying Keyspaces</title>
			<p>You can query keyspaces using the <codeph>SELECT</codeph> statement as follows:</p>
			<codeblock>SELECT * FROM system:keyspaces</codeblock>
			<p> The query returns the following attributes: </p>
			<ul>
				<li><systemoutput>id</systemoutput>: string (id for the keyspace)</li>
				<li><systemoutput>name</systemoutput>: string (name for the keyspace)</li>
				<li><systemoutput>namespace_id</systemoutput>: string (id for the namespace to which the keyspace belongs)</li>
				<li><systemoutput>store_id</systemoutput>: string (id for the datastore to which the keyspace belongs)</li>
			</ul>
		</section>

		<section id="querying-indexes">
			<title id="title__Toc272567208">Querying Indexes</title>
			<p>You can query indexes using the <codeph>SELECT</codeph> statement as follows:</p>
			<codeblock>SELECT * FROM system:indexes</codeblock>
			<p> The query returns the following attributes: </p>
			<ul>
				<li><systemoutput>id</systemoutput>: string (id for the index)</li>
				<li><systemoutput>name</systemoutput>: string (name for the index)</li>
				<li><systemoutput>index_key</systemoutput>: array of strings (list of index keys)</li>
				<li><systemoutput>index_type</systemoutput>: string (type of index, for example, view index)</li>
				<li><systemoutput>keyspace_id</systemoutput>: string (id for the keyspace to which the index belongs)</li>
				<li><systemoutput>namespace_id</systemoutput>: string (id for the namespace to which the index belongs)</li>
				<li><systemoutput>store_id</systemoutput>: string (id for the datastore to which the index belongs)</li>
			</ul>
		</section>

		<section id="querying-dual">
			<title>Querying Dual</title>
			<p>You can use dual to evaluate constant expressions. </p>
			<codeblock>SELECT 2+5 FROM system:dual</codeblock>
			<p> The query returns the result of the  expression, 7 in this case. </p>
		</section>

	</conbody>
</concept>
