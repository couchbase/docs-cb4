<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE topic PUBLIC "-//OASIS//DTD DITA Topic//EN" "topic.dtd">
<topic id="topic_o4s_2px_vx">
  <title>Date Functions</title>
  <body>
    <section><title>ARRAY_DATE_RANGE(expression1, expression2, part [,n])</title>
      <p>This function returns an array of dates from the start date until the end date,
        incrementing the part specified in default increments of 1. You can choose to increment (or
        decrement) by a different number by specifying the optional argument ,<i>n</i>. </p>
      <codeblock spectitle="Examples">SELECT ARRAY_DATE_RANGE('2015-11-30T15:04:05.999', '2017-04-14T15:04:06.998', 'quarter');  
"results": [
        {
            "$1": [
                "2015-11-30T15:04:05.999",
                "2016-03-01T15:04:05.999",
                "2016-06-01T15:04:05.999",
                "2016-09-01T15:04:05.999",
                "2016-12-01T15:04:05.999",
                "2017-03-01T15:04:05.999"
            ]
        }
    ]

SELECY ARRAY_DATE_RANGE('2016-01-01T15:04:05.999', '2016-04-14T15:04:05.998', 'day', 1);
    
"results": [
        {
            "$1": [
                "2016-01-01T15:04:05.999",
                "2016-01-02T15:04:05.999",
                "2016-01-03T15:04:05.999",
                "2016-01-04T15:04:05.999",
                "2016-01-05T15:04:05.999",
                "2016-01-06T15:04:05.999",
                "2016-01-07T15:04:05.999",
                "2016-01-08T15:04:05.999",
                "2016-01-09T15:04:05.999",
                "2016-01-10T15:04:05.999",
                "2016-01-11T15:04:05.999",
                "2016-01-12T15:04:05.999",
                "2016-01-13T15:04:05.999",
                "2016-01-14T15:04:05.999",
                "2016-01-15T15:04:05.999",
                "2016-01-16T15:04:05.999",
                "2016-01-17T15:04:05.999",
                "2016-01-18T15:04:05.999",
                "2016-01-19T15:04:05.999",
                "2016-01-20T15:04:05.999",
                "2016-01-21T15:04:05.999",
                "2016-01-22T15:04:05.999",
                "2016-01-23T15:04:05.999",
                "2016-01-24T15:04:05.999",
                "2016-01-25T15:04:05.999",
                "2016-01-26T15:04:05.999",
                "2016-01-27T15:04:05.999",
                "2016-01-28T15:04:05.999",
                "2016-01-29T15:04:05.999",
                "2016-01-30T15:04:05.999",
                "2016-01-31T15:04:05.999",
                "2016-02-01T15:04:05.999",
                "2016-02-02T15:04:05.999",
                "2016-02-03T15:04:05.999",
                "2016-02-04T15:04:05.999",
                "2016-02-05T15:04:05.999",
                "2016-02-06T15:04:05.999",
                "2016-02-07T15:04:05.999",
                "2016-02-08T15:04:05.999",
                "2016-02-09T15:04:05.999",
                "2016-02-10T15:04:05.999",
                "2016-02-11T15:04:05.999",
                "2016-02-12T15:04:05.999",
                "2016-02-13T15:04:05.999",
                "2016-02-14T15:04:05.999",
                "2016-02-15T15:04:05.999",
                "2016-02-16T15:04:05.999",
                "2016-02-17T15:04:05.999",
                "2016-02-18T15:04:05.999",
                "2016-02-19T15:04:05.999",
                "2016-02-20T15:04:05.999",
                "2016-02-21T15:04:05.999",
                "2016-02-22T15:04:05.999",
                "2016-02-23T15:04:05.999",
                "2016-02-24T15:04:05.999",
                "2016-02-25T15:04:05.999",
                "2016-02-26T15:04:05.999",
                "2016-02-27T15:04:05.999",
                "2016-02-28T15:04:05.999",
                "2016-02-29T15:04:05.999",
                "2016-03-01T15:04:05.999",
                "2016-03-02T15:04:05.999",
                "2016-03-03T15:04:05.999",
                "2016-03-04T15:04:05.999",
                "2016-03-05T15:04:05.999",
                "2016-03-06T15:04:05.999",
                "2016-03-07T15:04:05.999",
                "2016-03-08T15:04:05.999",
                "2016-03-09T15:04:05.999",
                "2016-03-10T15:04:05.999",
                "2016-03-11T15:04:05.999",
                "2016-03-12T15:04:05.999",
                "2016-03-13T15:04:05.999",
                "2016-03-14T15:04:05.999",
                "2016-03-15T15:04:05.999",
                "2016-03-16T15:04:05.999",
                "2016-03-17T15:04:05.999",
                "2016-03-18T15:04:05.999",
                "2016-03-19T15:04:05.999",
                "2016-03-20T15:04:05.999",
                "2016-03-21T15:04:05.999",
                "2016-03-22T15:04:05.999",
                "2016-03-23T15:04:05.999",
                "2016-03-24T15:04:05.999",
                "2016-03-25T15:04:05.999",
                "2016-03-26T15:04:05.999",
                "2016-03-27T15:04:05.999",
                "2016-03-28T15:04:05.999",
                "2016-03-29T15:04:05.999",
                "2016-03-30T15:04:05.999",
                "2016-03-31T15:04:05.999",
                "2016-04-01T15:04:05.999",
                "2016-04-02T15:04:05.999",
                "2016-04-03T15:04:05.999",
                "2016-04-04T15:04:05.999",
                "2016-04-05T15:04:05.999",
                "2016-04-06T15:04:05.999",
                "2016-04-07T15:04:05.999",
                "2016-04-08T15:04:05.999",
                "2016-04-09T15:04:05.999",
                "2016-04-10T15:04:05.999",
                "2016-04-11T15:04:05.999",
                "2016-04-12T15:04:05.999",
                "2016-04-13T15:04:05.999"
            ]
        }
    ]


SELECT ARRAY_DATE_RANGE('2004-01-03','2004-12-03', 'month', 4);
   
 "results": [
        {
            "$1": [
                "2004-01-03",
                "2004-05-03",
                "2004-09-03"
            ]
        }
    ]

SELECT ARRAY_DATE_RANGE('2016-01-14T15:04:05.999', '2016-01-01T15:04:06.998', 'day', -1)",
    "results": [
        {
            "$1": [
                "2016-01-14T15:04:05.999",
                "2016-01-13T15:04:05.999",
                "2016-01-12T15:04:05.999",
                "2016-01-11T15:04:05.999",
                "2016-01-10T15:04:05.999",
                "2016-01-09T15:04:05.999",
                "2016-01-08T15:04:05.999",
                "2016-01-07T15:04:05.999",
                "2016-01-06T15:04:05.999",
                "2016-01-05T15:04:05.999",
                "2016-01-04T15:04:05.999",
                "2016-01-03T15:04:05.999",
                "2016-01-02T15:04:05.999"
            ]
        }
    ]</codeblock>
    </section>
    <section><title>CLOCK_LOCAL()</title>
    <p>Returns the local time.</p>
    <codeblock spectitle="Example">SELECT CLOCK_LOCAL();
[
        {
            "$1": "2016-09-26T11:04:51.156-07:00"
        }
    ]</codeblock>
    </section>
    <section><title>CLOCK_UTC()</title>
      <p>Returns the universal time.</p>
      <codeblock spectitle="Example">SELECT CLOCK_UTC();
[
        {
            "$1": "2016-09-26T18:04:54.916Z"
        }
    ]</codeblock>
    </section>
    <section><title>CLOCK_TZ()</title>
      <p>Returns the time in the specified timezone.</p>
      <codeblock spectitle="Examples">SELECT CLOCK_TZ('UTC');
[
        {
            "$1": "2016-09-26T18:05:14.266Z"
        }
    ]

SELECT CLOCK_TZ('US/Eastern');
[
        {
            "$1": "2016-09-26T14:05:21.648-04:00"
        }
    ]

SELECT CLOCK_TZ('US/Pacific');
[
        {
            "$1": "2016-09-26T11:05:32.719-07:00"
        }
    ]</codeblock>
    </section>
    <section><title>DATE_FORMAT_STR(expr,fmt)</title>
      <p>This function converts a given date string parameter to the specified format.</p>
      <codeblock spectitle="Example">SELECT DATE_FORMAT_STR('2016-05-15T00:00:23+02:00','1222-11-11 11:11:11');
[
        {
            "$1": "2016-05-15 00:00:23"
        }
]</codeblock>
    </section>
    <section><title>DATE_PART_MILLIS(expression, part [,timezone])</title>
      <p>This function first converts the date in UNIX milliseconds into a date string in the
        specified timezone, and then returns the corresponding part. The <codeph>expression</codeph>
        represents time in UNIX milliseconds, <codeph>part</codeph> is one of the date part strings,
        and <codeph>timezone</codeph> specifies the timezone for the corresponding output. If
        timezone is not specified, <userinput>system/local</userinput> is used by default. You can
        specify the timezone as <userinput>system/local</userinput> or
        <userinput>UTC</userinput>.</p>
      <codeblock spectitle="Example">SELECT DATE_PART_MILLIS(1463284740000,'day', 'UTC') ;
[
        {
            "$1": 15
        }
]</codeblock>
    </section>
    <section><title>MILLIS_TO_LOCAL(millis,fmt)</title>
      <p>Converts the UNIX milliseconds into local time in the specified format.  The format can be
        any of the supported <xref
          href="http://developer.couchbase.com/documentation/server/current/n1ql/n1ql-language-reference/datefun.html"
          format="html" scope="external">date formats</xref>.</p>
      <codeblock spectitle="Example">SELECT MILLIS_TO_LOCAL(1.453485008e+12, '2006-01-02');
[
        {
            "$1": "2016-01-22"
        }
    ]</codeblock>
    </section>
    <section><title>MILLIS_TO_ZONE_NAME(millis,zone)</title>
      <p>Converts the UNIX milliseconds into time in the specified timezone.</p>
      <codeblock spectitle="Example">SELECT MILLIS_TO_ZONE_NAME(1.453485008e+12, 'UTC') ;
[
        {
            "$1": "2016-01-22T17:50:08Z"
        }
    ]</codeblock>
    </section>
    <section><title>MILLIS_TO_TZ(millis,zone)</title>
      <p>Converts the UNIX milliseconds into time in the specified timezone.</p>
      <codeblock spectitle="Example">SELECT MILLIS_TO_TZ(1.453485008e+12,'UTC') ;
[
        {
            "$1": "2016-01-22T17:50:08Z"
        }
    ]

SELECT MILLIS_TO_TZ(1.453485008e+12,'US/Eastern') ;
[
        {
            "$1": "2016-01-22T12:50:08-05:00"
        }
    ]

SELECT MILLIS_TO_TZ(1.453485008e+12,'US/Pacific') ;
[
        {
            "$1": "2016-01-22T09:50:08-08:00"
        }
    ]</codeblock>
    </section>
    <section><title>NOW_LOCAL(void)</title>
      <p>Returns the current local time.</p>
      <codeblock spectitle="Example">SELECT NOW_LOCAL();
[
        {
            "$1": "2016-09-26T10:58:30.548-07:00"
        }
    ]</codeblock>
    </section>
    <section><title>NOW_TZ(zone)</title>
      <p>Returns the current time in specified timezone.</p>
      <codeblock spectitle="Example">SELECT NOW_TZ('UTC');
[
        {
            "$1": "2016-09-26T10:58:49.53-07:00"
        }
    ],


SELECT NOW_TZ('US/Eastern');
[
        {
            "$1": "2016-09-26T11:01:46.769-07:00"
        }
]</codeblock>
    </section>
    <section><title>NOW_UTC()</title>
      <p>Returns the current time in UTC.</p>
      <codeblock spectitle="Example">SELECT NOW_UTC();
[
        {
            "$1": "2016-09-26T10:58:37.274-07:00"
        }
    ]</codeblock>
    </section>
    <section><title>STR_TO_ZONE_NAME(strdate,zone)</title>
      <p>Returns the date specified as a string in the specified timezone.</p>
      <codeblock spectitle="Example">SELECT STR_TO_ZONE_NAME('2016-01-22T09:50:08-08:00', 'UTC');
[
        {
            "$1": "2016-01-22T17:50:08Z"
        }
    ]</codeblock>
    </section>
    <section><title>STR_TO_TZ(strdate,zone)</title>
      <p>Returns the date specified as a string in the specified timezone.</p>
      <codeblock spectitle="Example">SELECT STR_TO_TZ('2016-01-22T09:50:08-08:00', 'UTC');
[
        {
            "$1": "2016-01-22T17:50:08Z"
        }
    ]</codeblock>
    </section>
  </body>
</topic>
