<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE concept PUBLIC "-//OASIS//DTD DITA Concept//EN" "concept.dtd">
<concept id="concept_yzq_ktc_np">
 <title>MERGE</title>
 
 <conbody>
    <p>A MERGE statement provides the ability to update, insert into, or delete from a keyspace based on the results of a join with another keyspace or subquery. It is possible to specify actions (insert, update, delete) on the keyspace based a match or no match in the join. Multiple actions can be specified in the same query.</p>
    <p><i>merge:</i></p>
 <codeblock>MERGE INTO keyspace-ref USING merge-source ON key-clause merge-actions [limit-clause] [returning-clause]   
 </codeblock><fig id="fig_hqj_glf_3z"><title>Railroad Diagram: merge</title>
 </fig><image placement="break" href="images/merge.png" id="image_kwp_1lf_3z"/>  
     <p><i>merge-source:</i></p>
    <codeblock>[from-path] ( [AS] [alias] | ( select ) [AS] alias</codeblock><fig id="merge-source"><title>Railroad Diagram: merge-source</title>
    </fig>
      <image placement="break" href="images/merge-source.png" id="merge"/>  
     <p><i>keys-clause:</i></p>
    <codeblock>[PRIMARY] KEY expression</codeblock><fig id="key-clause"><title>Railroad Diagram: key-clause</title>
    </fig>
      <image placement="break" href="images/key-clause.png" id="image_bmg_cmf_3z"/>   
  <p><i>merge-actions:</i></p>
    <codeblock> [merge-update] [merge-delete] [merge-insert]</codeblock><fig id="merge-action"><title>Railroad Diagram: merge-actions</title>
    </fig>
      <image placement="break" href="images/merge-actions.png" id="image_o5y_dmf_3z"/> 
     <p><i>merge-update:</i></p>
    <codeblock>WHEN MATCHED THEN UPDATE [set-clause] [unset-clause] [where-clause]</codeblock><fig id="merge-update"><title>Railroad Diagram: merge-update</title>
    </fig>
      <image placement="break" href="images/merge-update.png" id="image_c5p_fmf_3z"/> 
     <p><i>merge-delete:</i></p>
    <codeblock>WHEN MATCHED THEN DELETE [where-clause]</codeblock><fig id="merge-delete"><title>Railroad Diagram: merge-delete</title>
    </fig>
      <image placement="break" href="images/merge-delete.png" id="image_o2t_gmf_3z"/> 
     <p><i>merge-insert:</i></p>
    <codeblock>WHEN NOT MATCHED THEN INSERT expression [where-clause]</codeblock><fig id="merge-insert"><title>Railroad Diagram: merge-insert</title>
    </fig>
      <image placement="break" href="images/merge-insert.png" id="image_jsx_hmf_3z"/>
    <p/>
    <p><b>RBAC Privileges</b></p>
    <p>User executing the MERGE statement must have the following privileges:</p>
    <p><ul id="ul_jml_fdp_4z">
        <li><i>Query Select</i> privileges on the source keyspace</li>
        <li><i>Query Insert</i>, <i>Query Update</i>, or <i>Query Delete</i> privileges on the
          target keyspace as per the MERGE actions</li>
        <li><i>Query Select</i> privileges on the keyspaces referred in the RETURNING clause</li>
      </ul>For more details about user roles, see <xref
        href="../../security/security-authorization.dita#authorization"/>.</p>
    <p/>
    <p>For example, </p>
    <p>
      <codeblock>MERGE INTO `travel-sample` t 
USING [{"id":"21728"},{"id":"21730"}] source
ON KEY "hotel_"|| source.id
WHEN MATCHED THEN UPDATE SET t.old_vacancy = t.vacancy, t.vacancy = false 
RETURNING meta(t).id, t.old_vacancy, t.vacancy;</codeblock>
    </p> 
 
  <p><b>Examples</b></p>
  <p>The following statement updates product based on orders.</p>
  <codeblock>MERGE INTO product p USING orders o ON KEY o.productId
WHEN MATCHED THEN
     UPDATE SET p.lastSaleDate = o.orderDate
WHEN MATCHED THEN
     DELETE WHERE p.inventoryCount  &lt;= 0</codeblock>
    <p>The following statement merges two datasets containing employee information. It then updates
            all_empts on match with emps_deptb and inserts when there is no match.</p>
     <codeblock>MERGE INTO all_empts a USING emps_deptb b ON KEY b.empId
WHEN MATCHED THEN
     UPDATE SET a.depts = a.depts + 1
     a.title = b.title || ", " || b.title
WHEN NOT MATCHED THEN
     INSERT  { "name": b.name, "title": b.title, "depts": b.depts, "empId": b.empId, "dob": b.dob }     </codeblock>


  
  
 </conbody>
</concept>
