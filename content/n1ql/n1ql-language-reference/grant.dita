<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE concept
  PUBLIC "-//OASIS//DTD DITA Concept//EN" "concept.dtd">
<concept id="topic_11_5" xml:lang="en-US">
    <title>GRANT</title>
    <shortdesc>The GRANT statement allows granting any RBAC roles to a specific user.</shortdesc>
    <conbody>
        <p>Roles can be of the following two types:<table frame="all" rowsep="1" colsep="1"
                id="table_idr_mz2_p1b">
                <tgroup cols="2" align="left">
                    <colspec colname="c1" colnum="1" colsep="1" rowsep="1" colwidth="1*"/>
                    <colspec colname="c2" colnum="2" colsep="1" rowsep="1" colwidth="7.33*"/>
                    <tbody>
                        <row>
                            <entry><b>simple</b></entry>
                            <entry>Roles which apply generically to all buckets/resources in the
                                    cluster.<p>For example:<codeph> ClusterAdmin </codeph>or<codeph>
                                        BucketAdmin </codeph></p></entry>
                        </row>
                        <row>
                            <entry><b>parameterized by a bucket</b></entry>
                            <entry>Roles which are defined for the scope of the specified bucket
                                only. The bucket name is specified after ON.<p>For example:<codeph>
                                        BucketReader ON `travel-sample` </codeph></p><p> or <codeph>
                                        Query_Select ON `travel-sample`</codeph></p></entry>
                        </row>
                    </tbody>
                </tgroup>
            </table></p>
        <p>
            <note>Only Full Administrators can run the GRANT statement. For more details about user
                roles, see <xref href="../../security/security-authorization.dita#authorization"
                />.</note>
        </p>
        <p><b>Syntax</b></p>
        <p>
            <codeblock>GRANT <varname>role1</varname>   [, <varname>role2</varname>, ...]
   ON <varname>bucket1</varname> [, <varname>bucket2</varname>, ...]
   TO <varname>user1</varname>   [, <varname>user2</varname>, ...];</codeblock>
        </p>
        <p>
            <dl>
                <dlentry>
                    <dt><b>role</b></dt>
                    <dd><codeph>RBAC-role[(bucket_name)]</codeph></dd>
                    <dd><codeph>RBAC-role</codeph> is one of the <xref
                        href="../../security/security-authorization.dita#authorization">RBAC
                        role names predefined</xref> by Couchbase Server.</dd>
                    <dd><codeph>RBAC-user</codeph> is the user name created by the Couchbase Server
                        RBAC system.</dd>
                    <dd>The following roles have short forms that can be used as well:<ul
                            id="ul_rwt_tw2_nbb">
                            <li><codeph>query_select → select</codeph></li>
                            <li><codeph>query_insert → insert</codeph></li>
                            <li><codeph>query_update → update</codeph></li>
                            <li><codeph>query_delete → delete</codeph></li>
                        </ul></dd>
                </dlentry>
            </dl>
        </p>
        <dl>
            <dlentry>
                <dt><b>bucket</b></dt>
                <dd>The name of your Couchbase or Memcached bucket or buckets.</dd>
            </dlentry>
        </dl>
        <dl>
            <dlentry>
                <dt><b>user</b></dt>
                <dd><codeph>RBAC-user</codeph> in your bucket.</dd>
            </dlentry>
        </dl>
        <p>GRANT statements support legacy systems and have two
            forms:<codeblock spectitle="1. Unparameterized Roles" outputclass="language-json">GRANT Replication Admin, Query External Access
   TO cchaplan, jgleason;
   
GRANT replication_admin, query_external_access
   TO cchaplan, jgleason;</codeblock></p>
        <codeblock outputclass="language-json" spectitle="2. Parameterized Roles">GRANT Query Select, Views Admin
   ON orders, customers
   TO bill, linda;

GRANT query_select, views_admin
   ON orders, customers
   TO bill, linda;</codeblock>
        <note>Mixing of parameterized and unparameterized roles or syntax is not allowed and will
            create an error.</note>
        <p><b>Example 1</b>:  Grant the role of Cluster Administrator to three people.</p>
        <p>
            <codeblock outputclass="language-json">GRANT ClusterAdmin TO david, michael, robin;</codeblock>
        </p>
        <p><b>Example 2</b>: Grant the roles of Cluster Administrator and Bucket Reader in the
            Travel Sample bucket to
            Debby.<codeblock outputclass="language-json">GRANT ClusterAdmin, BucketReader ON `travel-sample` TO debby;</codeblock></p>
    </conbody>
</concept>
