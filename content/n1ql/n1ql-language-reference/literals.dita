<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE concept
  PUBLIC "-//OASIS//DTD DITA Concept//EN" "concept.dtd">
<concept id="topic_5" xml:lang="en-US">
	<title id="title__Toc272567227">Literals</title>
	<shortdesc>Literal values include strings, numbers, TRUE, FALSE, NULL, and MISSING. </shortdesc>

	<conbody>
		<p> N1QL supports the same literals as JSON, as defined by <xref href="http://json.org/"
				scope="external" format="html">json.org</xref>, with these exceptions:</p>
		<ul>

			<li>In N1QL, "true", "false," and "null" are case-insensitive to be consistent with other
				N1QL keywords. In standard JSON, "true", "false," and "null" are case-sensitive. </li>
			<li>"missing" is added as a literal expression, although it is not returned in final
				results. Missing is omitted from objects, and is converted to null in result arrays. </li>
			<li>In N1QL single and double quotation marks can be used for strings. JSON supports only
				double quotation marks. </li>

		</ul>
		<p>Wherever a value is expected, either of two special values may appear: NULL (denoting an
			out-of-band value that is not comparable to any other value), and MISSING (denoting the
			absence of a value). Every value also has a "truth" value, these truth value conversions
			are explained in <xref href="../n1ql-language-reference/booleanlogic.dita">Boolean
				Logic</xref>.</p>
		<p>The following query returns emails from contacts where the contact name is ‘dave’.</p>

		<codeblock spectitle="Query:" outputclass="language-sql">SELECT email
FROM contacts 
AS contact
WHERE contact.name = 'dave'</codeblock>
		<codeblock spectitle="Result:" outputclass="language-json">{"email": "dave@gmail.com"}</codeblock>

		<section>
			<title>Booleans</title>
			<codeblock>TRUE | FALSE</codeblock>


			<p>Boolean propositions evaluate to TRUE and FALSE. These values are case-insensitive.</p>
		</section>
		<section>
			<title>Numbers</title>
			<codeblock>[-] [ digits] [fraction] [exponent] </codeblock>
			<p>Fraction:</p>
			<codeblock>. digits    </codeblock>
			<p>Exponent:</p>

			<codeblock>e | E  [ + | - ]  digits </codeblock>

			<p>Numbers can be either signed or unsigned digits with an optional fractional component
				and an optional exponent. The numbers should not start with a zero. </p>
		</section>

		<section>
			<title>Strings</title>
			<codeblock>"  characters  "  </codeblock>
			<p> Strings can be either Unicode characters or escaped characters.</p>
			<codeblock spectitle="Characters:">Unicode Character or an Backslash Escape character  </codeblock>
			<codeblock spectitle="Backslash Escaped characters:">\  ( \ | / | b | f | n | r | t | u hex-digit hex-digit hex-digit hex-digit )</codeblock>
		
		</section>

		<section>
			<title>NULL</title>
			<p>The literal NULL represents an empty value. </p>
			<codeblock>NULL</codeblock>
		</section>

		<section>
			<title>MISSING</title>
			<p>The MISSING literal is specific to N1QL and represents a missing name-value pair in a document.</p>
			<codeblock>MISSING</codeblock>
		</section>

	</conbody>


</concept>
