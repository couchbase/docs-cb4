<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE concept
  PUBLIC "-//OASIS//DTD DITA Concept//EN" "concept.dtd">
<concept id="topic_11_4_2" xml:lang="en-US">
  <title>PREPARE</title>
  <conbody>
    <section>
      <title>PREPARE statement</title>
      <p><i>prepare:</i></p>
      <codeblock> PREPARE [ name ( FROM | AS ) ] statement </codeblock>
      <p>The PREPARE statement prepares a query. A name can optionally be specified. A JSON array is
        returned that contains one result that has the properties: <ul>
          <li><parmname>name</parmname>: If present, this will be the name given to the PREPARE
            statement. If not, a name is generated. </li>
          <li><parmname>operator</parmname>: the execution plan of the statement being
            prepared.</li>
          <li><parmname>signature</parmname>: the signature of the statement being prepared. </li>
          <li><parmname>text</parmname>: the full PREPARE statement text.</li>
          <li><parmname>encoded_plan</parmname>: the full prepared statement in encoded format. The
            encoded plan can be included in addition to the prepared parameter in a request to
            execute a prepared statement. If the name given by the prepared parameter is
            unrecognized, the query engine will decode and execute the prepared statement given by
            the <parmname>encoded_plan</parmname> parameter. The decoded prepared statement will be
            saved by the query engine so the next request that uses its name will succeed.</li>
        </ul></p>
      <p>Repeatedly preparing a statement with the same name will result in the statement being
        overwritten. A PREPARE statement that uses a name that was used for a different statement
        will result in a duplicate name error. </p>
      <p>Prepared statements are stored in memory until you restart the Couchbase Server. After
        restarting the server, you must prepare the statements again before you can execute the
        prepared statements. </p>
      <p>For information on how to use prepared statements with various SDKs, refer to <xref
          href="../../sdk/n1ql-query.dita#toplevel/prepare-stmts">Querying with N1QL</xref> and
          <xref href="../../sdk/nodejs/n1ql-queries-with-sdk.dita#topic_esq_3td_5v">N1QL from the
          SDK</xref>.</p>
      <p/>
      <p><b>RBAC Privileges</b></p>
      <p>User executing the PREPARE statement must have the privileges of the statement being
        prepared. For more details about user roles, see <xref
          href="../../security/security-authorization.dita#authorization"/>.</p>
      <p>For example, </p>
      <p>To execute the following statement, user must have the <i>Query Select</i> privilege on
        both keyspaces <codeph>`travel-sample`</codeph> and <codeph>`beer-sample`</codeph>.</p>
      <p>
        <codeblock>PREPARE SELECT * FROM `travel-sample` 
WHERE city = (SELECT RAW city FROM `beer-sample`)</codeblock>
      </p>
      <p>To execute the following statement, user must have the <i>Query Update</i> and <i>Query
          Select</i> privileges on <codeph>`travel-sample`</codeph>.</p>
      <p>
        <codeblock>PREPARE UPDATE `travel-sample` 
SET city = "San Francisco" WHERE lower(city) = "sanfrancisco" 
RETURNING *</codeblock>
      </p>
    </section>
    <section>
      <title>EXECUTE statement</title>
      <p>For details, see <xref href="execute.dita#topic_11_4_2"/>.</p>
      </section>
  </conbody>
</concept>
