<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE topic PUBLIC "-//OASIS//DTD DITA Topic//EN" "topic.dtd">
<topic id="topic_o4s_2px_vx">
  <title>String Functions</title>
  <body>
    <section><title>REVERSE(expression)</title>
      <p>This function reverses a given string.</p>
      <codeblock spectitle="Example">SELECT REVERSE("won thgiarts ma I");
[ 
  {    
    "$1": "I am straight now"  
  }
]</codeblock>
    </section>
    <section><title>TOKENS()</title>
      <p>This function tokenizes the given input string based on specified delimiters, and other options. It recursively enumerates all tokens in a JSON value and returns an array of values (JSON atomic values) as the result.</p>
      <p>The following table lists the rules for each JSON type: <table frame="all" rowsep="1"
          colsep="1" id="table_wbb_d3g_wx">
          <tgroup cols="2">
            <colspec colname="c1" colnum="1" colwidth="1.0*"/>
            <colspec colname="c2" colnum="2" colwidth="1.0*"/>
            <thead>
              <row>
                <entry>JSON Type</entry>
                <entry>Return Value</entry>
              </row>
            </thead>
            <tbody>
              <row>
                <entry>MISSING</entry>
                <entry>[]</entry>
              </row>
              <row>
                <entry>NULL</entry>
                <entry>[NULL]</entry>
              </row>
              <row>
                <entry>false</entry>
                <entry>[false]</entry>
              </row>
              <row>
                <entry>true</entry>
                <entry>[true]</entry>
              </row>
              <row>
                <entry>number</entry>
                <entry>[number]</entry>
              </row>
              <row>
                <entry>string</entry>
                <entry>SPLIT(string)</entry>
              </row>
              <row>
                <entry>array</entry>
                <entry>FLATTEN(TOKENS(element) for each element in array<p>(Concatenation of element
                    tokens)</p></entry>
              </row>
              <row>
                <entry>object</entry>
                <entry>For each name-value pair, name+TOKENS(value)</entry>
              </row>
            </tbody>
          </tgroup>
        </table></p>
      <p>You can specify the following options: <ul id="ul_h2y_v3g_wx">
          <li><b>names</b>: Optional. By default, this is set to true and
              <codeph>TOKENS(expr)</codeph> will include field names. You can choose to not include
            field names by setting this option to false, such as <codeph>TOKENS(expr,
              FALSE)</codeph>.</li>
          <li><b>case</b>: Optional. specify the case sensitivity as <userinput>lower </userinput>or
              <userinput>upper</userinput>.
            <codeblock spectitle="Examples">SELECT  TOKENS( expr,
{ "names" : true, "case" : "lower" }
);

SELECT TOKENS( expr,
{ "case" : "lower" }
);

SELECT TOKENS( expr,
{ "names" : false }
)

SELECT TOKENS( expr );</codeblock></li>
          <li><b>specials</b>:Optional. Use this option to preserve strings with specials
            characters, such as email addresses, URLs, and hyphenated phone numbers. The default
            value is false.</li>
        </ul></p>
      
      <codeblock spectitle="Examples">SELECT TOKENS( ['jim@abc.com, kim@abc.com, http://abc.com/, 408-555-1212'],
{ 'specials': false });
[
  {
    "$1": [
      "kim",
      "408",
      "com",
      "abc",
      "jim",
      "1212",
      "555",
      "http"
    ]
  }
]

SELECT TOKENS(['jim@abc.com, kim@abc.com, http://abc.com/, 408-555-1212'],
{ 'specials': true });
[
  {
    "$1": [
      "jim",
      "408",
      "1212",
      "jim@abc.com",
      "http",
      "abc",
      "408-555-1212",
      "kim@abc.com",
      "kim",
      "555",
      "http://abc.com",
      "com"
    ]
  }
]</codeblock>
    </section>
  </body>
</topic>
