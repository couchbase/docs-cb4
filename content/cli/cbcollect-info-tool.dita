<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE reference PUBLIC "-//OASIS//DTD DITA Reference//EN" "reference.dtd">
<reference xml:lang="en-us" id="cbcollect-info-tool">
	
	<title>
		<cmdname>
			cbcollect_info
		</cmdname>
	</title>
	
	<shortdesc>
		The <cmdname>cbcollect_info</cmdname> tool provides detailed statistics for a specific node.
	</shortdesc>
	
	<refbody>
		<section>
			<title>
				Syntax
			</title>
			
			<p>
				The basic syntax is:
			</p>
			
			<codeblock>cbcollect_info [options] [output-file]</codeblock>
			
			<p>
				where <codeph>output-file</codeph> is the name of the .zip file containing the diagnostic information.
			</p>
			
		</section>
		
		<section>
			<title>
				Description
			</title>
			
			<p>
				The <cmdname>cbcollect_info</cmdname> command gathers statistics from an individual node in the
				cluster.
			</p>
			
			<p>
				To collect diagnostic information for an entire cluster, run the command for every
				node that exists in that cluster. If you are experiencing problems with multiple
				nodes in a cluster, you may need to run it on all nodes in a cluster. 
			</p>
			
			<p>
				A root account is required to run this command and collect all the server information. There
				are internal server files and directories that this tool accesses that require root
				privileges.
			</p>
			
			<p>
				To use this command, remotely connect to the machine which contains the Couchbase Server then
				issue the command with appropriate options. This command is typically run under the
				direction of technical support at Couchbase and generates a large .zip file. This
				archive contains files which contain performance statistics and server logs. 
			</p>
			
			
		<note type="attention"><cmdname>cbcollect_info</cmdname> is one of the most important diagnostic
				tools. Run <cmdname>cbcollect_info</cmdname> on all nodes in the cluster, and upload
				all of the resulting files to Couchbase technical support.
		</note>
			
			<p>
				This tool is at the following locations:
			</p>
			
			<table>
				<title>
					Tool locations
				</title>
				
			<tgroup cols="2">
					<colspec colname="col1" colwidth="1*"/>
					<colspec colname="col2" colwidth="3*"/>
					<thead>
						<row>
							<entry>Operating System</entry>
							<entry>Location</entry>
						</row>
					</thead>
					<tbody>
						<row>
							<entry>Linux</entry>
							<entry><filepath>/opt/couchbase/bin/cbcollect_info</filepath></entry>
						</row>
						<row>
							<entry>Windows</entry>
							<entry><filepath>C:\Program Files\Couchbase\Server\bin\cbcollect_info</filepath></entry>
						</row>
						<row>
							<entry>Mac OS X</entry>
							<entry><filepath>/Applications/Couchbase Server.app/Contents/Resources/couchbase-core/bin/cbcollect_info</filepath></entry>
						</row>
					</tbody>
				</tgroup>
		</table>
			
			<p>
				The tool creates the following log files in the output archive:
			</p>
			
			<table>
				<title>Output files
				</title>
				
				<tgroup cols="2">
					<colspec colname="col1" colwidth="1*"/>
					<colspec colname="col2" colwidth="4*"/>
					<thead>
						<row>
							<entry>File</entry>
							<entry>Log Contents</entry>
						</row>
					</thead>
					<tbody>
						<row>
							<entry><codeph>cbcollect_info.log</codeph></entry>
							<entry>Contains information about the performance of <cmdname>cbcollect_info</cmdname>.</entry>
						</row>
						<row>
							<entry><codeph>couchbase.log</codeph></entry>
							<entry>Contains system-level information, primarily the result of shell commands. Generated at collection-time.</entry>
						</row>
						<row>
							<entry><codeph>ddocs.log</codeph></entry>
							<entry>Contains the design documents for each bucket in JSON format, taken from the view file on disk.</entry>
						</row>
						<row>
							<entry><codeph>diag.log</codeph></entry>
							<entry>A diagnostic summary of the cluster manager, obtained by downloading <codeph>/diag</codeph> output from the node's running service.</entry>
						</row>
						<row>
							<entry><codeph>kv_trace.json</codeph></entry>
							<entry>Metadata used for Phosphor KV tracing.</entry>
						</row>
						<row>
							<entry><codeph>ini.log</codeph></entry>
							<entry>A dump of all ini configuration files.</entry>
						</row>
						<row>
							<entry><codeph>master_events.log</codeph></entry>
              <entry>Contains major events that have affected the cluster, like bucket creation, and rebalance 
              information such as vBucket movement.</entry>
						</row>
						<row>
							<entry><codeph>memcached.log</codeph></entry>
							<entry>Contains information relating to the core <apiname>memcached</apiname> component,
								including DCP stream requests and slow operations.</entry>
						</row>
						<row>
							<entry><codeph>ns_server.analytics.log</codeph></entry>
							<entry>(Developer Preview.)</entry>
						</row>
						<row>
							<entry><codeph>ns_server.analytics_debug.log</codeph></entry>
							<entry>(Developer Preview.)</entry>
						</row>
						<row>
							<entry><codeph>ns_server.analytics_shutdown.log</codeph></entry>
							<entry>(Developer Preview.)</entry>
						</row>
						<row>
							<entry><codeph>ns_server.analytics_trace.log</codeph></entry>
							<entry>(Developer Preview.)</entry>
						</row>
						<row>
							<entry><codeph>ns_server.babysitter.log</codeph></entry>
							<entry>Troubleshooting log for the babysitter process which is responsible for spawning all
								Couchbase Server processes and respawning them where
								necessary.</entry>
						</row>
						<row>
							<entry><codeph>ns_server.couchdb.log</codeph></entry>
							<entry>Troubleshooting log for the couchdb subsystem which underlies
								map-reduce and spatial views.</entry>
						</row>
						<row>
							<entry><codeph>ns_server.debug.log</codeph></entry>
							<entry>Debug-level troubleshooting for the cluster management
								component.</entry>
						</row>
						<row>
							<entry><codeph>ns_server.error.log</codeph></entry>
							<entry>Error-level troubleshooting log for the cluster management component.</entry>
						</row>
						<row>
							<entry><codeph>ns_server.eventing.log</codeph></entry>
							<entry>Eventing service logs.</entry>
						</row>
						<row>
							<entry><codeph>ns_server.fts.log</codeph></entry>
							<entry>Troubleshooting logs for the full-text search service.</entry>
						</row>
						<row>
							<entry><codeph>ns_server.goxdcr.log</codeph></entry>
							<entry>Troubleshooting log for the cross datacenter replication (XDCR) component used in Couchbase Server versions after 4.0.</entry>
						</row>
						<row>
							<entry><codeph>ns_server.http_access.log</codeph></entry>
							<entry>The admin access log records server requests (including administrator logins) to the REST API or Couchbase Server web console. 
								It is output in common log format and contains several important fields such as remote client IP, timestamp, 
								GET/POST request and resource requested, HTTP status code, and so on.</entry>
						</row>
						<row>
							<entry><codeph>ns_server.http_access_internal.log</codeph></entry>
							<entry>The admin access log records internal server requests (including administrator logins) to the REST API or Couchbase Server web console. 
								It is output in common log format and contains several important fields such as remote client IP, timestamp, GET/POST request and resource requested, 
								HTTP status code, and so on.</entry>
						</row>
						<row>
							<entry><codeph>ns_server.indexer.log</codeph></entry>
							<entry>Troubleshooting log for the indexing and storage subsystem.</entry>
						</row>
						<row>
							<entry><codeph>ns_server.info.log</codeph></entry>
							<entry>Info-level troubleshooting log for the cluster management component.</entry>
						</row>
						<row>
							<entry><codeph>ns_server.json_rpc.log</codeph></entry>
							<entry>JSON RPC logs.</entry>
						</row>
						<row>
							<entry><codeph>ns_server.mapreduce_errors.log</codeph></entry>
							<entry>JavaScript and other view-processing errors are reported in this
								file.</entry>
						</row>
						<row>
							<entry><codeph>ns_server.metakv.log</codeph></entry>
							<entry>Troubleshooting log for the metakv store, a cluster-wide metadata store.</entry>
						</row>
						<row>
							<entry><codeph>ns_server.ns_couchdb.log</codeph></entry>
							<entry>Contains information related to starting up the CouchDB subsystem.</entry>
						</row>
						<row>
							<entry><codeph>ns_server.projector.log</codeph></entry>
							<entry>Troubleshooting log for the projector process which is responsible for sending 
								appropriate mutations from Data nodes to Index nodes.</entry>
						</row>
						<row>
							<entry><codeph>ns_server.query.log</codeph></entry>
							<entry>Query service logs.</entry>
						</row>
						<row>
							<entry><codeph>ns_server.reports.log</codeph></entry>
							<entry>Contains progress and crash reports for the Erlang processes. Due to the nature of
								Erlang, processes crash and restart upon an error.</entry>
						</row>
						<row>
							<entry><codeph>ns_server.ssl_proxy.log</codeph></entry>
							<entry>Troubleshooting log for the ssl proxy spawned by the cluster manager.</entry>
						</row>				
						<row>
							<entry><codeph>ns_server.stats.log</codeph></entry>
							<entry>Contains periodic statistic dumps from the cluster management component.</entry>
						</row>
						<row>
							<entry><codeph>ns_server.views.log</codeph></entry>
							<entry>Troubleshooting log for the view engine, predominantly focussing on the changing of partition states.</entry>
						</row>
						<row>
							<entry><codeph>ns_server.xdcr.log</codeph></entry>
							<entry>Troubleshooting log for the cross datacenter replication (XDCR) component used in Couchbase Server versions prior to 4.0.</entry>
						</row>
						<row>
							<entry><codeph>ns_server.xdcr_errors.log</codeph></entry>
							<entry>Error-level troubleshooting log for the cross datacenter replication (XDCR) component used in Couchbase Server versions prior to 4.0.</entry>
						</row>
						<row>
							<entry><codeph>ns_server.xdcr_target.log</codeph></entry>
							<entry>Log of traces from cross datacenter replication (XDCR) target endpoint handlers.</entry>
						</row>
						<row>
							<entry><codeph>ns_server.xcdr_trace.log</codeph></entry>
							<entry>Trace-level troubleshooting log for the cross datacenter replication (XDCR) component used in Couchbase Server versions prior to 4.0. 
								Unless trace-level logging is explicitly turned on this log is empty.</entry>
						</row>
						<row>
							<entry><codeph>projector_pprof.log</codeph></entry>
							<entry>Goroutine dump captured for the projector process. A goroutine dump is the equivalent of a full thread dump in other languages and can give valuable insight into what a process is doing at that time.</entry>
						</row>
						<row>
							<entry><codeph>stats.log</codeph></entry>
							<entry>Contains output from various <xref href="cbstats-intro.dita">cbstats</xref> commands. Generated at collection-time.</entry>
						</row>
						<row>
							<entry><codeph>syslog.tar.gz</codeph></entry>
							<entry>Archive of various system-level logs.</entry>
						</row>
						<row>
							<entry><codeph>systemd_journal.gz</codeph></entry>
							<entry>(Linux only.) The logs from <apiname>systemd</apiname>.</entry>
						</row>
					</tbody>
				</tgroup>
			</table>
		</section>
		
		<section><title>Options</title>
			<p>The following are the command options:</p>
			<table>
				<title>cbcollect_info options</title>
				<tgroup cols="2">
					<colspec colname="col1" colwidth="1.8*"/>
					<colspec colname="col2" colwidth="3*"/>
					<thead>
						<row>
							<entry>Parameter</entry>
							<entry>Description</entry>
						</row>
					</thead>
					<tbody>
						
						<row>
							<entry><codeph>-h, --help</codeph></entry>
							<entry>Shows help information.</entry>
						</row>
						
						<row>
							<entry><codeph>-r ROOT</codeph></entry>
							<entry>Specifies the root directory. Defaults to the parent directory of the directory containing
              <cmdname>cbcollect_info</cmdname>, e.g. <codeph>/opt/couchbase/bin/..</codeph> on Linux.</entry>
						</row>
						
						<row>
							<entry><codeph>-v</codeph></entry>
							<entry>Increases the verbosity level: If specified, debugging information
								will be included in the console display.</entry>
						</row>
						
						<row>
							<entry><codeph>-p</codeph></entry>
							<entry>Specifies that only product-related information should be gathered.</entry>
						</row>
						
						<row>
							<entry><codeph>-d</codeph></entry>
							<entry>Dumps a list of commands required by <cmdname>cbcollect_info</cmdname>.</entry>
						</row>
						
						<row>
							<entry><codeph>--bypass-sensitive-data</codeph></entry>
							<entry>If set to <codeph>true</codeph>, skips collecting breakpad crash-dumps.</entry>
						</row>
						
						<row>
							<entry><codeph>--task-regexp=TASK_REGEXP</codeph></entry>
							<entry>Runs only those tasks that match the specified regular expression. (This flag is provided
							for debugging purposes.)</entry>
						</row>
						
						<row>
							<entry><codeph>--tmp-dir=TMP_DIR</codeph></entry>
							<entry>Specifies the <codeph>tmp</codeph> directory that is used during data processing. This setting overrides any
								existing setting of the <codeph>TMPDIR</codeph> environment variable.</entry>
						</row>
						
						<row>
							<entry><codeph>--initargs=INITARGS</codeph></entry>
							<entry>Specifies the server <codeph>initargs</codeph> path.</entry>
						</row>
						
						<row>
							<entry><codeph>--multi-node-diag</codeph></entry>
							<entry>Specifies that diagnostic information should be collected for each reachable 
								node in the cluster. The
							default is for collection on the current node only.</entry>
						</row>
						
						<row>
							<entry><codeph>--log-redaction-level=REDACT_LEVEL</codeph></entry>
							<entry>Specifies the redaction level for the logs collected. The level can be either 
								<codeph>none</codeph> (the default) or <codeph>partial</codeph>.</entry>
						</row>
						
						<row>
							<entry><codeph>--log-redaction-salt=SALT_VALUE</codeph></entry>
							<entry>Salts the hashing of tagged data. The default value is a random uuid. If this
								flag is used, a <codeph>--log-redaction-level</codeph> value should be specified.</entry>
						</row>
						
						<row>
							<entry><codeph>--upload-host=UPLOAD_HOST</codeph></entry>
							<entry>Specifies the fully-qualified domain name of the host you want the logs uploaded to. The protocol
								prefix of the domain name, <codeph>https://</codeph>, is optional.
								It is the default-only supported protocol.</entry>
						</row>
						<row>
							<entry><codeph>--customer=UPLOAD_CUSTOMER</codeph></entry>
							<entry>Specifies the customer name. This value must be a string whose maximum length is
								50 characters. Only the following characters can be used:
								[A-Za-z0-9_.-]. If any other characters are included,
								the request is rejected.</entry>
						</row>
						
						<row>
							<entry><codeph>--upload-proxy=UPLOAD_PROXY</codeph></entry>
							<entry>Specifies a proxy for upload.</entry>
						</row>
						
						<row>
							<entry><codeph>--ticket=UPLOAD_TICKET</codeph></entry>
							<entry>Specifies the Couchbase Support ticket-number. The value must be a string with a
								maximum length of 7 characters, containing only digits in the range of 0-9. </entry>
						</row>
					</tbody>
				</tgroup>
			</table>

			
		</section>
		<section><title>Sharing files with Couchbase support</title>
			<p>Run the command below, replacing <varname>FILE-NAME</varname> and
					<varname>COMPANY-NAME,</varname> to upload a file to our cloud storage on Amazon
				AWS. Make sure to include the last slash ("/") character after the company
				name.<codeblock>curl --upload-file 
	&lt;FILE-NAME&gt; https://s3.amazonaws.com/customers.couchbase.com/&lt;COMPANY-NAME&gt;/</codeblock></p>		
			
			
		</section>
		
		<section><title>Examples</title>
			<p>To create a diagnostics .zip file, log onto the node and run the <cmdname>cbcollect_info</cmdname> tool.</p>
			<p>On Linux, run as root or use sudo: <codeblock>sudo /opt/couchbase/bin/cbcollect_info &lt;node_name&gt;.zip</codeblock></p>
			<p>On Windows, run as Administrator: <codeblock>C:\Program Files\Couchbase\Server\bin\cbcollect_info &lt;node_name&gt;.zip</codeblock></p>
			
	<p><b>Response</b></p>
			
			<p>The following example response shows partial output when running the <cmdname>cbcollect_info</cmdname> command.</p>
			<codeblock>Using temporary dir /tmp
Log Redaction () - OK
uname (uname -a) - OK
time and TZ (date; date -u) - OK
ntp time (ntpdate -q pool.ntp.org || nc time.nist.gov 13 || netcat time.nist.gov 13) - OK
ntp peers (ntpq -p) - Exit code 127
raw /etc/sysconfig/clock (cat /etc/sysconfig/clock) - Exit code 1
raw /etc/timezone (cat /etc/timezone) - OK
System Hardware (lshw -json || lshw) - OK
Process list snapshot (export TERM=''; top -Hb -n1 || top -H n1) - OK

...

adding: /tmp/tmpY7p_3T/couchbase.log -> cbcollect_info__20180718-084858/couchbase.log
adding: /tmp/tmpY7p_3T/ns_server.error.log -> cbcollect_info__20180718-084858/ns_server.error.log
adding: /tmp/tmpY7p_3T/ns_server.analytics_debug.log -> cbcollect_info__20180718-084858/ns_server.analytics_debug.log
adding: /tmp/tmpY7p_3T/ns_server.json_rpc.log -> cbcollect_info__20180718-084858/ns_server.json_rpc.log
adding: /tmp/tmpY7p_3T/cbcollect_info.log -> cbcollect_info__20180718-084858/cbcollect_info.log
adding: /tmp/tmpY7p_3T/ns_server.ns_couchdb.log -> cbcollect_info__20180718-084858/ns_server.ns_couchdb.log
adding: /tmp/tmpY7p_3T/ns_server.analytics.log -> cbcollect_info__20180718-084858/ns_server.analytics.log
adding: /tmp/tmpY7p_3T/stats.log -> cbcollect_info__20180718-084858/stats.log
adding: /tmp/tmpY7p_3T/memcached.log -> cbcollect_info__20180718-084858/memcached.log
adding: /tmp/tmpY7p_3T/ns_server.indexer.log -> cbcollect_info__20180718-084858/ns_server.indexer.log
adding: /tmp/tmpY7p_3T/ns_server.fts.log -> cbcollect_info__20180718-084858/ns_server.fts.log
adding: /tmp/tmpY7p_3T/ns_server.http_access_internal.log -> cbcollect_info__20180718-084858/ns_server.http_access_internal.log
adding: /tmp/tmpY7p_3T/ns_server.xdcr_target.log -> cbcollect_info__20180718-084858/ns_server.xdcr_target.log
adding: /tmp/tmpY7p_3T/ns_server.eventing.log -> cbcollect_info__20180718-084858/ns_server.eventing.log
adding: /tmp/tmpY7p_3T/syslog.tar.gz -> cbcollect_info__20180718-084858/syslog.tar.gz
adding: /tmp/tmpY7p_3T/ns_server.reports.log -> cbcollect_info__20180718-084858/ns_server.reports.log
adding: /tmp/tmpY7p_3T/ns_server.query.log -> cbcollect_info__20180718-084858/ns_server.query.log
adding: /tmp/tmpY7p_3T/ns_server.couchdb.log -> cbcollect_info__20180718-084858/ns_server.couchdb.log
adding: /tmp/tmpY7p_3T/ns_server.goxdcr.log -> cbcollect_info__20180718-084858/ns_server.goxdcr.log
adding: /tmp/tmpY7p_3T/master_events.log -> cbcollect_info__20180718-084858/master_events.log
adding: /tmp/tmpY7p_3T/ns_server.info.log -> cbcollect_info__20180718-084858/ns_server.info.log
adding: /tmp/tmpY7p_3T/diag.log -> cbcollect_info__20180718-084858/diag.log
adding: /tmp/tmpY7p_3T/ns_server.analytics_shutdown.log -> cbcollect_info__20180718-084858/ns_server.analytics_shutdown.log
adding: /tmp/tmpY7p_3T/systemd_journal.gz -> cbcollect_info__20180718-084858/systemd_journal.gz
adding: /tmp/tmpY7p_3T/ns_server.analytics_trace.json -> cbcollect_info__20180718-084858/ns_server.analytics_trace.json
adding: /tmp/tmpY7p_3T/ns_server.stats.log -> cbcollect_info__20180718-084858/ns_server.stats.log
adding: /tmp/tmpY7p_3T/ns_server.views.log -> cbcollect_info__20180718-084858/ns_server.views.log
adding: /tmp/tmpY7p_3T/ini.log -> cbcollect_info__20180718-084858/ini.log
adding: /tmp/tmpY7p_3T/kv_trace.json -> cbcollect_info__20180718-084858/kv_trace.json
adding: /tmp/tmpY7p_3T/ns_server.mapreduce_errors.log -> cbcollect_info__20180718-084858/ns_server.mapreduce_errors.log
adding: /tmp/tmpY7p_3T/ns_server.projector.log -> cbcollect_info__20180718-084858/ns_server.projector.log
adding: /tmp/tmpY7p_3T/ns_server.metakv.log -> cbcollect_info__20180718-084858/ns_server.metakv.log
adding: /tmp/tmpY7p_3T/ns_server.debug.log -> cbcollect_info__20180718-084858/ns_server.debug.log
adding: /tmp/tmpY7p_3T/ns_server.babysitter.log -> cbcollect_info__20180718-084858/ns_server.babysitter.log
adding: /tmp/tmpY7p_3T/ns_server.http_access.log -> cbcollect_info__20180718-084858/ns_server.http_access.log
			</codeblock>
			
		</section>
		
		
		
	</refbody>
	<related-links>
		<linklist>
			
			<link
				href="http://www.couchbase.com/wiki/display/couchbase/Working+with+the+Couchbase+Technical+Support+Team"
				scope="external" format="html">
				<linktext>Working with Couchbase Customer Support</linktext>
			</link>
		</linklist>
	</related-links>
</reference>
