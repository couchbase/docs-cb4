<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE reference PUBLIC "-//OASIS//DTD DITA Reference//EN" "reference.dtd">
<reference id="cbcli-xdcr-ssl">
  <title><cmdname>ssl-manage</cmdname></title>
  <shortdesc>Data encryption with Secure Socket Layer (SSL) authentication is used with the
    Couchbase Server's self-signed or X.509 certificates.</shortdesc>
  <refbody>
    <section>
      <title>Syntax</title>
      <p>To manage a certificate use:</p>
      <codeblock>couchbase-cli ssl-manage -c [host]:8091 -u [admin] -p [password] [options]</codeblock>
    </section> <section>
      <title>Description</title>
      <p>Retrieving an SSL certificate for XDCR data encryption, should be done in a secure manner,
        such as with <codeph>ssh</codeph> and <codeph>scp</codeph>. For example:</p>
      <ol>
        <li>Use a secure method to log in to a node on the destination cluster. For example:
            <codeph>ssh</codeph>.</li>
        <li>Retrieve the certificate with the <codeph>couchbase-cli ssl-manage</codeph>
          command.</li>
        <li>Use a secure method to transfer the certificate from the destination cluster to the
          source cluster. For example: <codeph>scp</codeph>.</li>
        <li>Proceed with setting up XDCR with SSL data encryption.</li>
      </ol>
    </section>
    <section>
      <title>Options</title>
      <p>The following are the command options:</p>
        
        <table frame="all" rowsep="1" colsep="1"
          id="table_rbb_g5t_qq">
          <title>ssl-manage command options</title>
          <tgroup cols="2">
          <colspec colname="c1" colnum="1" colwidth="1*"/>
          <colspec colname="c2" colnum="2" colwidth="1.52*"/>
          <thead>
            <row>
              <entry>Option</entry>
              <entry>Description</entry>
            </row>
          </thead>
          <tbody>
            <row>
              <entry><codeph>--cluster-cert-info</codeph></entry>
              <entry>Views the current cluster certificate. With the option --extended, view the
                extended cluster certificate.</entry>
            </row>
            <row>
              <entry><codeph>--node-cert-info</codeph></entry>
              <entry>Views the current node certificate. </entry>
            </row>
            <row>
              <entry><codeph>--retrieve-cert=[certificate]</codeph></entry>
              <entry>Retrieves a cluster certificate and saves it to a .pem file. <p>For example,
                    <codeph>--retrieve-cert=./newCert.pem</codeph>.</p></entry>
            </row>
            <row>
              <entry><codeph>--regenerate-cert=[certificate]</codeph></entry>
              <entry>Regenerates a cluster certificate and  saves it to a .pem file.  <p>For example,
                  <codeph>--regenerate-cert=./newRegen.pem</codeph>.</p></entry>
            </row>
            <row>
              <entry><codeph>--set-node-certificate</codeph></entry>
              <entry>Sets the new node certificate.</entry>
            </row>
           
            <row>
              <entry><codeph>--upload-cluster-ca=[<varname>path to pem-encoded root
                    certificate</varname>]</codeph></entry>
              <entry>Uploads a new cluster certificate.</entry>
            </row>
           
          </tbody>
        </tgroup>
        </table>
    </section>
       
    <section>
      <title>Examples</title>
      
      <dl>
        <dlentry>
          <dt>Retrieves an existing certificate</dt>
          <dd><codeblock>couchbase-cli ssl-manage -c 10.3.4.187:8091 -u Administrator -p password \
       --retrieve-cert=./newCert.pem </codeblock>
            <p>An example output from a successful certificate retrieval:</p>
            <codeblock>SUCCESS: retrieve certificate to './newCert.pem' 
        Certificate matches what is seen on GUI </codeblock></dd>
        </dlentry>
      </dl>
      
    <dl>
      <dlentry>
        <dt>Regenerates a certificate</dt>
        <dd><codeblock>couchbase-cli ssl-manage  -c 10.3.4.187:8091 -u Administrator -p password \
       --regenerate-cert=./newRegen.pem </codeblock>
          
          <p>An example output from a successful certificate regeneration:</p>
          <codeblock>SUCCESS: regenerate certificate to './newRegen.pem' </codeblock></dd>
      </dlentry>
    </dl>  
  
      
      
     
   
    <dl>
      <dlentry>
        <dt>Set up a cluster CA certificate</dt>
        <dd><codeblock>couchbase-cli ssl-manage -c 192.168.0.1:8091:8091 \
          --upload-cluster-ca=./root/ca.pem \
          -u Administrator -p password </codeblock></dd>
        <dd><codeblock>couchbase-cli ssl-manage -c 192.168.0.1:8091 \
          --upload-cluster-ca=/tmp/test.pem \
          -u Administrator -p password</codeblock></dd>
      </dlentry>
    </dl>
      
      
      
      
      <dl>
        <dlentry>
          <dt>Download a cluster certificate and view it:</dt>
          <dd><codeblock>couchbase-cli ssl-manage -c 192.168.0.1:8091 \
        --retrieve-cert=/tmp/test.pem \
        -u Administrator -p password</codeblock></dd>
          <dd><codeblock>couchbase-cli ssl-manage -c 192.168.0.1:8091 \          
         --cluster-cert-info \
         -u Administrator -p password        </codeblock></dd>
        </dlentry>
      </dl>
    
    
    
 
      
      <dl>
        <dlentry>
          <dt>Regenerate AND download a cluster certificate:</dt>
          <dd><codeblock>couchbase-cli ssl-manage -c 192.168.0.1:8091 \
        --regenerate-cert=/tmp/test.pem \
        -u Administrator -p password</codeblock></dd>
          <dd>If you configured Couchbase to use X.509 certificates, and you want to go back to the
            self-signed certificates, you can do this by regenerating the self-signed cluster
            certificate <codeph>test.pem</codeph>. </dd>
        </dlentry>
        
      </dl>
      <dl>
        <dlentry>
          <dt>View the extended cluster certificate:</dt>
          <dd><codeblock>couchbase-cli ssl-manage -c 192.168.0.1:8091 \
        --cluster-cert-info --extended \
        -u Administrator -p password</codeblock></dd>
        </dlentry>
      </dl>
      <dl>
        <dlentry>
          <dt>View the current node certificate:</dt>
          <dd><codeblock>couchbase-cli ssl-manage -c 192.168.0.1:8091 \
        --node-cert-info \
        -u Administrator -p password</codeblock></dd>
        </dlentry>
      </dl>
      <dl>
        <dlentry>
          <dt>Set the new node certificate:</dt>
          <dd><codeblock>couchbase-cli ssl-manage -c 192.168.0.1:8091 \
        --set-node-certificate \
        -u Administrator -p password</codeblock></dd>
        </dlentry>
      </dl>
    </section>   
   
  </refbody>
  <related-links>
    <link href="../../security/security-data-encryption.dita#topic_gcz_rpm_lq"/>
    <link href="../../security/security-intro.dita#concept_kx3_kkf_xp"/>
  </related-links>
</reference>
