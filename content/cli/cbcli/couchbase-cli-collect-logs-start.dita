<?xml version="1.0" standalone="no"?><!DOCTYPE dita PUBLIC "-//OASIS//DTD DITA Composite//EN" "../../../../dtd/ditabase.dtd"><dita>
  <topic id="couchbaseclicollectlogsstart1.idm74933936" outputclass="db.article" xml:lang="en-us">
    <title outputclass="db.title">collect-logs-start</title>
    
    <shortdesc>Start log collection</shortdesc><body outputclass="db.article"><section><title outputclass="db.title">SYNTAX</title>
      
      
      <codeblock outputclass="language-bash"><i outputclass="db.emphasis">couchbase-cli collect-logs-start</i> [--cluster &lt;url&gt;] [--username &lt;user&gt;]
          [--password &lt;password&gt;] [--all-nodes] [--nodes &lt;node_list&gt;]
          [--redaction-level] [--output-directory] [--temporary-directory]
          [--upload] [--upload-host &lt;host&gt;] [--upload-proxy &lt;host&gt;]
          [--customer &lt;customer&gt;] [--ticket &lt;ticket&gt;]</codeblock></section><section><title outputclass="db.title">DESCRIPTION</title>
      
      
      <p outputclass="db.simpara">This command collects all Couchbase Server log files from one or more nodes in
the cluster. Log collection is useful when there are failures in the cluster and
you need to figure out what is going on. Since there are many log files on
various different server the collect-logs-start command helps in aggregating all
of the different log file Couchbase Server creates.</p>
        <p outputclass="db.simpara">To get the location of the collected log files you can run the
<cite outputclass="db.citerefentry">
<ph outputclass="db.refentrytitle">collect-logs-status</ph><ph outputclass="db.manvolnum">1</ph>
</cite> command either while the log collection task
is running or after the log collection task has completed. If the --upload flag
is specified then the logs will also be uploaded to the host specified in the
--upload-host flag. The upload flag is intended for Couchbase Server
Enterprise Edition users who need to upload logs to the Couchbase Support Team
to aid in diagnosing support tickets that they have filed.</p>
        <p outputclass="db.simpara">Note that only one log collection task may be running at any given time in the
cluster.</p>
      </section><section><title outputclass="db.title">OPTIONS</title>
      
      
      <dl outputclass="db.variablelist">
          <dlentry outputclass="db.varlistentry">
            <dt outputclass="db.term">
-c
</dt>
            <dt outputclass="db.term">
--cluster
</dt>
            <dd outputclass="db.listitem">
<p outputclass="db.simpara">
        Specifies the hostname of a node in the cluster. See the HOST FORMATS
        section for more information on specifying a hostname.
</p>
</dd>
          </dlentry>
          <dlentry outputclass="db.varlistentry">
            <dt outputclass="db.term">
-u
</dt>
            <dt outputclass="db.term">
--user &lt;username&gt;
</dt>
            <dd outputclass="db.listitem">
<p outputclass="db.simpara">
        Specifies the username of the user executing the command. If you do not have
        a user account with permission to execute the command then it will fail with
        an unauthorized error.
</p>
</dd>
          </dlentry>
          <dlentry outputclass="db.varlistentry">
            <dt outputclass="db.term">
-p
</dt>
            <dt outputclass="db.term">
--password &lt;password&gt;
</dt>
            <dd outputclass="db.listitem">
<p outputclass="db.simpara">
        Specifies the password of the user executing the command. If you do not have
        a user account with permission to execute the command then it will fail with
        an unauthorized error. If this argument is specified, but no password is
        given then the command will prompt the user for a password through
        non-echoed stdin. You may also specify your password by using the
        environment variable CB_REST_PASSWORD.
</p>
</dd>
          </dlentry>
          <dlentry outputclass="db.varlistentry">
            <dt outputclass="db.term">
--all-nodes
</dt>
            <dd outputclass="db.listitem">
<p outputclass="db.simpara">
        Specifies that log collection should take place on all nodes in the cluster.
        May not be specified at the same time as --nodes.
</p>
</dd>
          </dlentry>
          <dlentry outputclass="db.varlistentry">
            <dt outputclass="db.term">
--nodes &lt;node_list&gt;
</dt>
            <dd outputclass="db.listitem">
<p outputclass="db.simpara">
        A list of one or more nodes to collect logs from, the nodes must include the
        administrator port. The list should be comma
        separated. This parameter may not be specified at the same time as the
        --nodes option.
</p>
</dd>
          </dlentry>
          <dlentry outputclass="db.varlistentry">
            <dt outputclass="db.term">
--redaction-level &lt;level&gt;
</dt>
            <dd outputclass="db.listitem">
<p outputclass="db.simpara">
        Specifies what level the logs should be redacted too. This option has two
        levels "none" and "partial". If partial is set then data such as
        usernames, keys and values will be redacted from the logs. If none is set
        then no data  will be redacted. Please note that increasing the level
        of redaction can have an impact on debugging problems.
</p>
</dd>
          </dlentry>
          <dlentry outputclass="db.varlistentry">
            <dt outputclass="db.term">
--output-directory &lt;directory&gt;
</dt>
            <dd outputclass="db.listitem">
<p outputclass="db.simpara">
        Specifies the directory on the node to place the logs. This is the location
        where the logs will be placed after collection has finished. Log collection
        will fail for the nodes that do not have this directory. It will also fail
        if the directory does not have enough space.
</p>
</dd>
          </dlentry>
          <dlentry outputclass="db.varlistentry">
            <dt outputclass="db.term">
--temporary-directory &lt;path&gt;
</dt>
            <dd outputclass="db.listitem">
<p outputclass="db.simpara">
        Specifies the temporary directory on the node to use while generating the
        logs. During log collection a number of temporary files are created before
        being compressed. If this temporary location does not have enough space
        log collection will fail. All nodes in the cluster must have this
        directory. When it is not specified then the operating system temporary
        directory will be used.
</p>
</dd>
          </dlentry>
          <dlentry outputclass="db.varlistentry">
            <dt outputclass="db.term">
--upload
</dt>
            <dd outputclass="db.listitem">
<p outputclass="db.simpara">
        Specifies that the logs should be uploaded to the host specified with
        the --upload-host option. This option should be used by Couchbase Server
        Enterprise customers when uploading logs for the Couchbase Support Team.
</p>
</dd>
          </dlentry>
          <dlentry outputclass="db.varlistentry">
            <dt outputclass="db.term">
--upload-proxy &lt;host&gt;
</dt>
            <dd outputclass="db.listitem">
<p outputclass="db.simpara">
        Specifies the proxy to use when uploading logs. This is useful when a
        cluster is deployed in secure environments and do not have a direct
        outbound connection to the internet to upload logs.
</p>
</dd>
          </dlentry>
          <dlentry outputclass="db.varlistentry">
            <dt outputclass="db.term">
--upload-host &lt;host&gt;
</dt>
            <dd outputclass="db.listitem">
<p outputclass="db.simpara">
        Once log collection is completed, the logs zip file should be uploaded to
        this URL. This parameter is required if the --upload flag is specified.
</p>
</dd>
          </dlentry>
          <dlentry outputclass="db.varlistentry">
            <dt outputclass="db.term">
--customer &lt;name&gt;
</dt>
            <dd outputclass="db.listitem">
<p outputclass="db.simpara">
        The name of the customer who is uploading these logs. This option is
        required if the --upload flag is specified.
</p>
</dd>
          </dlentry>
          <dlentry outputclass="db.varlistentry">
            <dt outputclass="db.term">
--ticket &lt;num&gt;
</dt>
            <dd outputclass="db.listitem">
<p outputclass="db.simpara">
        The ticket number that the support team has created to track the issue
        filed. This parameter is optional when specifying the --upload flag, but
        recommended if you have a ticket number.
</p>
</dd>
          </dlentry>
        </dl>
      </section><section><title outputclass="db.title">HOST FORMATS</title>
      
      
      <p outputclass="db.simpara">When specifying a host for the couchbase-cli command the following formats are expected:</p>
        <ul outputclass="db.itemizedlist">
          <li outputclass="db.listitem">
<p outputclass="db.simpara">
<codeph outputclass="db.literal">couchbase://&lt;addr&gt;</codeph>
</p>
</li>
          <li outputclass="db.listitem">
<p outputclass="db.simpara">
<codeph outputclass="db.literal">&lt;addr&gt;:&lt;port&gt;</codeph>
</p>
</li>
          <li outputclass="db.listitem">
<p outputclass="db.simpara">
<codeph outputclass="db.literal">http://&lt;addr&gt;:&lt;port&gt;</codeph>
</p>
</li>
        </ul>
        <p outputclass="db.simpara">It is recommended to use the couchbase://&lt;addr&gt; format for standard
installations. The other two formats allow an option to take a port number which
is needed for non-default installations where the admin port has been set up on
a port other that 8091.</p>
      </section><section><title outputclass="db.title">EXAMPLES</title>
      
      
      <p outputclass="db.simpara">To collect logs on all nodes without uploading them run the following command.</p>
        <pre outputclass="db.literallayout">$ couchbase-cli collect-logs-start -c 192.168.1.5 --username Administrator \
 --password password --all-nodes</pre>
        <p outputclass="db.simpara">If there is a three node cluster with IP addresses 192.168.1.5, 192.168.1.6, and
192.168.1.7 and you only want to collect logs on the first two nodes and don’t
want to upload the logs then run the command below.</p>
        <pre outputclass="db.literallayout">$ couchbase-cli collect-logs-start -c 192.168.1.5 --username Administrator \
 --password password --nodes 192.168.1.5:8091,192.168.1.6:8091</pre>
        <p outputclass="db.simpara">If you are a Couchbase Server Enterprise Edition user and you need to upload logs
for all nodes for a support ticket then you can run the following command.</p>
        <pre outputclass="db.literallayout">$ couchbase-cli collect-logs-start -c 192.168.1.5 --username Administrator \
 --password password --all-nodes --upload --upload-customer customer_name \
 --upload-host s3.amazonaws.com/cb-customers --ticket 12345</pre>
      </section><section><title outputclass="db.title">ENVIRONMENT AND CONFIGURATION VARIABLES</title>
      
      
      <p outputclass="db.simpara">CB_REST_PASSWORD
        Specifies the password of the user executing the command. This environment
        variable allows you to specify a default argument for the -p/--password
        argument on the command line. It also allows the user to ensure that their
        password are not cached in their command line history.</p>
        <p outputclass="db.simpara">CB_REST_PASSWORD
        Specifies the password of the user executing the command. This environment
        variable allows you to specify a default argument for the -p/--password
        argument on the command line.</p>
      </section></body>
    <related-links><link href="couchbase-cli-collect-logs-status.dita" /><link href="couchbase-cli-collect-logs-stop.dita" /></related-links></topic>
</dita>