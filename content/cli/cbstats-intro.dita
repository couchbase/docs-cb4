<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE reference PUBLIC "-//OASIS//DTD DITA Reference//EN" "reference.dtd">
<reference xml:lang="en-us" id="cbstats-intro">
	<title><cmdname>cbstats</cmdname></title>
	<shortdesc>Retrieve lower level statistics with the <cmdname>cbstats</cmdname> utility, which
		provides deep insight into what occurs within a cluster.</shortdesc>
	<refbody>
		
		
		<section><title>Syntax</title>
			<p>The basic syntax is:</p>
			<codeblock>cbstats <varname>host</varname>:<varname>port</varname> [common options] <varname>command</varname> [command options]</codeblock>
		</section>
		<section><title>Description</title>
			<p>The <cmdname>cbstats</cmdname> tool queries differently depending on the port:</p>
      <ul>
					<li>When using the Couchbase data port 11210, it will give you operations per
						node per bucket:
						<codeblock>/opt/couchbase/bin/cbstats -b beer-sample localhost:11210 all | grep \ curr_items:
curr_items:                                 3711</codeblock></li>
					<li>When using the Couchbase legacy port 11211, it will query via MOXI and
						provide cluster-wide stats:
						<codeblock>/opt/couchbase/bin/cbstats -b beer-sample localhost:11211 all | grep \ curr_items:
curr_items:                                 7303</codeblock></li>
				</ul>
        <p>If a named bucket is not provided, the server applies the setting to any
				default bucket that exists at the specified node.</p>
			
			<p>The tool is found in the
				following locations:</p><table>
				<tgroup cols="2">
					<colspec colnum="1" colname="c1" colwidth="2*"/>
					<colspec colnum="2" colname="c2" colwidth="3*"/>
					<thead>
						<row>
							<entry>Platform</entry>
							<entry>Location</entry>
						</row>
					</thead>
					<tbody>
						<row>
							<entry>Linux</entry>
							<entry><filepath>/opt/couchbase/bin/cbstats</filepath></entry>
						</row>
						<row>
							<entry>Windows</entry>
							<entry><filepath>C:\Program Files\Couchbase\Server\bin\cbstats.exe</filepath></entry>
						</row>
						<row>
							<entry>Mac OS X</entry>
							<entry><filepath>/Applications/Couchbase Server.app/Contents/Resources/couchbase-core/bin/cbstats</filepath></entry>
						</row>
					</tbody>
				</tgroup>
			</table><p>This following table shows top-level statistics:</p><table>
				<title>Top-level statistics </title>
				<tgroup cols="2">
					<colspec colname="col1" colwidth="1*"/>
					<colspec colname="col2" colwidth="2*"/>
					<thead>
						<row>
							<entry>Stat</entry>
							<entry>Description</entry>
						</row>
					</thead>
					<tbody>
						<row>
							<entry>uuid*</entry>
							<entry>The unique identifier for the bucket.</entry>
						</row>
						<row>
							<entry>ep_version</entry>
							<entry>Version number of ep_engine.</entry>
						</row>
						<row>
							<entry>ep_storage_age</entry>
							<entry>Seconds since most recently stored object was initially
								queued.</entry>
						</row>
						<row>
							<entry>ep_storage_age_highwat</entry>
							<entry>ep_storage_age high water mark.</entry>
						</row>
						<row>
							<entry>ep_startup_time</entry>
							<entry>System-generated engine startup time.</entry>
						</row>
						<row>
							<entry>ep_data_age</entry>
							<entry>Seconds since most recently stored object was modified.</entry>
						</row>
						<row>
							<entry>ep_data_age_highwat</entry>
							<entry>ep_data_age high water mark.</entry>
						</row>
						<row>
							<entry>ep_too_young</entry>
							<entry>Number of times an object was not stored due to being too
								young.</entry>
						</row>
						<row>
							<entry>ep_too_old</entry>
							<entry>Number of times an object was stored after being dirty too
								long.</entry>
						</row>
						<row>
							<entry>ep_total_enqueued</entry>
							<entry>Total number of items queued for persistence.</entry>
						</row>
						<row>
							<entry>ep_total_new_items</entry>
							<entry>Total number of persisted new items.</entry>
						</row>
						<row>
							<entry>ep_total_del_items</entry>
							<entry>Total number of persisted deletions.</entry>
						</row>
						<row>
							<entry>ep_total_persisted</entry>
							<entry>Total number of items persisted.</entry>
						</row>
						<row>
							<entry>ep_item_flush_failed</entry>
							<entry>Number of times an item failed to flush due to storage
								errors.</entry>
						</row>
						<row>
							<entry>ep_item_commit_failed</entry>
							<entry>Number of times a transaction failed to commit due to storage
								errors.</entry>
						</row>
						<row>
							<entry>ep_item_begin_failed</entry>
							<entry>Number of times a transaction failed to start due to storage
								errors.</entry>
						</row>
						<row>
							<entry>ep_expired_access</entry>
							<entry>Number of times an item was expired on application
								access.</entry>
						</row>
						<row>
							<entry>ep_expired_pager</entry>
							<entry>Number of times an item was expired by ep engine item
								pager.</entry>
						</row>
						<row>
							<entry>ep_item_flush_expired</entry>
							<entry>Number of times an item is not flushed due to the expiry of the
								item.</entry>
						</row>
						<row>
							<entry>ep_queue_size</entry>
							<entry>Number of items queued for storage.</entry>
						</row>
						<row>
							<entry>ep_flusher_todo</entry>
							<entry>Number of items currently being written.</entry>
						</row>
						<row>
							<entry>ep_flusher_state</entry>
							<entry>Current state of the flusher thread.</entry>
						</row>
						<row>
							<entry>ep_commit_num</entry>
							<entry>Total number of write commits.</entry>
						</row>
						<row>
							<entry>ep_commit_time</entry>
							<entry>Number of milliseconds of most recent commit.</entry>
						</row>
						<row>
							<entry>ep_commit_time_total</entry>
							<entry>Cumulative milliseconds spent committing.</entry>
						</row>
						<row>
							<entry>ep_vbucket_del</entry>
							<entry>Number of vBucket deletion events.</entry>
						</row>
						<row>
							<entry>ep_vbucket_del_fail</entry>
							<entry>Number of failed vBucket deletion events.</entry>
						</row>
						<row>
							<entry>ep_vbucket_del_max_walltime</entry>
							<entry>Max wall time (µs) spent by deleting a vBucket.</entry>
						</row>
						<row>
							<entry>ep_vbucket_del_avg_walltime</entry>
							<entry>Avg wall time (µs) spent by deleting a vBucket.</entry>
						</row>
						<row>
							<entry>ep_flush_duration_total</entry>
							<entry>Cumulative seconds spent flushing.</entry>
						</row>
						<row>
							<entry>ep_flush_all</entry>
							<entry>True if disk flush_all is scheduled.</entry>
						</row>
						<row>
							<entry>ep_num_ops_get_meta</entry>
							<entry>Number of getMeta operations.</entry>
						</row>
						<row>
							<entry>ep_num_ops_set_meta</entry>
							<entry>Number of setWithMeta operations.</entry>
						</row>
						<row>
							<entry>ep_num_ops_del_meta</entry>
							<entry>Number of delWithMeta operations..</entry>
						</row>
						<row>
							<entry>ep_num_ops_set_meta_res_failed</entry>
							<entry>Number of setWithMeta ops that failed conflict
								resolution.</entry>
						</row>
						<row>
							<entry>ep_num_ops_del_meta_res_failed</entry>
							<entry>Number of delWithMeta ops that failed conflict
								resolution.</entry>
						</row>
						<row>
							<entry>ep_num_ops_set_ret_meta</entry>
							<entry>Number of setRetMeta operations.</entry>
						</row>
						<row>
							<entry>ep_num_ops_del_ret_meta</entry>
							<entry>Number of delRetMeta operations.</entry>
						</row>
						<row>
							<entry>curr_items</entry>
							<entry>Num items in active vbuckets (temp + live).</entry>
						</row>
						<row>
							<entry>curr_temp_items</entry>
							<entry>Num temp items in active vbuckets.</entry>
						</row>
						<row>
							<entry>curr_items_tot</entry>
							<entry>Num current items including those not active (replica, dead and
								pending states).</entry>
						</row>
						<row>
							<entry>ep_kv_size</entry>
							<entry>Memory used to store item metadata, keys and values, no matter
								the vBucket’s state. If an item’s value is ejected, this stats will
								be decremented by the size of the item’s value.</entry>
						</row>
						<row>
							<entry>ep_value_size</entry>
							<entry>Memory used to store values for resident keys</entry>
						</row>
						<row>
							<entry>ep_overhead</entry>
							<entry>Extra memory used by transient data like persistence queues,
								replication queues, checkpoints, etc.</entry>
						</row>
						<row>
							<entry>ep_mem_low_wat</entry>
							<entry>Low water mark for auto-evictions.</entry>
						</row>
						<row>
							<entry>ep_mem_high_wat</entry>
							<entry>High water mark for auto-evictions.</entry>
						</row>
						<row>
							<entry>ep_total_cache_size</entry>
							<entry>The total byte size of all items, no matter the vBucket’s state,
								no matter if an item’s value is ejected.</entry>
						</row>
						<row>
							<entry>ep_oom_errors</entry>
							<entry>Number of times unrecoverable OOMs happened while processing
								operations.</entry>
						</row>
						<row>
							<entry>ep_tmp_oom_errors</entry>
							<entry>Number of times temporary OOMs happened while processing
								operations.</entry>
						</row>
						<row>
							<entry>ep_mem_tracker_enabled</entry>
							<entry>True if memory usage tracker is enabled.</entry>
						</row>
						<row>
							<entry>ep_bg_fetched</entry>
							<entry>Number of items fetched from disk.</entry>
						</row>
						<row>
							<entry>ep_bg_meta_fetched</entry>
							<entry>Number of meta items fetched from disk.</entry>
						</row>
						<row>
							<entry>ep_bg_remaining_jobs</entry>
							<entry>Number of remaining bg fetch jobs.</entry>
						</row>
						<row>
							<entry>ep_max_bg_remaining_jobs</entry>
							<entry>Max number of remaining bg fetch jobs that we have seen in the
								queue so far.</entry>
						</row>
						<row>
							<entry>ep_tap_bg_fetched</entry>
							<entry>Number of tap disk fetches.</entry>
						</row>
						<row>
							<entry>ep_tap_bg_fetch_requeued</entry>
							<entry>Number of times a tap bg fetch task is requeued.</entry>
						</row>
						<row>
							<entry>ep_num_pager_runs</entry>
							<entry>Number of times we ran pager loops to seek additional
								memory.</entry>
						</row>
						<row>
							<entry>ep_num_expiry_pager_runs</entry>
							<entry>Number of times we ran expiry pager loops to purge expired items
								from memory/disk.</entry>
						</row>
						<row>
							<entry>ep_num_access_scanner_runs</entry>
							<entry>Number of times we ran access scanner to snapshot working
								set.</entry>
						</row>
						<row>
							<entry>ep_access_scanner_num_items</entry>
							<entry>Number of items that last access scanner task swept to access
								log.</entry>
						</row>
						<row>
							<entry>ep_access_scanner_task_time</entry>
							<entry>Time of the next access scanner task (GMT).</entry>
						</row>
						<row>
							<entry>ep_access_scanner_last_runtime</entry>
							<entry>Number of seconds that last access scanner task took to
								complete.</entry>
						</row>
						<row>
							<entry>ep_items_rm_from_checkpoints</entry>
							<entry>Number of items removed from closed unreferenced
								checkpoints.</entry>
						</row>
						<row>
							<entry>ep_num_value_ejects</entry>
							<entry>Number of times item values got ejected from memory to
								disk.</entry>
						</row>
						<row>
							<entry>ep_num_eject_failures</entry>
							<entry>Number of items that could not be ejected.</entry>
						</row>
						<row>
							<entry>ep_num_not_my_vbuckets</entry>
							<entry>Number of times <systemoutput>Not My vBucket
								</systemoutput>exception happened during runtime.</entry>
						</row>
						<row>
							<entry>ep_tap_keepalive</entry>
							<entry>Tap keepalive time.</entry>
						</row>
						<row>
							<entry>ep_dbname</entry>
							<entry>DB path.</entry>
						</row>
						<row>
							<entry>ep_io_num_read</entry>
							<entry>Number of I/O read operations.</entry>
						</row>
						<row>
							<entry>ep_io_num_write</entry>
							<entry>Number of I/O write operations.</entry>
						</row>
						<row>
							<entry>ep_io_read_bytes</entry>
							<entry>Number of bytes read (key + values).</entry>
						</row>
						<row>
							<entry>ep_io_write_bytes</entry>
							<entry>Number of bytes written (key + values).</entry>
						</row>
						
						<row>
							<entry>ep_io_total_read_bytes</entry>
							<entry>Number of bytes read (total, including Couchstore B-Tree and other overheads).</entry>
						</row>	
						
						<row>
							<entry>ep_io_total_write_bytes</entry>
							<entry>Number of bytes written (total, including Couchstore B-Tree and other overheads).</entry>
						</row>	
						
						<row>
							<entry>ep_io_compaction_read_bytes</entry>
							<entry>Number of bytes read (compaction only, including Couchstore B-Tree and other overheads).</entry>
						</row>
				
						<row>
							<entry>ep_io_compaction_write_bytes</entry>
							<entry>Number of bytes written (compaction only, including Couchstore B-Tree and other overheads).</entry>
						</row>		
			
						
					
						<row>
							<entry>ep_pending_ops</entry>
							<entry>Number of ops awaiting pending vbuckets.</entry>
						</row>
						<row>
							<entry>ep_pending_ops_total</entry>
							<entry>Total blocked pending ops since reset.</entry>
						</row>
						<row>
							<entry>ep_pending_ops_max</entry>
							<entry>Max ops seen awaiting 1 pending vBucket.</entry>
						</row>
						<row>
							<entry>ep_pending_ops_max_duration</entry>
							<entry>Max time (µs) used waiting on pending vbuckets.</entry>
						</row>
						<row>
							<entry>ep_bg_num_samples</entry>
							<entry>The number of samples included in the average.</entry>
						</row>
						<row>
							<entry>ep_bg_min_wait</entry>
							<entry>The shortest time (µs) in the wait queue.</entry>
						</row>
						<row>
							<entry>ep_bg_max_wait</entry>
							<entry>The longest time (µs) in the wait queue.</entry>
						</row>
						<row>
							<entry>ep_bg_wait_avg</entry>
							<entry>The average wait time (µs) for an item before it’s serviced by
								the dispatcher.</entry>
						</row>
						<row>
							<entry>ep_bg_min_load</entry>
							<entry>The shortest load time (µs).</entry>
						</row>
						<row>
							<entry>ep_bg_max_load</entry>
							<entry>The longest load time (µs).</entry>
						</row>
						<row>
							<entry>ep_bg_load_avg</entry>
							<entry>The average time (µs) for an item to be loaded from the
								persistence layer.</entry>
						</row>
						<row>
							<entry>ep_num_non_resident</entry>
							<entry>The number of non-resident items.</entry>
						</row>
						<row>
							<entry>ep_bg_wait</entry>
							<entry>The total elapse time for the wait queue.</entry>
						</row>
						<row>
							<entry>ep_bg_load</entry>
							<entry>The total elapse time for items to be loaded from the persistence
								layer.</entry>
						</row>
						<row>
							<entry>ep_allow_data_loss_during_shutdown</entry>
							<entry>Whether data loss is allowed during server shutdown.</entry>
						</row>
						<row>
							<entry>ep_alog_block_size</entry>
							<entry>Access log block size.</entry>
						</row>
						<row>
							<entry>ep_alog_path</entry>
							<entry>Path to the access log.</entry>
						</row>
						<row>
							<entry>ep_alog_sleep_time</entry>
							<entry>Interval between access scanner runs in minutes.</entry>
						</row>
						<row>
							<entry>ep_alog_task_time</entry>
							<entry>Hour in GMT time when access scanner task is scheduled to
								run.</entry>
						</row>
						<row>
							<entry>ep_backend</entry>
							<entry>The backend that is being used for data persistence.</entry>
						</row>
						<row>
							<entry>ep_bg_fetch_delay</entry>
							<entry>The amount of time to wait before doing a background
								fetch.</entry>
						</row>
						<row>
							<entry>ep_chk_max_items</entry>
							<entry>The number of items allowed in a <codeph>checkpoint</codeph>
								before a new one is created.</entry>
						</row>
						<row>
							<entry>ep_chk_period</entry>
							<entry>The maximum lifetime of a checkpoint before a new one is
								created.</entry>
						</row>
						<row>
							<entry>ep_chk_persistence_remains</entry>
							<entry>Number of remaining vbuckets for checkpoint persistence.</entry>
						</row>
						<row>
							<entry>ep_chk_persistence_timeout</entry>
							<entry>Timeout for vBucket checkpoint persistence.</entry>
						</row>
						<row>
							<entry>ep_chk_remover_stime</entry>
							<entry>The time interval for purging closed checkpoints from
								memory.</entry>
						</row>
						<row>
							<entry>ep_config_file</entry>
							<entry>The location of the ep-engine config file.</entry>
						</row>
						<row>
							<entry>ep_couch_bucket</entry>
							<entry>The name of this bucket.</entry>
						</row>
						<row>
							<entry>ep_couch_host</entry>
							<entry>The hostname that the CouchDB views server is listening
								on.</entry>
						</row>
						<row>
							<entry>ep_couch_port</entry>
							<entry>The port the CouchDB views server is listening on.</entry>
						</row>
						<row>
							<entry>ep_couch_reconnect_sleeptime</entry>
							<entry>The amount of time to wait before reconnecting to
								CouchDB.</entry>
						</row>
						<row>
							<entry>ep_couch_response_timeout</entry>
							<entry>Length of time to wait for a response from CouchDB before
								reconnecting.</entry>
						</row>
						<row>
							<entry>ep_data_traffic_enabled</entry>
							<entry>Whether or not data traffic is enabled for this bucket.</entry>
						</row>
						<row>
							<entry>ep_degraded_mode</entry>
							<entry>True if the engine is either warming up or data traffic is
								disabled.</entry>
						</row>
						<row>
							<entry>ep_exp_pager_stime</entry>
							<entry>The time interval for purging expired items from memory.</entry>
						</row>
						<row>
							<entry>ep_failpartialwarmup</entry>
							<entry>True if we want kill the bucket if warmup fails.</entry>
						</row>
						<row>
							<entry>ep_flushall_enabled</entry>
							<entry>True if this bucket enables the use of the flush_all
								command.</entry>
						</row>
						<row>
							<entry>ep_getl_default_timeout</entry>
							<entry>The default getl lock duration.</entry>
						</row>
						<row>
							<entry>ep_getl_max_timeout</entry>
							<entry>The maximum getl lock duration.</entry>
						</row>
						<row>
							<entry>ep_ht_locks</entry>
							<entry>The amount of locks per vb hashtable.</entry>
						</row>
						<row>
							<entry>ep_ht_size</entry>
							<entry>The initial size of each vb hashtable.</entry>
						</row>
						<row>
							<entry>ep_item_num_based_new_chk</entry>
							<entry>True if the number of items in the current checkpoint plays a
								role in a new checkpoint creation.</entry>
						</row>
						<row>
							<entry>ep_keep_closed_chks</entry>
							<entry>True if we want to keep the closed checkpoints for each vBucket
								unless the memory usage is above high water mark.</entry>
						</row>
						<row>
							<entry>ep_max_checkpoints</entry>
							<entry>The maximum amount of checkpoints that can be in memory per
								vBucket.</entry>
						</row>
						<row>
							<entry>ep_max_item_size</entry>
							<entry>The maximum value size.</entry>
						</row>
						<row>
							<entry>ep_max_size</entry>
							<entry>The maximum amount of memory this bucket can use.</entry>
						</row>
						<row>
							<entry>ep_max_vbuckets</entry>
							<entry>The maximum amount of vbuckets that can exist in this
								bucket.</entry>
						</row>
						<row>
							<entry>ep_mutation_mem_threshold</entry>
							<entry>The ratio of total memory available that we should start sending
								temp oom or oom message when hitting.</entry>
						</row>
						<row>
							<entry>ep_pager_active_vb_pcnt</entry>
							<entry>Active vbuckets paging percentage.</entry>
						</row>
						<row>
							<entry>ep_tap_ack_grace_period</entry>
							<entry>The amount of time to wait for a tap acks before
								disconnecting.</entry>
						</row>
						<row>
							<entry>ep_tap_ack_initial_sequence_number</entry>
							<entry>The initial sequence number for a tap ack when a tap stream is
								created.</entry>
						</row>
						<row>
							<entry>ep_tap_ack_interval</entry>
							<entry>The amount of messages a tap producer should send before
								requesting an ack.</entry>
						</row>
						<row>
							<entry>ep_tap_ack_window_size</entry>
							<entry>The maximum amount of ack requests that can be sent before the
								consumer sends a response ack. When the window is full the tap
								stream is paused..</entry>
						</row>
						<row>
							<entry>ep_tap_backfill_resident</entry>
							<entry>The resident ratio for deciding how to do backfill. If under the
								ratio we schedule full disk backfill. If above the ratio then we do
								bg fetches for non-resident items.</entry>
						</row>
						<row>
							<entry>ep_tap_backlog_limit</entry>
							<entry>The maximum amount of backfill items that can be in memory
								waiting to be sent to the tap consumer.</entry>
						</row>
						<row>
							<entry>ep_tap_backoff_period</entry>
							<entry>The number of seconds the tap connection.</entry>
						</row>
						<row>
							<entry>ep_tap_bg_fetch_requeued</entry>
							<entry>Number of times a tap bg fetch task is requeued.</entry>
						</row>
						<row>
							<entry>ep_tap_bg_max_pending</entry>
							<entry>The maximum number of bg jobs a tap connection may have.</entry>
						</row>
						<row>
							<entry>ep_tap_noop_interval</entry>
							<entry>Number of seconds between a noop is sent on an idle
								connection.</entry>
						</row>
						<row>
							<entry>ep_tap_requeue_sleep_time</entry>
							<entry>The amount of time to wait before a failed tap item is
								requeued.</entry>
						</row>
						<row>
							<entry>ep_tap_throttle_cap_pcnt</entry>
							<entry>Percentage of total items in write queue at which we throttle tap
								input.</entry>
						</row>
						<row>
							<entry>ep_tap_throttle_queue_cap</entry>
							<entry>Max size of a write queue to throttle incoming tap input.</entry>
						</row>
						<row>
							<entry>ep_tap_throttle_threshold</entry>
							<entry>Percentage of max mem at which we begin NAKing tap input.</entry>
						</row>
						<row>
							<entry>ep_uncommitted_items</entry>
							<entry>The amount of items that have not been written to disk.</entry>
						</row>
						<row>
							<entry>ep_vb0</entry>
							<entry>Whether vBucket 0 should be created by default.</entry>
						</row>
						<row>
							<entry>ep_waitforwarmup</entry>
							<entry>True if we should wait for the warmup process to complete before
								enabling traffic.</entry>
						</row>
						<row>
							<entry>ep_warmup</entry>
							<entry>Shows if warmup is enabled / disabled.</entry>
						</row>
						<row>
							<entry>ep_warmup_batch_size</entry>
							<entry>The size of each batch loaded during warmup.</entry>
						</row>
						<row>
							<entry>ep_warmup_dups</entry>
							<entry>Number of Duplicate items encountered during warmup.</entry>
						</row>
						<row>
							<entry>ep_warmup_min_items_threshold</entry>
							<entry>Percentage of total items warmed up before we enable
								traffic.</entry>
						</row>
						<row>
							<entry>ep_warmup_min_memory_threshold</entry>
							<entry>Percentage of max mem warmed up before we enable traffic.</entry>
						</row>
						<row>
							<entry>ep_warmup_oom</entry>
							<entry>The amount of <codeph>oom</codeph> errors that occurred during warmup.</entry>
						</row>
						<row>
							<entry>ep_warmup_thread</entry>
							<entry>The status of the warmup thread.</entry>
						</row>
						<row>
							<entry>ep_warmup_time</entry>
							<entry>The amount of time warmup took.</entry>
						</row>
					</tbody>
				</tgroup>
			</table>
			<p>* <codeph>uuid</codeph> is specified per bucket, therefore you must specify the
				bucket you are interested in. If you don't specify a bucket (<codeph>-b
				XXX</codeph>), then you will get information for the <codeph>default</codeph>
				bucket, if it exists. If the <codeph>default</codeph> bucket does not exist, the
				output will be empty.  </p><p>The following table shows replica vBucket statistics. </p><table>
				<tgroup cols="2">
					<colspec colname="col1"/>
					<colspec colname="col2"/>
					<thead>
						<row>
							<entry>Stat</entry>
							<entry>Description</entry>
						</row>
					</thead>
					<tbody>
						<row>
							<entry>vb_replica_num</entry>
							<entry>Number of replica vBuckets.</entry>
						</row>
						<row>
							<entry>vb_replica_curr_items</entry>
							<entry>Number of in memory items.</entry>
						</row>
						<row>
							<entry>vb_replica_num_non_resident</entry>
							<entry>Number of non-resident items.</entry>
						</row>
						<row>
							<entry>vb_replica_perc_mem_resident</entry>
							<entry>% memory resident.</entry>
						</row>
						<row>
							<entry>vb_replica_eject</entry>
							<entry>Number of times item values got ejected..</entry>
						</row>
						<row>
							<entry>vb_replica_expired</entry>
							<entry>Number of times an item was expired.</entry>
						</row>
						<row>
							<entry>vb_replica_ht_memory</entry>
							<entry>Memory overhead of the hashtable.</entry>
						</row>
						<row>
							<entry>vb_replica_itm_memory</entry>
							<entry>Total item memory.</entry>
						</row>
						<row>
							<entry>vb_replica_meta_data_memory</entry>
							<entry>Total metadata memory.</entry>
						</row>
						<row>
							<entry>vb_replica_ops_create</entry>
							<entry>Number of create operations.</entry>
						</row>
						<row>
							<entry>vb_replica_ops_update</entry>
							<entry>Number of update operations.</entry>
						</row>
						<row>
							<entry>vb_replica_ops_delete</entry>
							<entry>Number of delete operations.</entry>
						</row>
						<row>
							<entry>vb_replica_ops_reject</entry>
							<entry>Number of rejected operations.</entry>
						</row>
						<row>
							<entry>vb_replica_queue_size</entry>
							<entry>Replica items in disk queue.</entry>
						</row>
						<row>
							<entry>vb_replica_queue_memory</entry>
							<entry>Memory used for disk queue.</entry>
						</row>
						<row>
							<entry>vb_replica_queue_age</entry>
							<entry>Sum of disk queue item age in milliseconds.</entry>
						</row>
						<row>
							<entry>vb_replica_queue_pending</entry>
							<entry>Total bytes of pending writes.</entry>
						</row>
						<row>
							<entry>vb_replica_queue_fill</entry>
							<entry>Total enqueued items.</entry>
						</row>
						<row>
							<entry>vb_replica_queue_drain</entry>
							<entry>Total drained items. </entry>
						</row>
					</tbody>
				</tgroup>
			</table>
			<p>The following table shows active vBucket statistics: </p><table>
				<tgroup cols="2">
					<colspec colname="col1"/>
					<colspec colname="col2"/>
					<thead>
						<row>
							<entry>Stat</entry>
							<entry>Description</entry>
						</row>
					</thead>
					<tbody>
						<row>
							<entry>vb_active_num</entry>
							<entry>Number of active vBuckets.</entry>
						</row>
						<row>
							<entry>vb_active_curr_items</entry>
							<entry>Number of in memory items.</entry>
						</row>
						<row>
							<entry>vb_active_num_non_resident</entry>
							<entry>Number of non-resident items.</entry>
						</row>
						<row>
							<entry>vb_active_perc_mem_resident</entry>
							<entry>% memory resident.</entry>
						</row>
						<row>
							<entry>vb_active_eject</entry>
							<entry>Number of times item values got ejected.</entry>
						</row>
						<row>
							<entry>vb_active_expired</entry>
							<entry>Number of times an item was expired.</entry>
						</row>
						<row>
							<entry>vb_active_ht_memory</entry>
							<entry>Memory overhead of the hashtable.</entry>
						</row>
						<row>
							<entry>vb_active_itm_memory</entry>
							<entry>Total item memory.</entry>
						</row>
						<row>
							<entry>vb_active_meta_data_memory</entry>
							<entry>Total metadata memory.</entry>
						</row>
						<row>
							<entry>vb_active_ops_create</entry>
							<entry>Number of create operations.</entry>
						</row>
						<row>
							<entry>vb_active_ops_update</entry>
							<entry>Number of update operations.</entry>
						</row>
						<row>
							<entry>vb_active_ops_delete</entry>
							<entry>Number of delete operations.</entry>
						</row>
						<row>
							<entry>vb_active_ops_reject</entry>
							<entry>Number of rejected operations.</entry>
						</row>
						<row>
							<entry>vb_active_queue_size</entry>
							<entry>Active items in disk queue.</entry>
						</row>
						<row>
							<entry>vb_active_queue_memory</entry>
							<entry>Memory used for disk queue.</entry>
						</row>
						<row>
							<entry>vb_active_queue_age</entry>
							<entry>Sum of disk queue item age in milliseconds.</entry>
						</row>
						<row>
							<entry>vb_active_queue_pending</entry>
							<entry>Total bytes of pending writes.</entry>
						</row>
						<row>
							<entry>vb_active_queue_fill</entry>
							<entry>Total enqueued items.</entry>
						</row>
						<row>
							<entry>vb_active_queue_drain</entry>
							<entry>Total drained items. </entry>
						</row>
					</tbody>
				</tgroup>
			</table>
			<p>The following table shows pending vBucket statistics: </p><table>
				<tgroup cols="2">
					<colspec colname="col1"/>
					<colspec colname="col2"/>
					<thead>
						<row>
							<entry>Stat</entry>
							<entry>Description</entry>
						</row>
					</thead>
					<tbody>
						<row>
							<entry>vb_pending_num</entry>
							<entry>Number of pending vBuckets.</entry>
						</row>
						<row>
							<entry>vb_pending_curr_items</entry>
							<entry>Number of in memory items.</entry>
						</row>
						<row>
							<entry>vb_pending_num_non_resident</entry>
							<entry>Number of non-resident items.</entry>
						</row>
						<row>
							<entry>vb_pending_perc_mem_resident</entry>
							<entry>% memory resident.</entry>
						</row>
						<row>
							<entry>vb_pending_eject</entry>
							<entry>Number of times item values got ejected.</entry>
						</row>
						<row>
							<entry>vb_pending_expired</entry>
							<entry>Number of times an item was expired.</entry>
						</row>
						<row>
							<entry>vb_pending_ht_memory</entry>
							<entry>Memory overhead of the hashtable.</entry>
						</row>
						<row>
							<entry>vb_pending_itm_memory</entry>
							<entry>Total item memory.</entry>
						</row>
						<row>
							<entry>vb_pending_meta_data_memory</entry>
							<entry>Total metadata memory.</entry>
						</row>
						<row>
							<entry>vb_pending_ops_create</entry>
							<entry>Number of create operations.</entry>
						</row>
						<row>
							<entry>vb_pending_ops_update</entry>
							<entry>Number of update operations.</entry>
						</row>
						<row>
							<entry>vb_pending_ops_delete</entry>
							<entry>Number of delete operations.</entry>
						</row>
						<row>
							<entry>vb_pending_ops_reject</entry>
							<entry>Number of rejected operations.</entry>
						</row>
						<row>
							<entry>vb_pending_queue_size</entry>
							<entry>Pending items in disk queue.</entry>
						</row>
						<row>
							<entry>vb_pending_queue_memory</entry>
							<entry>Memory used for disk queue.</entry>
						</row>
						<row>
							<entry>vb_pending_queue_age</entry>
							<entry>Sum of disk queue item age in milliseconds.</entry>
						</row>
						<row>
							<entry>vb_pending_queue_pending</entry>
							<entry>Total bytes of pending writes.</entry>
						</row>
						<row>
							<entry>vb_pending_queue_fill</entry>
							<entry>Total enqueued items.</entry>
						</row>
						<row>
							<entry>vb_pending_queue_drain</entry>
							<entry>Total drained items. </entry>
						</row>
					</tbody>
				</tgroup>
			</table>

		<p>The majority of <cmdname>cbstats</cmdname> commands are predominantly used by Couchbase
				internally and to help resolve customer support incidents. </p>
					

		</section> 
		
		<section><title>Options</title>
		
			<p>The following are the command options:</p>
			
			<table>
				<tgroup cols="2">
					<colspec colnum="1" colname="c1" colwidth="1*"/>
					<colspec colnum="2" colname="c2" colwidth="3.17*"/>
					<thead>
						<row>
							<entry>Options</entry>
							<entry>Description</entry>
						</row>
					</thead>
					<tbody>
						<row>
							<entry><codeph>-h, --help</codeph></entry>
							<entry>Shows the help message and exits.</entry>
						</row>
						<row>
							<entry><codeph>-a</codeph></entry>
							<entry>Iterates over all buckets.</entry>
						</row>
						<row>
							<entry><codeph>-j</codeph></entry>
							<entry>Outputs the result in JSON format.</entry>
						</row>
						<row>
							<entry><codeph>-8</codeph></entry>
							<entry>Forces the use of UTF8 symbols in the output.</entry>
						</row>
						<row>
							<entry><codeph>-b [BUCKETNAME]</codeph></entry>
							<entry>The bucket to get the statistics from. Default: <codeph>default</codeph>.</entry>
						</row>
						<row>
							<entry><codeph>-u [USERNAME]</codeph></entry>
							<entry>The username to authenticate. Default: the bucket name.</entry>
						</row>
						<row>
							<entry><codeph>-p [PASSWORD]</codeph></entry>
							<entry>The password for the bucket, if one exists.</entry>
						</row>
						<row>
							<entry><codeph>-S</codeph></entry>
							<entry>Reads the password from stdin.</entry>
						</row>
					</tbody>
				</tgroup>
			</table>
			
			
		</section>

		
		<section><title>Examples</title>
	<p><b>Example with two buckets, <codeph>default</codeph> and <codeph>c</codeph>:</b></p>
				<codeblock>$ cbstats localhost:11210 -b default uuid
	uuid: 3cd3d2efb20f3b9d7d484925b6d8c03f
	$ cbstats localhost:11210 uuid
	uuid: 3cd3d2efb20f3b9d7d484925b6d8c03f
	$ cbstats localhost:11210 -b c uuid
	uuid: 1de74b8dc0981abbc6481c5276b91be1</codeblock>

		<p><b>Example after the default bucket was deleted, and only the <codeph>c</codeph> bucket was
					left:</b></p>
				<codeblock>$ cbstats localhost:11210 -b default uuid
	Authentication error for default
	$ cbstats localhost:11210 uuid
	&lt;nothing&gt;
	$ cbstats localhost:11210 -b c uuid
	uuid: 1de74b8dc0981abbc6481c5276b91be1</codeblock>
			
			
			<p><b>Example for getting statistics for timings:</b></p>
			<p>To get statistics, for example, timings on host 10.5.2.117:</p>
			<codeblock>cbstats 10.5.2.117:11210 -u Administrator -p password -b beer-sample timings</codeblock>
			
			<p>Response:</p>
			<codeblock>
 disk_commit (1024 total)
    0 - 1s : (100.00%) 1024 ###################################################
    Avg    : (     1s)
 get_stats_cmd (30663276 total)
    0 - 1us       : (  0.05%)    14827 
    1us - 2us     : (  6.56%)  1995778 ##
    2us - 4us     : ( 41.79%) 10804626 ##############
    4us - 8us     : ( 45.20%)  1044043 #
    8us - 16us    : ( 45.49%)    89929 
    16us - 32us   : ( 45.90%)   124472 
    32us - 64us   : ( 46.38%)   148935 
    64us - 128us  : ( 56.17%)  2999690 ###
    128us - 256us : ( 68.57%)  3804009 ####
    256us - 512us : ( 69.91%)   411281 
    512us - 1ms   : ( 78.77%)  2717402 ###
    1ms - 2ms     : ( 96.36%)  5391526 #######
    2ms - 4ms     : ( 99.05%)   826345 #
    4ms - 8ms     : ( 99.96%)   278727 
    8ms - 16ms    : (100.00%)    11443 
    16ms - 32ms   : (100.00%)      217 
    32ms - 65ms   : (100.00%)       19 
    65ms - 131ms  : (100.00%)        7 
    Avg           : (  347us)
 disk_vbstate_snapshot (93280 total)
    32us - 64us   : ( 15.34%) 14308 ######
    64us - 128us  : ( 74.74%) 55413 #########################
    128us - 256us : ( 91.39%) 15532 #######
    256us - 512us : ( 95.69%)  4007 #
    512us - 1ms   : ( 99.49%)  3546 #
    1ms - 2ms     : ( 99.95%)   423 
    2ms - 4ms     : ( 99.99%)    43 
    4ms - 8ms     : (100.00%)     4 
    2s - 4s       : (100.00%)     4 
    Avg           : (  190us)
 notify_io (4 total)
    4us - 8us   : ( 25.00%) 1 ############
    16us - 32us : ( 75.00%) 2 ########################
    32us - 64us : (100.00%) 1 ############
    Avg         : (   17us)
			</codeblock>
			
			
		
		
		<p><b>Example for <codeph>cbstats</codeph> output:</b></p>
		<p>The <codeph>cbstats</codeph> output can be used with other command-line tools
			to sort and filter the data, for example, the <codeph>watch</codeph> command.</p>
		
		<codeblock>watch --diff "cbstats \
    ip-10-12-19-81:11210 -b bucket_name -p bucket_password all | egrep 'item|mem|flusher|ep_queue|bg|eje|resi|warm'"
</codeblock>
		<p><b>Example for <codeph>disk_insert</codeph>:</b></p>	
			
			<p>The following sample statistics show that <codeph>disk_insert</codeph> took 8–16µs 9,488
				times, 16–32µs 290 times, and so on.</p>
			
			<codeblock>
STAT disk_insert_8,16 9488
STAT disk_insert_16,32 290
STAT disk_insert_32,64 73
STAT disk_insert_64,128 86
STAT disk_insert_128,256 48
STAT disk_insert_256,512 2
STAT disk_insert_512,1024 12
STAT disk_insert_1024,2048 1
      </codeblock>
			
			
			
			<p>The same statistics displayed by the CLI <codeph>cbstats</codeph> tool looks like the following:</p>
			<codeblock>
disk_insert (10008 total)
8us - 16us : ( 94.80%) 9488 ###########################################
16us - 32us : ( 97.70%) 290 #
32us - 64us : ( 98.43%) 73
64us - 128us : ( 99.29%) 86
128us - 256us : ( 99.77%) 4
256us - 512us : ( 99.79%) 2
512us - 1ms : ( 99.91%) 12
1ms - 2ms : ( 99.92%) 1
      </codeblock>	
		</section>
		
	</refbody>
	
</reference>
