<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE concept PUBLIC "-//OASIS//DTD DITA Concept//EN" "concept.dtd">
<concept id="concept_bl2_b4v_vs">
 <title>Append-only and compaction</title>
 <shortdesc>As mutations arrive, the writes append new pages to the end of the file and invalidate
  links to previous versions of the updated pages. With these append-only write models, a compaction
  process is needed to clean up the orphaned or fragmented space in the files.</shortdesc>
 <conbody>
  <p> In Couchbase Server, the compaction process reads the existing file and writes a new
   contiguous file that no longer contains the orphaned items. The compaction process runs in the
   background and is designed to minimize the impact on the front end performance.</p>
  <p>The compaction process can be manual, scheduled, or automated based on percentage of
   fragmentation. Compaction of an entire dataset is parallelized across multiple nodes as well as
   multiple files within those nodes.</p>
   <p>In the figure below, as A’’, B’ and D is received by Couchbase Server, previous versions such
   as A’, A and B are orphaned. After compaction, the orphaned references are removed and a
   continuous file is created. <fig id="fig_hrv_3x3_ws">
    <title>Compaction in Couchbase Server</title>
    <image placement="break" href="images/compaction.png" width="350" id="image_irv_3x3_ws"/>
   </fig></p>
  <p>Compaction process can be run automatically by the system or manually by an administrator. You
   can also configure auto-compaction to trigger compaction based on fragmentation percentage or
   time interval and can be configured separately for views, indexes, or data files.<fig
    id="fig_ex1_5x3_ws">
    <title>Configuring auto-compaction</title>
    <image placement="break" href="images/auto-compaction-config.png" width="600"
     id="image_fx1_5x3_ws"/>
   </fig>
  </p>
 </conbody>
</concept>
