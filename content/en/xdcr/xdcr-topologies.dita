<?xml version="1.0" encoding="utf-8"?>
<!DOCTYPE topic
  PUBLIC "-//OASIS//DTD DITA Topic//EN" "topic.dtd">
<topic xml:lang="en-us" id="topic2801">
  <title>XDCR basic topologies</title>
  <shortdesc>Cross Datacenter Replication (XDCR) can be configured to support a variety of different
    topologies; the most common are unidirectional and bidirectional.</shortdesc>
  <body>
    <p>Unidirectional replication is one-way replication, where active data gets replicated from the
      source cluster to the destination cluster. You may use unidirectional replication when you
      want to create an active off-site backup, replicating data from one cluster to a backup
      cluster.</p>
    <p>Bidirectional replication enables two clusters to replicate data with each other. Setting up
      the bidirectional replication in Couchbase Server involves setting up two unidirectional
      replication links from one cluster to the other. The bidirectional replication is useful when
      you want to load-balance the workload across two clusters, where each cluster bidirectionally
      replicates data to the other cluster.</p>
    
    
   <!--  <p>In both topologies, data changes on the source cluster are replicated to the destination
      cluster only after they are persisted to disk. You can also have more than two datacenters and
      replicate data among all of them.</p> -->
    <p>XDCR can be set up on a per-bucket basis. The <term>Couchbase bucket</term> is a logical
      container for documents in Couchbase Server. Depending on your application requirements, you
      might want to replicate only a subset of the data in Couchbase Server between two clusters.
      With XDCR, you can selectively pick which Couchbase buckets to replicate between two clusters
      in a unidirectional or bidirectional fashion or you can replicate part of the data in a bucket
      using the XDCR filter expression. </p>
    <p>XDCR in Couchbase Server involves replicating active data to multiple, geographically diverse
      datacenters either for disaster recovery or to bring data closer to its users for faster data
      access. As shown in the example, there is no XDCR between Bucket A (Cluster 1) and Bucket A
      (Cluster 2). Unidirectional XDCR is set up between Bucket B (Cluster 1) and Bucket B (Cluster
      2). There is also bidirectional XDCR between Bucket C (Cluster 1) and Bucket C (Cluster
      2).</p>
    <p><image href="../images/xdcr-selective.png" id="image_mcy_rz2_xq" align="left" width="300"
      /></p>
    <p>After a document is stored in Couchbase Server and before XDCR replicates it to other
      datacenters, a couple of things happen within each Couchbase Server node.</p>
    <ol>
      <li>Each server in a Couchbase cluster has a managed cache. When an application stores a
        document in Couchbase Server, it is written into the managed cache.</li>
      <li>The document is added to the intra-cluster replication queue to be replicated to other
        servers within the cluster.</li>
      <li>XDCR pushes the replica documents to other clusters. On the destination cluster, the
        received replica documents will be stored in the cache. That replica data on the destination
        cluster can undergo low latency read/write operations. <p><image
            href="../images/xdcr-data-redundancy.png" id="image_ac1_xsz_bs" align="left"/></p>
      </li>
    </ol>
  </body>
</topic>
