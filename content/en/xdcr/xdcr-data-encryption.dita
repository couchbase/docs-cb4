<?xml version="1.0" encoding="utf-8"?>
<!DOCTYPE topic
  PUBLIC "-//OASIS//DTD DITA Topic//EN" "topic.dtd">
<topic xml:lang="en-us" id="topic1666">
  <title>XDCR data encryption</title>
  <shortdesc>The cross data center (XDCR) data security feature provides secure cross data center
    replication using Secure Socket Layer (SSL) data encryption.</shortdesc>
  <body>
    <note type="attention">This feature is available only in the Enterprise edition.</note>
    <note>With 4.0, Couchbase uses the TLS protocol by default for encrypted interactions. The server
      supports both TLS 1.0-1.2 for XDCR. Which version it uses depends on the source and
      target clusters.</note>
    <p>The data replicated between
      clusters can be encrypted in both uni-directional and bi-directional topologies.</p>
    <p>By default, XDCR traffic to a destination cluster is sent in clear text that is unencrypted.
      In this case, when XDCR traffic occurs across multiple clusters over public networks, it is
      recommended that a VPN gateway be configured between the two data centers to encrypt the data
      between each route.</p>
    <p>With the XDCR data encryption feature, the XDCR traffic from the source cluster is secured by
      enabling the XDCR encryption option, providing the destination clusterâ€™s certificate, and then
      replicating. The certificate is a self-signed certificate used by SSL to initiate secure
      sessions.</p>
    
    <note type="note">XDCR data encryption is supported only with Couchbase 
      self-signed certificates. It does not support importing your own certificate files nor does it
      support signed certificates from a Certificate Authority (CA).</note>
    
    <p>Data encryption is established between the source and destination clusters. Since data
      encryption is established at the cluster level, all buckets that are selected for replicated
      on the destination cluster are data encrypted. For buckets that need to be replicated without
      data encryption, establish a second XDCR destination cluster without XDCR data encryption
      enabled.</p>
    <p><image href="../images/xdcr-ssl.png" width="400"/></p>
        <note type="important">Both data encrypted and non-encrypted replication can not occur between the same XDCR source
      and destination cluster. For example, if Cluster A (source) has data encryption enabled to
      Cluster B (destination), then Cluster A (source) cannot also have non-encryption (data
      encryption is not enabled) to Cluster B (destination). </note>
    
    <p>For XDCR data encryption, the supported SSL/TLS-versions are SSL-3.0 and TLS-1.0 - 1.2. By
      default, XDCR uses the <codeph>rc4-128</codeph> cipher suite, however, <codeph>aes128</codeph>
      is used if <codeph>rc4-128</codeph> isn't available. XDCR can be forced to only use
        <codeph>rc4-128</codeph> by setting the COUCHBASE_WANT_ARCFOUR environmental variable.
      OpenSSL is not used for the TLS/SSL handshake logic. Instead, the TLS/SSL logic is implemented
      in Erlang. If specific ciphers/protocol/certificates are required, an alternative option is to
      connect to the clusters over an encrypted VPN connection.</p>
    
   
   
    
  </body>
  <related-links>
    <linklist>
      <link href="./xdcr-managing-data-encryption.dita"><linktext>Managing XDCR Data Encryption</linktext></link>
      <link href="../security/security-comm-encryption.dita"><linktext>Couchbase Encryption on the Wire</linktext></link>
      <link href="http://blog.couchbase.com/heartbleed-bug-and-couchbase-server" format="html">
        <linktext>Heartbleed Bug and Couchbase Server</linktext>
      </link>
    </linklist>
  </related-links>
</topic>
