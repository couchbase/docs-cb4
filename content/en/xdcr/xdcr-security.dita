<?xml version="1.0" encoding="utf-8"?>
<!DOCTYPE topic
  PUBLIC "-//OASIS//DTD DITA Topic//EN" "topic.dtd">
<topic xml:lang="en-us" id="topic1666">
  <title>XDCR security</title>
  <shortdesc>The Cross Datacenter Replication (XDCR) data security feature provides secure
    replication using Secure Socket Layer (SSL) data encryption.</shortdesc>
  <body>
    <note type="attention">This feature is available only for the Enterprise edition of Couchbase
      Server.</note>
    <p>The data replicated between
      clusters can be encrypted in both unidirectional and bidirectional topologies.</p>
    <p>By default, XDCR traffic to a destination cluster is sent in clear text (unencrypted). When
      XDCR traffic occurs across multiple clusters over public networks, it is recommended that a
      VPN gateway be configured between the two data centers to encrypt the data between each
      route.</p>
    <p>With the XDCR data encryption feature, the XDCR traffic from the source cluster is secured by
      enabling the XDCR encryption option, providing the destination cluster’s certificate, and then
      replicating. The certificate is a self-signed certificate used by SSL to initiate secure
      sessions.</p>
    
    <note type="note">XDCR data encryption is supported only with Couchbase self-signed
      certificates. It does not support import of the user's certificate file, nor does it support
      signed certificates from a Certificate Authority (CA).</note>
    
    <p>You have to establish data encryption between the source and destination clusters at the
      cluster level, and all buckets selected for replication on the destination cluster will have
      the data encrypted. If you need to replicate any of the buckets without data encryption,
      establish a second XDCR destination cluster without XDCR data encryption enabled.</p>
    <p>
      <image href="../images/xdcr-ssl.png" width="400" placement="break" align="left"/>
    </p>
    <note type="important">Replications that are both data encrypted and non-encrypted cannot occur
      between the same XDCR source and destination cluster. For example, if Cluster A (source) has
      data encryption enabled to Cluster B (destination), then Cluster A cannot have non-encryption
      enabled to the same Cluster B. </note>
    
    <p>For XDCR data encryption, the supported SSL/TLS-versions are SSL-3.0 and TLS-1.0. By default,
      XDCR uses the <codeph>rc4-128</codeph> cipher suite. However, <codeph>aes128</codeph> is used
      if <codeph>rc4-128</codeph> isn't available. XDCR can be forced only to use
        <codeph>rc4-128</codeph> by setting the <varname>COUCHBASE_WANT_ARCFOUR</varname>
      environmental variable. </p>
    <p>Do not use OpenSSL for the TLS/SSL handshake logic but implement the TLS/SSL logic in Erlang
      instead. If specific ciphers, protocols, or certificates are required, an alternative option
      is to connect to the clusters over an encrypted VPN connection.</p>
    
    <section><title>XDCR data encryption prerequisites</title><ul>
      <li>Couchbase servers on both source and destination clusters must have Couchbase
        2.5 Enterprise Edition and above installed.</li>
      <li>The source cluster must use the destination cluster’s certificate. The
        certificate is a self-signed certificate used by SSL to initiate secure
        sessions.</li>
      <li>The reserved ports for XDCR data encryption must be available.</li>
    </ul>
      
      <note type="important">Ensure that the Secure Socket Layer (SSL) reserved ports are
        available prior to using XDCR data encryption. Otherwise, XDCR data encryption is
        unavailable.</note>
      
      <p>With XDCR data encryption, the following ports are reserved:</p>
      
      <table>
        <tgroup cols="2">
          <colspec colname="col1"/>
          <colspec colname="col2"/>
          <thead>
            <row>
              <entry>Port</entry>
              <entry>Description</entry>
            </row>
          </thead>
          <tbody>
            <row>
              <entry>11214</entry>
              <entry>Incoming SSL Proxy</entry>
            </row>
            <row>
              <entry>11215</entry>
              <entry>Internal Outgoing SSL Proxy</entry>
            </row>
            <row>
              <entry>18091</entry>
              <entry>Internal REST HTTPS for SSL</entry>
            </row>
            <row>
              <entry>18092</entry>
              <entry>Internal CAPI HTTPS for SSL </entry>
            </row>
          </tbody>
        </tgroup>
      </table>
      
      <note type="note">If you employ XDCR in a situation where the XDCR traffic between data
        centers travels over the internet, Couchbase recommends that you use VPN.</note>
      
      
      
    </section>
   
    
  </body>
  <related-links>
    <linklist>
      <link href="http://blog.couchbase.com/heartbleed-bug-and-couchbase-server" format="html">
        <linktext>Heartbleed Bug and Couchbase Server</linktext>
      </link>
     
    </linklist>

  </related-links>
</topic>
