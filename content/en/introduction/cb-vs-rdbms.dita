<?xml version="1.0" encoding="utf-8"?>
<!DOCTYPE concept
  PUBLIC "-//OASIS//DTD DITA Concept//EN" "concept.dtd">
<concept xml:lang="en-us" id="about-couchbase">
	<title>Comparing Couchbase and traditional RDBMSs</title>
	<conbody>
		<p>If you are an application developer with a background primarily in relational databases,
			Couchbase Server has some key characteristics and advantages that you should be familiar
			with. The following compares the different database systems:</p>
		<table>
			<tgroup cols="2">
				<colspec colname="col1" />
				<colspec colname="col2" />
				<thead>
					<row>
						<entry>Couchbase Server</entry>
						<entry>Traditional relational database (RDBMS)</entry>
					</row>
				</thead>
				<tbody>
					<row>
						<entry>Rapidly scalable to millions of users.</entry>
						<entry>Scalable to thousands of users.</entry>
					</row>
					<row>
						<entry>Data can be structured, semi-structured, and unstructured.</entry>
						<entry>Data must be normalized.</entry>
					</row>
					<row>
						<entry>Built on modern reality of relatively inexpensive, plentiful
							memory.</entry>
						<entry>Built on assumption of scarce, expensive memory.</entry>
					</row>
					<row>
						<entry>Built for environments with high-speed data networking.</entry>
						<entry>Built at a time when networking still formative and slow.</entry>
					</row>
					<row>
						<entry>Data can be flexibly stored as JSON documents or binary data. No need to
							predefine data types.</entry>
						<entry>Data types must be predefined for columns.</entry>
					</row>
					<row>
						<entry>Does not require knowledge or use of SQL as query language.</entry>
						<entry>Requires SQL as query language.</entry>
					</row>
					<row>
						<entry>Highly optimized for retrieve and append operations; high-performance for
							data-intensive applications, such as serving pages on high-traffic websites;
							can handle a large number of documents and document read/writes.</entry>
						<entry>Significantly slower times for retrieving and committing data. Designed for
							occasional, smaller read/write transactions and infrequent larger batch
							transactions.</entry>
					</row>
					<row>
						<entry>Data stored as key-document pairs; well suited for applications which
							handle rapidly growing lists of elements.</entry>
						<entry>Data stored in tables with fixed relations between tables.</entry>
					</row>
					<row>
						<entry>Does not require extensive data modeling; data structure is of lesser
							significance during development.</entry>
						<entry>Data modeling and establishing relational model for data structures
							required during application development.</entry>
					</row>
					<row>
						<entry>Asynchronous operations and optimistic concurrency enable applications
							designed for high throughput.</entry>
						<entry>Strict enforcement of data integrity and normalization, with the tradeoff
							of lower performance and slower response times. </entry>
					</row>
				</tbody>
			</tgroup>
		</table>
		<p>Before you develop your application and model application data, you should consider the
			issues faced when you use a traditional RDBMS. Couchbase Server is well suited to handle
			these issues:</p>
		<ul>
			<li><p>Stores many serialized objects,</p></li>
			<li><p>Stores dissimilar objects that do not fit a single schema,</p></li>
			<li><p>Scales out from thousands to millions of users rapidly,</p></li>
			<li><p>Performs large volume reads/writes,</p></li>
			<li><p>Supports schema and application data changes on running system.</p></li>
		</ul>
		<p>If you need a system that provides a high level of scalability, flexibility in data structure,
			and high performance, a NoSQL solution such as Couchbase is well suited. If you want to
			handle multirecord transactions, have complex security needs, or need to perform rollback
			of operations, a traditional RDBMS may be the better alternative for your application.
			There may also be many cases in which you perform an analysis of your application needs and
			determine you use both a RDBMS and Couchbase Server for your data. For more detailed
			information about the topic, see our resource library, webinars and white papers on the
			topic at <xref href="http://www.couchbase.com/on-demand/webinar/WhyNoSQLWebinarSeries"
				scope="external" format="html">Couchbase, Why NoSQL, Why Now?</xref></p>
	</conbody>
	
</concept>
