<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE topic PUBLIC "-//OASIS//DTD DITA Topic//EN" "topic.dtd">
<topic id="topic_nh4_zhh_x5">
  <title><cmdname>cbbackupmgr-restore</cmdname></title><shortdesc>Restores data from the backup archive to a
    Couchbase cluster.</shortdesc>
  <body>
  
    
    <section><title>Syntax</title>
      <codeblock>cbbackupmgr restore [--archive &lt;archive_dir&gt;] [--repo &lt;repo_name&gt;]
        [--start &lt;backup&gt;] [--end &lt;backup&gt;] [--exclude-buckets &lt;bucket_list&gt;]
        [--include-buckets &lt;bucket_list&gt;] [--disable-bucket-config]
        [--disable-views] [--disable-gsi-indexes] [--disable-ft-indexes]
        [--disable-data] [--force-updates][--threads &lt;integer&gt;]
        [--no-progress-bar]</codeblock>
    </section>
    
    <section><title>Description</title>
      <p>This command restores data from the backup archive to a target Couchbase cluster.</p>
      <p>The restore command is capable of restoring a single backup or a range of backups. When
        restoring a single backup, all data from that backup is restored. If a range of backups is
        restored, then <cmdname>cbbackupmgr</cmdname> will take into account any failovers that may
        have occurred in between the time that the backups were originally taken. If a failover did
        occur in-between the backups, and the backup archive contains data that no longer exists in
        the cluster, then the data that no longer exists will be skipped during the restore. If no
        failovers occurred in-between backups, then restoring a range of backups will restore all
        data from each backup. If all data must be restored regardless of whether a failover
        occurred in between the original backups, then data should be restored one backup at a
        time.</p>
      <p>The restore command is guaranteed to work during rebalances and failovers. If a rebalance
        is taking place, <cmdname>cbbackupmgr</cmdname> will track the movement of vbuckets around a
        Couchbase cluster and ensure that data is restored to the appropriate node. If a failover
        occurs during the restore then the client will wait 180 seconds for the failed node to be
        removed from the cluster. If the failed node is not removed in 180 seconds then the restore
        will fail, but if the failed node is removed before the timeout then data will continue to
        be restored.</p>
    </section>
    
    
    <section><title>Options</title>
      
      <p>Below is a list of required and optional parameters for the <cmdname>restore</cmdname>
        command:</p>
        <table frame="all" rowsep="1" colsep="1" id="table_c4r_qwv_x5">
          <title>restore options</title>
          <tgroup cols="2">
            <colspec colname="c1" colnum="1" colwidth="1*"/>
            <colspec colname="c2" colnum="2" colwidth="1.7*"/>
            <thead>
              <row>
                <entry>Parameter</entry>
                <entry>Description</entry>
              </row>
            </thead>
            <tbody>
              <row>
                <entry><b>Required</b></entry>
                <entry/>
              </row>
              <row>
                <entry><codeph>--archive &lt;archive_dir&gt;</codeph></entry>
                <entry>The directory containing the backup repository from which to restore
                  data.</entry>
              </row> <row>
                <entry><codeph>--repo &lt;repo_name&gt; </codeph></entry>
                <entry>Name of the backup respository from which to restore data.</entry>
              </row>
              <row>
                <entry><codeph>--host &lt;hostname&gt;</codeph></entry>
                <entry>The hostname of one of the nodes in the cluster to restore data to. See the
                  Host Formats section below for hostname specification details.</entry>
              </row>
              <row>
                <entry><codeph>--username &lt;username&gt;</codeph></entry>
                <entry>The username for cluster authentication.</entry>
              </row>
              <row>
                <entry><codeph>--password &lt;password&gt; </codeph></entry>
                <entry>The password for cluster authentication.</entry>
              </row>
              <row>
                <entry><b>Optional</b></entry>
                <entry/>
              </row>
              <row>
                <entry><codeph>--start &lt;backup&gt;</codeph></entry>
                <entry>The name of the first backup in the backup repository to
                  restore. If not specified this value will default to the 
                  oldest backup in the backup repository.</entry>
              </row>
              <row>
                <entry><codeph>--end &lt;backup&gt;</codeph></entry>
                <entry>The name of the last backup in the backup repository to restore. If
                  not specified this value will default to the most recent backup in
                  the backup repository.</entry>
              </row>
              <row>
                <entry><codeph>--exclude-buckets &lt;bucket_list&gt;</codeph></entry>
                <entry>Restores all buckets in a backup that are not specified in
                  &lt;bucket_list&gt;. This flag cannot be specified at the same time as
                    the --include-buckets flag. Takes a comma separated list of bucket
                    names.</entry>
              </row>
              <row>
                <entry><codeph>--inlude-buckets &lt;bucket_list&gt;</codeph></entry>
                <entry> Restores only buckets in a backup that are specified in &lt;bucket-
                  list&gt;. This flag cannot be specified at the same time as the
                  --exclude-buckets flag. Takes a comma separated list of bucket
                  names.
                </entry>
              </row>
              <row>
                <entry><codeph>--disable-views</codeph></entry>
                <entry>Skips restoring view definitions for all buckets.</entry>
              </row>
              <row>
                <entry><codeph>--disable-gsi-indexes</codeph></entry>
                <entry>Skips restoring gsi index definitions for all buckets.</entry>
              </row>
              <row>
                <entry><codeph>--disable-ft-indexes</codeph></entry>
                <entry>Skips restoring full-text index definitions for all buckets.</entry>
              </row>
              <row>
                <entry><codeph>--disable-data</codeph></entry>
                <entry>Skips restoring all key-value data for all buckets.</entry>
              </row>
              <row>
                <entry><codeph>--force-updates</codeph></entry>
                <entry>Forces data in the Couchbase cluster to be overwritten even if the
                  data in the cluster is newer. By default updates are not forced and
                  all updates use Couchbase's conflict resolution mechanism to ensure
                  that if newer data exists on the cluster that is not overwritten by
                  older restore data..</entry>
              </row>
              <row>
                <entry><codeph>--threads &lt;num&gt;</codeph></entry>
                <entry>Specifies the number of concurrent clients to use when restoring
                  data. Fewer clients means restores will take longer, but there will
                  be less cluster resources used to complete the restore. More
                  clients means faster restores, but at the cost of more cluster
                  resource usage. This parameter defaults to 1 if it is not specified
                  and it is recommended that this parameter is not set to be higher
                  than the number of CPUs on the machine where the restore is taking
                  place.
                </entry>
              </row>
              <row>
                <entry><codeph>--no-progress-bar</codeph></entry>
                <entry>By default, a progress bar is printed to stdout so that the user
                  can see how long the restore is expected to take, the amount of
                  data that is being transferred per second, and the amount of data
                  that has been restored. Specifying this flag disables the progress
                  bar and is useful when running automated jobs.</entry>
              </row>
            </tbody>
          </tgroup>
        </table>

      
    </section>
    <section><title>Host Formats</title>
    
      <p>When specifying a host for the restore command the following formats
        are expected:</p> 
      <ul>
        <li>couchbase://&lt;addr&gt;</li>
        <li></li>
        <li></li>
      </ul>
    
    </section>  
  
  
  
  
    <section><title>Examples</title>
      
      <p>Restores all backups in the backup repository <codeph>travel</codeph>:
        <codeblock>./backup restore --dir /data/couchbase/backups --name travel --host couchbase://localhost \
--username Administrator --password password</codeblock></p>
      
      <p>In the examples below, data was backed up in the archive
          <filepath>/data/couchbase/backups</filepath> and backup repository
        <codeph>travel</codeph>. This backup repository contains four backups with timestamps:<ul>
          <li><codeph>2016-01-19T15:41:25.448936431-08:00</codeph></li>
          <li><codeph>2016-01-20T15:32:15.124936651-08:00</codeph></li>
          <li><codeph>2016-01-21T15:39:31.828976983-08:00</codeph></li>
          <li><codeph>2016-01-22T15:42:41.383468246-08:00</codeph></li>
        </ul></p>
      <p>Restores the two most recent backups in the backup repository <codeph>travel</codeph>:
        <codeblock>./backup restore --dir /data/couchbase/backups --name travel --host couchbase://localhost \
--username Administrator --password password --start 2016-01-21T15:39:31.828976983-08:00</codeblock></p>
      
      <p>Does not restore the first and last backups in the backup repository
          <codeph>travel</codeph>:
        <codeblock>./backup restore --dir /data/couchbase/backups --name travel --host couchbase://localhost \
--username Administrator --password password --start 2016-01-20T15:32:15.124936651-08:00 \
--end 2016-01-21T15:39:31.828976983-08:00</codeblock></p>
      <p>Only restores the last backup in the backup repository <codeph>travel</codeph>:
        <codeblock>./backup restore --dir /data/couchbase/backups --name travel --host couchbase://localhost \
--username Administrator --password password --start 2016-01-22T15:42:41.383468246-08:00 \
--end 2016-01-22T15:42:41.383468246-08:00</codeblock></p>
      <p>Restores all backups in the backup repository <codeph>travel</codeph>, but restores only
        the <codeph>travel-sample</codeph> bucket and uses 4 threads for parallelism:
        <codeblock>./backup restore --dir /data/couchbase/backups --name travel --host couchbase://localhost \
--username Administrator --password password --include-buckets travel-sample --threads 4</codeblock></p>
      <p>Restores all backups in the sample backup repository <codeph>travel</codeph>, but skips
        restoring data:
        <codeblock>./backup restore --dir /data/couchbase/backups --name travel --host couchbase://localhost \
--username Administrator --password password --disable-data</codeblock></p>
      <p>Restores all backups in the sample backup repository <codeph>travel</codeph>, but restores
        only the views in the <codeph>travel-sample</codeph> bucket:
        <codeblock>./backup restore --dir /data/couchbase/backups --name travel --host couchbase://localhost \
--username Administrator --password password --include-buckets travel-sample \
--disable-bucket-config --disable-gsi-indexes --disable--ft-indexes --disable-data       </codeblock></p>
      
      
      
    </section>
  </body>
</topic>
