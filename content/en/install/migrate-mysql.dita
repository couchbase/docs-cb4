<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE concept PUBLIC "-//OASIS//DTD DITA Concept//EN" "concept.dtd">
<concept id="concept_ndy_g4d_5s">
 <title>Migrating from MySQL</title>
 <shortdesc>Migration guidelines for MySQL users.</shortdesc>
 <conbody>
  <p>When migrating from MySQL to Couchbase Server, there are several things 
   that you might want to think about, starting with the data model, 
   data types, and feature set differences. </p>
  <section><title>Data Model &#8211; Mapping from MySQL to Couchbase Server</title>
   <p>Data modeling for RDBMS has been a well-defined discipline for many years. Professionals,
    including novice users, have been practicing techniques such as logical to physical mapping and
    normalization / de-normalization. However, the old-school RDBMS data modeling techniques still
    play a meaningful role for those who are new to the NoSQL technology. </p>
   <p>
    <table frame="all" rowsep="1" colsep="1" id="table_dks_vgk_5s">
     <title>Concept mapping between MySQL and Couchbase Server</title>
     <tgroup cols="2">
      <colspec colname="c1" colnum="1" colwidth="1.0*"/>
      <colspec colname="c2" colnum="2" colwidth="1.0*"/>
      <thead>
       <row>
        <entry>MySQL</entry>
        <entry>Couchbase Server</entry>
       </row>
      </thead>
      <tbody>
       <row>
        <entry>Database</entry>
        <entry>Bucket</entry>
       </row>
       <row>
        <entry>Table</entry>
        <entry>Bucket(s)/Keyspaces</entry>
       </row>
       <row>
        <entry>Row</entry>
        <entry>Document</entry>
       </row>
       <row>
        <entry>Column</entry>
        <entry>Field</entry>
       </row>
       <row>
        <entry>Fixed schema</entry>
        <entry>Flexible schema</entry>
       </row>
      </tbody>
     </tgroup>
    </table>
   </p>
  
  <p>
    <table frame="all" rowsep="1" colsep="1" id="table_uzb_fhk_5s">
     <title>Datatype mapping between MySQL and Couchbase Server</title>
     <tgroup cols="3">
      <colspec colname="c1" colnum="1" colwidth="1.0*"/>
      <colspec colname="c2" colnum="2" colwidth="1.0*"/>
      <colspec colname="c3" colnum="3" colwidth="1.0*"/>
      <thead>
       <row>
        <entry>Data type</entry>
        <entry>MySQL</entry>
        <entry>Couchbase Server</entry>
       </row>
      </thead>
      <tbody>
       <row>
        <entry>Case sensitive</entry>
        <entry>Yes/No</entry>
        <entry>Yes</entry>
       </row>
       <row>
        <entry>Numbers</entry>
        <entry>Yes</entry>
        <entry>Yes</entry>
       </row>
       <row>
        <entry>String</entry>
        <entry>Yes</entry>
        <entry>Yes</entry>
       </row>
       <row>
        <entry>Boolean</entry>
        <entry>Yes (as <codeph>tinyint</codeph>)</entry>
        <entry>Yes</entry>
       </row>
       <row>
        <entry>Date time</entry>
        <entry>Yes</entry>
        <entry>Yes (as a string in JSON)</entry>
       </row>
       <row>
        <entry>Spatial data</entry>
        <entry>Yes</entry>
        <entry>Yes</entry>
       </row>
       <row>
        <entry>MISSING</entry>
        <entry>No</entry>
        <entry>Yes</entry>
       </row>
       <row>
        <entry>NULL</entry>
        <entry>Yes</entry>
        <entry>Yes</entry>
       </row>
       <row>
        <entry>Object/Arrays</entry>
        <entry>No</entry>
        <entry>Yes</entry>
       </row>
       <row>
        <entry>Blobs</entry>
        <entry>Yes</entry>
        <entry>Yes</entry>
       </row>
      </tbody>
     </tgroup>
    </table>
   </p>
  
  
  </section>
  
  <section><title>Feature Set</title>
   <p>Like MySQL, Couchbase Server offers a rich set of features and functionality far beyond those offered
    in simple key-value stores. </p>
   <p>With Couchbase Server, you also get an expressive SQL-like query language and query engine called
     <xref href="../indexes/n1ql-in-couchbase.dita#concept_kfz_ghb_ys">N1QL</xref>, which is
    combined with a new powerful indexing mechanism â€“ <xref
     href="../indexes/gsi-for-n1ql.dita#concept_bb5_khb_ys">global secondary indexes</xref>. </p>
  <p>
    <table frame="all" rowsep="1" colsep="1" id="table_s2y_mlk_5s">
     <title>Feature differences between MySQL and Couchbase Server</title>
     <tgroup cols="2">
      <colspec colname="c1" colnum="1" colwidth="1*"/>
      <colspec colname="c2" colnum="2" colwidth="3*"/>
      <thead>
       <row>
        <entry>Feature</entry>
        <entry>Key difference</entry>
       </row>
      </thead>
      <tbody>
       <row>
        <entry>Keys/Indexes</entry>
        <entry>Primary keys on keys of (key, value) pair</entry>
       </row>
       <row>
        <entry>SQL statements</entry>
        <entry>
         <ol>
          <li>The result is set in JSON instead of rows and columns.</li>
          <li>NEST, UNNEST</li>
          <li>Operations on datetime fields require datetime functions in N1QL.</li>
          <li>JSON-induced functions in N1QL: JSON, Object, and array functions.</li>
          <li>Type and comparison functions.</li>
          <li>JOIN, sub-query format differences.</li>
          <li><codeph>USING KEYS</codeph> and ON KEYS functions</li>
         </ol>
        </entry>
       </row>
       <row>
        <entry>Explain and metadata</entry>
        <entry>Variation in command and results (JSON).</entry>
       </row>
      </tbody>
     </tgroup>
    </table>
   </p>
  </section>
  
  <section>
   <title>ETL Tools</title>
   <p>You might have a spectrum of relational, operational, and analytical data sources in your
    environment. You might also need more sophistication applied to a data movement situation, such
    as more than just simple extract-load. In a case like that, you can use an
    extract-transform-load (ETL) tool such as <xref
     href="../connectors/talend/talend.dita#hadoop-1.2">Talend</xref>. With Talend, you can easily
    move data between Couchbase Server and any other data source. </p>
  </section>
 </conbody>
</concept>
