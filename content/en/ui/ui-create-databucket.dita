<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE concept PUBLIC "-//OASIS//DTD DITA Concept//EN" "concept.dtd">
<concept id="concept_rdg_lsw_yr">
 <title>Creating and editing data buckets</title>
 <shortdesc>The <wintitle>Data Buckets</wintitle> tab allows you to create new and edit existing
  data buckets.</shortdesc>
 <conbody>
   <p>When creating a new data bucket, or editing an existing one, you start with the bucket
   configuration screen where you can set the memory size, access control, and other settings.</p>
   <p>Select <menucascade>
      <uicontrol>Data Buckets</uicontrol>
      <uicontrol>Create New Data Bucket</uicontrol>
     </menucascade> to create a new bucket using the screen <wintitle>Create Bucket</wintitle>.</p>
      <p>Or, select <menucascade>
       <uicontrol>Data Buckets</uicontrol>
       <uicontrol>(blue triangle left of the bucket name)</uicontrol>
       <uicontrol>Edit</uicontrol>
      </menucascade> to edit an existing data bucket. </p><p>The <wintitle>Configure Bucket
      </wintitle>screen has the same content as the <wintitle>Create Bucket</wintitle>, only that it
      provides an additional button named <wintitle>Delete</wintitle> at the bottom, which allows
      you to delete the bucket.</p>
     <p><image href="../images/mrw_create_bucket.png" width="720" align="left"/></p>
 
    
    <dl>
     <dlentry>
      <dt>Bucket Settings</dt>
      <dd>The bucket name can only contain characters in the range A-Z, a-z, 0-9 as well as
     underscore, period, dash and percent symbols. <note type="tip">Create a named bucket
      specifically for your application. Any default bucket you initially set up with Couchbase
      Server cannot be used for storing live application data. The default bucket you create when
      you first install Couchbase Server is used only for testing.</note></dd>
      <dd>Select a Bucket Type, either <term>Memcached</term> or <term>Couchbase</term>.<p>The
      options that appear in this panel differ based on the bucket type.</p></dd>
     </dlentry>
    </dl>
   <dl>
    <dlentry>
     <dt>Replicas</dt>
     <dd>For Couchbase buckets, you can enable data replication so that you copy the data to other
      nodes in a cluster. You can configure up to three replicas per bucket. If you set this to one,
      you need to have a minimum of two nodes in your cluster. If a node in a cluster fails, after
      you perform failover the replicated data will be made available on a functioning node. This
      provides continuous cluster operations in spite of the machine failure. <ul>
       <li>Disable replication by deselecting the <uicontrol>Enable</uicontrol> check box.</li>
       <li>Disable replication by setting the number of replica copies to zero (0).</li>
       <li>To configure replicas, select a number in <wintitle>Number of replica (backup)
         copies</wintitle> drop-down list.</li>
       <li>To enable replica indexes, select the <uicontrol>Index replicas</uicontrol> check box.
        Couchbase Server can also create replicas of indexes. This ensures that indexes do not need
        to be rebuilt in the event of a node failure. This network load is increased as the index
        information is replicated along with the data. </li>
      </ul></dd>
    </dlentry>
   </dl>
  <dl>
   <dlentry>
    <dt>Access Control</dt>
    <dd>Configure the <wintitle>Access Control </wintitle>option in the same way for the Couchbase
      or Memcached bucket. <p>Configure the ports that the clients use to communicate with the data
       bucket and a password. </p><p>To use the TCP standard port (11211), the first bucket you
       create can use this port without requiring SASL authentication. For each subsequent bucket,
       you must specify the password to be used for SASL authentication and a binary password for
       the client communication. </p><p>To use a dedicated port, select the radio button and enter
       the port number. Using a dedicated port supports both the text and binary client protocols
       and does not require authentication. </p><note type="note">When defining a port on a bucket,
       the server automatically starts up a copy of Moxi on the servers and exposes it on that port.
       This supports the ASCII memcached protocol. However, Couchbase discourages using Moxi in this
       way. If needed, install a client-side Moxi on the application servers and connect to this
       bucket wither with the <option>port</option> or <option>password</option> option.
       </note><p>It is recommended to define a password on a bucket, which requires a client that
       supports the binary memcached protocol with SASL. All Couchbase client libraries and
       client-side Moxi provide the SASL support. </p></dd>
   </dlentry>
  </dl>
  
  
   
  <section>
   <title>Editing existing Couchbase buckets</title>
   <p>The bucket name cannot be modified. To delete the configured bucket entirely, click the
    <uicontrol>Delete</uicontrol> button.</p>
   <p>You can edit a number of settings for an existing Couchbase bucket in the Couchbase Web
    Console:</p>
   
  <dl>
   <dlentry>
    <dt>Access Control</dt>
    <dd>This option can be modified including the standard port/password or custom port
      settings.</dd>
   </dlentry>
  </dl> 
   <dl>
    <dlentry>
     <dt>Auto-Compaction</dt>
     <dd>The Auto-compaction settings, including enabling the override of the default auto-compaction
      settings and bucket-specific auto-compaction.</dd>
   
     <dd>Both data and index information stored on disk can become fragmented. Compaction rebuilds
      the stored data in the index to reduce the fragmentation of the data. You can opt to override
      the default auto compaction settings for this individual bucket. </dd>
     <dd>Default settings are configured through the <wintitle>Settings</wintitle> menu. If you
      override the default auto-compaction settings, you can configure the same parameters, but the
      limits will affect only this bucket. </dd>
    </dlentry>
   </dl>
   <dl>
    <dlentry>
     <dt>Flush</dt>
     <dd>To enable the operation for a bucket, select the <uicontrol>Enable</uicontrol> check box.
      The default for the flush operation is to be disabled. </dd>
     <dd>You can enable or disable support for the <uicontrol>Flush</uicontrol> command.</dd>
    </dlentry>
   </dl> <dl>
   <dlentry>
    <dt>Memory Size</dt>
    <dd>This is the amount of memory allocated for one bucket on each node, not the total size of
      the buckets across all nodes. </dd>
     <dd>The memory size can be modified providing you have non-allocated space in your Cluster
      configuration. You can reduce the amount of memory allocated to a bucket if that space is not
      already in use.</dd>
   </dlentry>
  </dl> 
 
 
   
  
  
  </section>
  <section>
   <title>Editing existing Memcached buckets</title>
   <note type="note">Memcached buckets do not have the Auto-compaction settings.</note>
   <p>The bucket name cannot be modified.  To delete the configured bucket entirely, click the
     <uicontrol>Delete</uicontrol> button.</p>
   <p>For Memcached buckets, you can edit the following settings:</p>
   <dl>
    <dlentry>
     <dt>Access Control</dt>
     <dd>This option can be modified including the standard port/password or custom port settings.</dd>
    </dlentry>
   </dl>
   <dl>
    <dlentry>
     <dt>Flush</dt>
     <dd>To enable the operation for a bucket, select the <uicontrol>Enable</uicontrol> check box.
      The default for the flush operation is to be disabled. </dd>
     <dd>You can empty a Memcached bucket of all the stored cached information by using the
       <uicontrol>Flush</uicontrol> button.</dd>
    <dd><note type="attention">Using the <uicontrol>Flush</uicontrol> button removes all the objects stored in
      the Memcached bucket. Using this button on active Memcached buckets may delete important
      information.</note>
     </dd> 
    </dlentry>
   </dl>


 
   <dl>
    <dlentry>
     <dt>Memory Size</dt>
     <dd>This is the amount of memory allocated for one bucket on each node, not the total size of
      the buckets across all nodes. </dd>
     <dd>For Memcached buckets, memory size is fixed at creation time and cannot be modified. Total
      bucket memory will change as nodes are added/removed. <note type="attention">Changing the size
       of a memcached bucket will erase all the data in the bucket and recreate it, resulting in
       loss of all stored data for existing buckets. </note></dd>
    </dlentry>
   </dl>
 
 
  </section>
  
 
 </conbody>
</concept>
