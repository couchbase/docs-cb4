<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE concept PUBLIC "-//OASIS//DTD DITA Concept//EN" "concept.dtd">
<concept id="concept_iqn_nhq_44">
 <title>Atomic operations</title>
	<shortdesc>The Go SDK supports several operations that allow one-step, atomic changes to documents.
		These operations include <codeph>counter</codeph>, <codeph>prepend</codeph> and
			<codeph>append</codeph> functions.</shortdesc>
 <conbody>
		
		<section>
			<title>Counter operation</title>
			<p>The <codeph>Counter()</codeph> method enables you to implement an atomic counter as a
				Couchbase document. You can either execute this operation against a previously
				created document or create a new document by using the <codeph>initial</codeph>
				parameter.</p>
		<p>The following example shows how to use the <codeph>Counter()</codeph> method to increment your
				counter and get the value back:</p>
		<p>
			<codeblock outputclass="language-go">myBucket, _ := myCluster.OpenBucket("default", "")
myBucket.Insert("document_name", "10", 0)
value, _, _ := myBucket.Counter("document_name", 1, 0, 0)</codeblock>
		</p>
			<p>The following example shows how to use the <codeph>Counter()</codeph> method to decrement your
				counter and get the value back:</p>
			<p>
				<codeblock outputclass="language-go">myBucket, _ := myCluster.OpenBucket("default", "")
myBucket.Insert("document_name", "10", 0)
value, _, _ := myBucket.Counter("document_name", -1, 0, 0)</codeblock>
			</p>
			<p>You can additionally perform a counter operation with an initial value specified. In this
				case, the document will be created if it does not exist. The
					<codeph>initial</codeph> parameter will do nothing if the document already
				exists.<codeblock outputclass="language-go">myBucket, _ := myCluster.OpenBucket("default", "")
value, _, _ := myBucket.Counter("document_name", 1, 10, 0)</codeblock></p>
			<note>If a new counter document is created by using the <codeph>initial</codeph> parameter, the
				counter is set to the value of <codeph>initial</codeph>, not
					<codeph>initial+delta</codeph>. </note>
		
		</section>

 	<section>
 		<title>Append and prepend operations</title>
			<p>The append and prepend operations allow you to perform a binary append or prepend to
				a Couchbase document.</p>
				
				<note>This operation is performed without any consideration for the data type, thus appending a
				JSON document to a JSON document will result in an invalid object (for instance:
					<codeph>{}{}</codeph>).</note>
 		
			<p>The following is an example of how to use the <codeph>append()</codeph> and
					<codeph>prepend()</codeph> methods to add further text to an already existing
				document:</p><codeblock outputclass="language-go">myBucket, _ := myCluster.OpenBucket("default", "")
myBucket.Insert("document_name", "Beautiful", 0)
myBucket.Append("document_name", " World!")
myBucket.Prepend("document_name", "Hello ")
// Document content is now "Hello Beautiful World!".</codeblock>
 	</section>
 	
	</conbody>
</concept>
