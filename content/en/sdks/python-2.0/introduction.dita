<?xml version='1.0' ?><!DOCTYPE topic PUBLIC "-//OASIS//DTD DITA 1.1 Topic//EN" "http://docs.oasis-open.org/dita/v1.1/OS/dtd/topic.dtd">
<topic id="py-intro">
	<title>Python SDK 2.0</title>
	<shortdesc>The Couchbase Python client allows you to connect to a Couchbase cluster from
		Python. It is written as a fast C extension with support for a traditional
		synchronous API, as well as gevent and twisted APIs for high performance
		asynchronous programming.</shortdesc>
<body>        
	        <note type="important">This document is for the 2.x version of the Python SDK. If you are
            not using the 2.x version, please refer to the <xref
                href="http://docs.couchbase.com/couchbase-sdk-python-1.2/" format="html"
                scope="external">Python SDK 1.2 documentation</xref>.</note>


		<p>To download the Python client, go to the <xref
				href="http://developer.couchbase.com/documentation/server/4.0/sdks/python-2.0/download-links.html#download-and-apiref"
				format="html" scope="external">download page.</xref></p>

		<p>Here's a sampling of what you can do with the Couchbase Python SDK:</p>
		<section>
			<title>Connecting</title>
			<p>To connect to a bucket, just import the <apiname>Bucket</apiname> class from the
					<codeph>couchbase.bucket</codeph> package. The <apiname>Bucket</apiname> object
				represents a connection to a Couchbase bucket. To instantiate the bucket object, pass it
				the location of the cluster and the bucket you with to connect to. The following shows
				how to connect to a bucket on <codeph>localhost</codeph>.</p>
			<codeblock outputclass="language-python">from couchbase.bucket import Bucket
bucket = Bucket('couchbase://localhost/default')</codeblock>
		</section>
		<section>
			<title>Operations</title>
			<p>In most cases, you perform operations by invoking the relevant method while passing the key,
				any data and meta information that goes with it. Operations return a
					<apiname>Result</apiname> object containing the value and other information about the
				item.</p>
			<p>Here is an example of performing a get operations:</p>
			<codeblock outputclass="language-python">rv = bucket.get('foo')
print rv.value</codeblock>
			<p>Additionally, sometimes more information beyond the key is needed for an operation, as
				seen here:</p>
			<codeblock outputclass="language-python">bucket.insert('some_key', { 'some': 'value' })</codeblock>
		</section>
    <section><title>Performing N1QL Queries</title>Couchbase N1QL queries are performed by
        creating a <apiname>N1QLQuery</apiname> object and passing that to the
        <apiname>n1ql_query()</apiname>
        method:<codeblock>from couchbase.n1ql import N1QLQuery
query = N1QLQuery("SELECT airportname, city, country FROM `travel-sample `
                  "WHERE type=\"airport\" AND city=my_city", my_city="Reno")
for row in bucket.n1ql_query(query):
    print row</codeblock></section>
		<section>
			<title>Performing MapReduce Queries</title>
			<p>In addition to the basic operations that are available, more methods are provided to perform
				queries against your data. These queries allow you to ask questions like "What beers
				start with A?" rather than simply "Give me the beer that is called Aaas_Frankl." This is
				possible through the use of the Couchbase MapReduce views engine. The following is an
				example of performing a view query:</p>
			<codeblock outputclass="language-python">for row in bucket.query('beer', 'by_name', limit=3):
    print row</codeblock>
		</section>

	</body>

</topic>
