<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE concept PUBLIC "-//OASIS//DTD DITA Concept//EN" "concept.dtd">
<concept id="concept_ff3_2jq_44">
 <title>Setting up logging</title>
	<shortdesc>The Python SDK provides log messages via the C library. Logging may be configured either
        directly from within the C library (via an environment variable), or using Python's standard
            <codeph>logging</codeph> module.</shortdesc>
 <conbody>
  <p> Read more about the <codeph>LCB_LOGLEVEL</codeph> environment variable at  (from the C library
            documentation).</p>
        <section><title>Enabling Logging via Environment Variables</title>This option is recommended
            for quick one-off debugging to determine what the library is doing.</section>
        <section>Enabling logging via environment variables will simply have the internal C library
            log to the standard error stream (<codeph>stderr</codeph>). Set
                <codeph>LCB_LOGLEVEL</codeph> environment variable to a number between 1 to 5 (with
            5 being the most verbose). See <xref href="../c-2.4/logging.dita#concept_ff3_2jq_44"/>
            for more information.</section>
        <section><title>Enabling Logging using Python's <codeph>logging</codeph> module</title>This
            option is recommended for applications already using Python's <codeph><xref
                    href="https://docs.python.org/2/library/logging.html" format="html"
                    scope="external">logging</xref></codeph> module. To enable logging, call the
                <codeph>couchbase.enable_logging()</codeph> function. This will make the C library
            call into Python's logging routines. The <i>root</i> couchbase logger is called
                <codeph>couchbase</codeph>.<codeblock spectitle="Using the logging module" outputclass="language-python">import logging
import sys

import couchbase
from couchbase.bucket import Bucket

logging.basicConfig(stream=sys.stderr, level=logging.DEBUG)
couchbase.enable_logging()

c = Bucket('couchbase://localhost/default')
c.upsert('key', ['value'])</codeblock><screen>INFO:couchbase:Initializing Couchbase logging. lcb_version=('2.4.7', 132103)
DEBUG:couchbase.confmon:[0] Preparing providers (this may be called multiple times) (L:89)
DEBUG:couchbase.confmon:[0] Provider FILE is DISABLED (L:99)
DEBUG:couchbase.confmon:[0] Provider CCCP is ENABLED (L:96)
DEBUG:couchbase.confmon:[0] Provider HTTP is ENABLED (L:96)
DEBUG:couchbase.confmon:[0] Provider MCRAW is DISABLED (L:99)
DEBUG:couchbase.confmon:[0] Start refresh requested (L:292)
DEBUG:couchbase.confmon:[0] Current provider is CCCP (L:271)
INFO:couchbase.cccp:[0] Requesting connection to node localhost:11210 for CCCP configuration (L:118)
DEBUG:couchbase.lcbio_mgr:[0] &lt;localhost:11210> (HE=0x7fd3a3811e00) Creating new connection because none are available in the pool (L:416)
DEBUG:couchbase.lcbio_mgr:[0] &lt;localhost:11210> (HE=0x7fd3a3811e00) Starting connection on I=0x7fd3a2420db0 (L:321)
INFO:couchbase.connection:[0] &lt;localhost:11210> (SOCK=0x7fd3a2701fd0) Starting. Timeout=2000000us (L:441)
DEBUG:couchbase.connection:[0] &lt;localhost:11210> (SOCK=0x7fd3a2701fd0) Got event handler for new connection (L:258)
DEBUG:couchbase.connection:[0] &lt;localhost:11210> (SOCK=0x7fd3a2701fd0) Scheduling asynchronous watch for socket. (L:305)
DEBUG:couchbase.connection:[0] &lt;localhost:11210> (SOCK=0x7fd3a2701fd0) Got event handler for new connection (L:258)
INFO:couchbase.connection:[0] &lt;localhost:11210> (SOCK=0x7fd3a2701fd0) Connected  (L:116)</screen></section>
 </conbody>
</concept>
