<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE concept PUBLIC "-//OASIS//DTD DITA Concept//EN" "concept.dtd">
<concept id="concept_iqn_nhq_44">
	<title>Atomic operations</title>
	<shortdesc>The C SDK supports operations that allow one-step, atomic changes to
		documents.</shortdesc>
	<conbody>

		<section>
			<title>Counter operations</title>
			<p>The counter method permits you to implement an atomic counter as a Couchbase document. These
				operations expect and are stored as UTF-8 encoded string representations of the number.
				You can either execute this operation against a previously created document, or create
				one if it does not exist using the <codeph>initial</codeph> and <codeph>create</codeph>
				fields. Keep in mind that <codeph>initial</codeph> will do nothing if the document
				already exists and that if the document needs to be created, it will be set to
					<codeph>initial</codeph>, not <codeph>initial+delta</codeph>.
				<codeblock outputclass="language-c">lcb_arithmetic_cmd_t cmd = { 0 };
const lcb_arithmetic_cmd_t *cmdlist = &amp;cmd;
cmd.v.v0.key = "counter";
cmd.v.v0.nkey = strlen("counter");
cmd.v.v0.delta = 1; // Increment by one
cmd.v.v0.initial = 42; // Set to 42 if it does not exist
cmd.v.v0.create = 1; // Create item if it does not exist
lcb_error_t err = lcb_arithmetic(instance, NULL, 1, &amp;cmdlist);</codeblock></p>
		</section>
		<section>
			<title>Appending and prepending to documents</title>
			<p>Documents can also be appended or prepended to. These methods provide an efficient way to add
				to the existing document without fetching the entire document over the network,
				modifying it, and then submitting it.</p>
			<note type="warning">Appending or prepending data to documents might invalidate the JSON content. Use these operations only for documents that you do not intend
				to query using views.</note>
			
			<p>In libcouchbase, appending and prepending is done using the <apiname>lcb_store()</apiname>
				operation. When appending or prepending data, the <codeph>bytes</codeph> field describes
				the buffer of data to add to the existing value (either at the beginning or at the end,
				for prepend and append respectively). The following constants can be used in the
				operation field for these modifications: <ul id="ul_gsc_w3j_p4">
					<li><option>LCB_APPEND</option></li>
					<li><option>LCB_PREPEND</option></li>
				</ul></p>
			<p>For more information about using <apiname>lcb_store()</apiname>, see <xref
					href="updating.dita#concept_bjc_nhq_44" />.</p>
		</section>
	</conbody>
	
</concept>
