<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE concept
  PUBLIC "-//OASIS//DTD DITA Concept//EN" "concept.dtd">
<concept id="topic_11_8"  xml:lang="en-US">
  <title>UPDATE</title>
  <conbody>
    <p>UPDATE replaces a document that already exists with updated values. </p>
    <p ><i>update:</i></p>
    <codeblock>UPDATE keyspace-ref [use-keys-clause] [set-clause] [unset-clause] [where-clause] [limit-clause] [returning-clause]
    </codeblock>
    
  <p ><i>set-clause:</i></p>
    <codeblock>SET path = expression [update-for] [ , path = expression [update-for] ]*
    </codeblock>
    <p><i>update-for:</i></p>
    <codeblock>FOR variable (IN | WITHIN) path  (, variable (IN | WITHIN) path)* [WHEN condition ] END  
    </codeblock>
    
<p><i>unset-clause:</i></p>
    
<codeblock>UNSET path [update-for] (, path [ update-for ])*  
</codeblock>
    <p><i>keyspace-ref:</i> Specifies the keyspace for which to update the document. </p>
    <p>You can add an optional namespace-name to the keyspace-name in this way: </p>
    <p><ph xtrc="">namespace-name:keyspace-name</ph>. </p>
    <p><i>use-keys-clause:</i>Specifies the keys of the data items to be updated. Optional. Keys can
      be any expression.</p>
     <p><i>set-clause:</i>Specifies the value for an attribute to be changed. </p>
    <p><i>unset-clause: </i>Removes the specified attribute from the document. </p>
    <p><i>update-for:</i> The update for clause uses the FOR statement to iterate over a nested array and SET or 
      UNSET the given attribute for every matching element in the array.</p>
    
    <p><i>where-clause:</i>Specifies the condition that needs to be met for data to be updated.
      Optional.</p>
    <p><i>limit-clause:</i>Specifies the greatest number of objects that can be updated. This clause 
      must have a non-negative integer as its upper bound. Optional.</p>
    <p><i>returning-clause:</i>Returns the data you updated as specified in the result_expression. </p>
  

<p>Example:</p>
<p>The following statement changes the "type" of the product, "odwalla-juice1" to
      "product-juice".</p>
<codeblock>UPDATE product USE KEYS "odwalla-juice1‚Äù SET type = "product-juice" RETURNING product.type 

"results": [
        {
            "type": "product-juice"
        }
    ]
 
</codeblock>
    
    <p>This statement removes the "type" attribute from the "product" keyspace for the document with the "odwalla-juice1" key.</p>
  <codeblock>UPDATE product USE KEYS "odwalla-juice1" UNSET type RETURNING product.*

"results": [
        {
            "productId": "odwalla-juice1",
            "unitPrice": 5.4
        }
    ]
  </codeblock>
 <p>This statement unsets the "gender" attribute in the "children" array for the document with the
      key, "dave" in the "tutorial" keyspace.</p>
  <codeblock>UPDATE tutorial t USE KEYS "dave" UNSET c.gender FOR c IN children END RETURNING t

"results": [
        {
            "t": {
                "age": 46,
                "children": [
                    {
                        "age": 17,
                        "fname": "Aiden"
                    },
                    {
                        "age": 2,
                        "fname": "Bill"
                    }
                ],
                "email": "dave@gmail.com",
                "fname": "Dave",
                "hobbies": [
                    "golf",
                    "surfing"
                ],
                "lname": "Smith",
                "relation": "friend",
                "title": "Mr.",
                "type": "contact"
            }
        }
    ]  
  </codeblock>
  
  </conbody>
</concept>