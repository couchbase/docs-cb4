<?xml version="1.0" encoding="utf-8"?>
<!DOCTYPE topic
  PUBLIC "-//OASIS//DTD DITA Topic//EN" "topic.dtd">
<topic xml:lang="en-us" id="topic3243">
	<title>Querying data</title>
	<body>
		<p>To issue a query to Elasticsearch, you send a request in the form of a simple Lucene-based
			string or you can use the more extensive JSON-based query syntax, DSL. When you query
			Elasticsearch, you send it as a REST-ful request using any REST client, or as a URI in a
			browser:</p>
		<codeblock><codeph>curl http://localhost:9200/beer-sample/_search?q=blueberry
</codeph></codeblock>
		<p>Elasticsearch will return a result set as JSON as follows:</p>
		<codeblock><codeph>{"took":2,
"timed_out":false,
....
        "hits" : 8,
    ....
        {
        ....
        "_index":"beer-sample",
        "_type":"couchbaseDocument",
        "_id":"dark_horse_brewing_co-tres_blueberry_stout",
        "_score":1.8963704,
        "_source": ....
        "
        .....
        "_index":"beer-sample",
        "_type":"couchbaseDocument",
        "_id":"yegua_creek_brewing_dallas-blueberry_blonde",
        "_score":1.2890494,
        "_source": ....
        ....
        }
}
</codeph></codeblock>
		<p>For the sake of brevity we show just the first two results out of a result set containing
			eight hits. Each item has a “_score” field which Elasticsearch uses to indicate the level
			of relevance for search hits. Notice that <codeph>source</codeph> attribute will contain
			only metadata saved by Elasticsearch rather than the entire document contents. We do this
			because Couchbase Server provides incredibly fast access to the documents. So we use
				<codeph>_id</codeph> sent back by Elasticsearch to retrieve the document out of
			Couchbase Server. To start we view the document using Couchbase Web Console:</p>
		<ol>
			<li>Copy one of the document IDs returned by Elasticsearch, for instance
					<codeph>dark_horse_brewing_co-tres_blueberry_stout</codeph>.</li>
			<li>Click on the Data Bucket tab in Couchbase Web Console. A table appears with a list of
				all Couchbase Buckets.</li>
			<li>Click on the Documents button for the <codeph>beer-sample</codeph> bucket. A table
				appears which displays all documents in the bucket.</li>
			<li>In the Document ID field, paste the document ID
					<codeph>dark_horse_brewing_co-tres_blueberry_stout</codeph>. The JSON document for
				that beer will appear. You can click on the document name to view the entire JSON
					document:<required-cleanup remap="figure"><ph>
						<image href="images/elastic_get_doc.png">
							<alt />
						</image>
					</ph></required-cleanup></li>
		</ol>
		<p>Elasticsearch supports more complex queries using their REST API; for instance you can
			search the beer database for a style ‘lambic’ and for ‘blueberry’ in the description. In
			this case you send a HTTP POST request. The JSON request will appear as follows:</p>
		<codeblock><codeph>{
"query": {
    "query_string": {
            "query_string": {
                "query": "style: lambic AND description: blueberry"
            }
        }
    }
}
</codeph></codeblock>
		<p>Here we scope the search so that it looks for ‘lambic’ in the style field and ‘blueberry’
			in the description and we get this result:</p>
		<codeblock><codeph>{
    "name" : "Wild Blueberry Lager",
    "abv" : 8,
    "brewery_id" : "110f01",
    "description" : "....blueberry aroma....",
    "style" : "Belgian Fruity Lambic"
    ....
}
</codeph></codeblock>
		<p>Rather than using the web console to retrieve a document, you would typically use a
			Couchbase SDK to retrieve the documents the IDs. There are specific methods and functions
			available in each SDK to retrieve one or more items based on the IDs. For more information
			about reading and writing data from an application with Couchbase SDKs, see Couchbase
			Developer Guides.</p>
		<p>For more information about the JSON request and response documents for Elasticsearch, see
				<xref href="http://www.elasticsearch.org/guide/reference/api/search/request-body.html"
				scope="external" format="html">Elastic Search, Search API</xref>.</p>
	</body>
	<related-links>
		<linklist>
			<title>Collected links</title>
			<link href="http://www.elasticsearch.org/guide/reference/api/search/request-body.html"
				scope="external" format="html">
				<linktext>Elastic Search, Search API</linktext>
			</link>
		</linklist>
	</related-links>
</topic>
