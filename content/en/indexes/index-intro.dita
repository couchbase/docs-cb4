<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE concept PUBLIC "-//OASIS//DTD DITA Concept//EN" "concept.dtd">
<concept id="indexes-intro">
	<title>Indexes (old content)</title>
	<shortdesc>Global secondary indexes (GSI) provide high-performance indexing via the indexing
		service.</shortdesc>
	<conbody>
		<p>Global secondary indexes can be used to create primary and secondary indexes.</p>
			
			<!--<p>The primary and secondary indexing
			capabilities of Couchbase Server facilitate:</p>
		<p>
			<ul id="ul_a5d_xvx_tr">
				<li><b>Performance</b>—Index clustering avoids scatter-gather I/O and index working-set
					management </li>
				<li><b>Independent scaling</b>—Index service can scale independently from the key-value
					workload</li>
				<li><b>Partitioning scheme flexibility</b>—Different partitioning schemes  can be used
					for index data (for example, hash, range, or key)</li>
				<li><b>Scan consistency</b>—Time stamps ensure query stability and consistency</li>
			</ul>
		</p>-->


		<section>
			<title>Benefits</title>
			<p>GSI benefits include:</p>

			<ul>
				<li>
					<p><b>Independent partitioning of indexes</b></p>
					<p>Couchbase Server data is distributed among nodes by using vBuckets through smart
						placement among the data service nodes available in the system. Existing MapReduce
						views distribute the index data aligned with the data service data and that is
						still available for use. New indexes can be independently partitioned. With the
						new global secondary indexes (GSI), developers and administrators can create
						indexes on a given index service node and achieve better scalability and load
						isolation where a mix of heavy index maintenance and querying is required.  </p>

				</li>

				<li>
					<p><b>Filtering for efficient indexing</b>
					</p>
					<p>The new indexes let you specify a simple filter by using the WHERE clause. The filtering
						provides the ability to index only the relevant data reducing the size and
						processing cost of the index.</p>
				</li>

				<li>
					<p><b>Efficient index building</b></p>
					
					<p>By using the deferred build option, you can efficiently create multiple indexes at the same
						time. When indexes are created one by one, the indexer must scan the bucket data
						each time an index is created. With the deferred build option, the indexer gathers
						the metadata for the index and then pauses until you issue a build index command
						for one or more indexes. When the index operation resumes, it scans the bucket
						data once and then creates all of the requested indexes. </p>
				</li>
			</ul>

		</section>



	</conbody>
</concept>
