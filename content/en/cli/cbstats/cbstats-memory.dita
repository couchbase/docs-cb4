<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE reference PUBLIC "-//OASIS//DTD DITA Reference//EN" "reference.dtd">
<reference xml:lang="en-us" id="cbstats-memory">
	<title><cmdname>memory</cmdname></title>
	<shortdesc>Gets memory-related statistics.</shortdesc>
	<refbody>
		
		<section><title>Syntax</title>
			<p>Request syntax:</p>
			<codeblock>cbstats [host]:11210 memory</codeblock>
		</section>	<section><title>Description</title>
		<p>This command provides various memory-related statistics including the ones from <codeph>tcmalloc</codeph>.</p>
			
			<note type="note"><codeph>tcmalloc</codeph> stats are not available on operating systems (such as Windows) that do not
				support <codeph>tcmalloc</codeph>.</note>
			
		<table>
			<tgroup cols="2">
					<colspec colname="col1" colwidth="1*"/>
					<colspec colname="col2" colwidth="2*"/>
					<thead>
						<row>
							<entry>Stat</entry>
							<entry>Description</entry>
						</row>
					</thead>
					<tbody>
						<row>
							<entry><codeph>mem_used</codeph> (deprecated)</entry>
							<entry>Engine’s total memory usage</entry>
						</row>
						<row>
							<entry><codeph>bytes</codeph></entry>
							<entry>Engine’s total memory usage</entry>
						</row>
						<row>
							<entry><codeph>ep_kv_size</codeph></entry>
							<entry>Memory used to store item metadata, keys and values, no matter
								the vbucket’s state. If an item’s value is ejected, this stat will
								be decremented by the size of the item’s value.</entry>
						</row>
						<row>
							<entry><codeph>ep_value_size</codeph></entry>
							<entry>Memory used to store values for resident keys.</entry>
						</row>
						<row>
							<entry><codeph>ep_overhead</codeph></entry>
							<entry>Extra memory used by transient data like persistence queue,
								replication queues, checkpoints, etc. </entry>
						</row>
						<row>
							<entry><codeph>ep_max_size</codeph></entry>
							<entry>Max amount of data allowed in memory</entry>
						</row>
						<row>
							<entry><codeph>ep_mem_low_wat</codeph></entry>
							<entry>Low water mark for auto-evictions</entry>
						</row>
						<row>
							<entry><codeph>ep_mem_high_wat</codeph></entry>
							<entry>High water mark for auto-evictions</entry>
						</row>
						<row>
							<entry><codeph>ep_oom_errors</codeph></entry>
							<entry>Number of times unrecoverable OOMs that happened while processing
								operations,</entry>
						</row>
						<row>
							<entry><codeph>ep_tmp_oom_errors</codeph></entry>
							<entry>Number of times temporary OOMs that happened while processing
								operations.</entry>
						</row>
						<row>
							<entry><codeph>ep_mem_tracker_enabled</codeph></entry>
							<entry>If smart memory tracking is enabled</entry>
						</row>
						<row>
							<entry><codeph>tcmalloc_allocated_bytes</codeph></entry>
							<entry>Engine’s total memory usage reported from tcmalloc.</entry>
						</row>
						<row>
							<entry><codeph>tcmalloc_heap_size</codeph></entry>
							<entry>Bytes of system memory reserved by tcmalloc.</entry>
						</row>
						<row>
							<entry><codeph>tcmalloc_free_bytes</codeph></entry>
							<entry>Number of bytes in free, mapped pages in page heap.</entry>
						</row>
						<row>
							<entry><codeph>tcmalloc_unmapped_bytes</codeph></entry>
							<entry>Number of bytes in free, unmapped pages in page heap. These are
								bytes that have been released back to OS.</entry>
						</row>
						<row>
							<entry><codeph>tcmalloc_max_thread_cache_bytes</codeph></entry>
							<entry>A limit to how much memory TCMalloc dedicates for small
								objects.</entry>
						</row>
						<row>
							<entry><codeph>tcmalloc_current_thread_cache_bytes</codeph></entry>
							<entry>A measure of some of the memory TCMalloc is using for small
								objects.</entry>
						</row>
						<row>
							<entry><codeph>total_allocated_bytes</codeph></entry>
							<entry>Engine’s total memory usage.</entry>
						</row>
						<row>
							<entry><codeph>total_fragmentation_bytes</codeph></entry>
							<entry>Number of fragmentation bytes.</entry>
						</row>
						<row>
							<entry><codeph>total_free_mapped_bytes</codeph></entry>
							<entry>Number of bytes in free, mapped pages.</entry>
						</row>
						<row>
							<entry><codeph>total_free_unmapped_bytes</codeph></entry>
							<entry>Number of bytes in free, unmapped pages.</entry>
						</row>
						<row>
							<entry><codeph>total_heap_bytes</codeph></entry>
							<entry>Number of of bytes in a heap.</entry>
						</row>
					</tbody>
				</tgroup>
		</table>
		</section>
		
		<section><title>Options</title>
			<p>None</p>
			
			
		</section>  	
	
		
		<section><title>Example</title>
			<p>Request</p>
			<codeblock>cbstats 10.5.2.54:11210 memory</codeblock>
	<p><b>Response</b></p>
			
			<codeblock> bytes:                               23716184
 ep_blob_num:                         0
 ep_blob_overhead:                    0
 ep_item_num:                         1364
 ep_kv_size:                          0
 ep_max_size:                         524288000
 ep_mem_high_wat:                     445644800
 ep_mem_low_wat:                      393216000
 ep_mem_tracker_enabled:              true
 ep_oom_errors:                       0
 ep_overhead:                         18344996
 ep_storedval_num:                    0
 ep_storedval_overhead:               0
 ep_storedval_size:                   0
 ep_tmp_oom_errors:                   0
 ep_value_size:                       0
 mem_used:                            23716184
 tcmalloc_current_thread_cache_bytes: 18642072
 tcmalloc_max_thread_cache_bytes:     33554432
 total_allocated_bytes:               211297528
 total_fragmentation_bytes:           33069832
 total_free_mapped_bytes:             5283840
 total_free_unmapped_bytes:           7684096
 total_heap_bytes:                    257335296			</codeblock>
		</section>
	</refbody>
</reference>
