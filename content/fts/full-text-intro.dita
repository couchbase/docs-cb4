<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE topic PUBLIC "-//OASIS//DTD DITA Topic//EN" "topic.dtd">
<topic id="topic_kp4_qth_t5">
  <title>Full Text Search Reference</title>
  <body>
    <p>Couchbase Server Full Text Search (FTS) enables you to create, manage, and query full text
      indexes on JSON documents stored in a Couchbase bucket. <note>The Full Text Search feature is a Developer Preview version. This feature is considered experimental and the UI or the functionality may change. </note></p>
    <p>Full Text Search provides powerful capabilities for querying natural language. There are
      three major benefits that make full text search much easier to use than alternative methods of
      querying, such as a wildcard match in N1QL using LIKE statements: <ul>
        <li>FTS provides a language-aware manner of searching, so users can type
            "<codeph>beauties</codeph>" and find results for "<codeph>beauty</codeph>" - which is
          not easy to do with regular expressions.</li>
        <li>FTS provides scoring (relevance ranking) for results. Text search often returns massive
          numbers of matching documents, which are ordered by score so that users are presented with
          only a small number of results that are most likely to be the ones they are looking for.
          With regular expressions, there’s no practical way to simulate relevance. </li>
        <li>FTS provides fast indexes that support a wide range of possible text searches. Regular
          expressions can be used to build one-off indexes but can’t be used to build indexes that
          support a full range of possible text searches.</li>
      </ul></p>
    <p>Couchbase Server Full Text Search is powered by <xref href="http://www.blevesearch.com/"
      format="html" scope="external">bleve</xref>, a full text
      search and indexing library written in Go. FTS indexes your documents with Bleve and lets you use Bleve’s many powerful query types: <ul>
        <li>Term, Phrase, Match, Match Phrase, Prefix</li>
        <li>Conjunction, Disjunction, Boolean</li>
        <li>Numeric and Date Ranges</li>
        <li>Query String (see <xref
            href="fts-query-types.dita#topic_jfq_fn4_1v/query-string-query-syntax"
          >Syntax</xref>)</li>
      </ul> FTS includes Bleve’s general-purpose analyzers as well as pre-built text analyzers for the following languages: Danish, Dutch, English, Finnish, French, German, Hungarian, Italian, Norwegian, Persian, Portuguese, Romanian, Russian, Sorani, Spanish, Swedish, Thai, and Turkish. </p>
    <p>FTS scores documents for relevance using Bleve’s industry standard <xref
        href="http://en.wikipedia.org/wiki/Tf%E2%80%93idf" format="html" scope="external"
        >tf-idf</xref> scoring with query time boosting.</p>
    <section id="fts-quick-start"><title>Executing Your First Full Text Query</title>
      <p>Full text search is a service that is installed by default and no special installation is
        necessary. Just make sure you enable the service when you provision your Couchbase Server
        node. </p>
      <p><b>Creating Your First Full Text Index</b></p>
      <ol><li>Log in to the Couchbase Web Console, for example, <filepath>http://localhost:8091/</filepath>.
            <p>Click the sidebar tab<menucascade>
              <uicontrol>Search</uicontrol>
            </menucascade>, then click on the <uicontrol>New Full Text Index</uicontrol>
            button.</p><p>A form where you can define your new index configuration is
          displayed.</p></li>
        <li>Each index needs a unique name. Type one in, such as "<userinput>test-index</userinput>". Only alphanumeric characters, hyphens, and underscores are allowed for index names. Also, the first character must be an alphabetic character. </li>
        <li>Choose a bucket from the drop-down list. <p>There are more options, but you can ignore those for now and rely on the default  values.</p></li>
        <li><b>Go!</b> Finally, click the <uicontrol>Create Index</uicontrol> button.<p>You should now see a summary page of your new full text index. The document count shows how many
          documents have been indexed so far.</p></li>
      </ol>
      <p><b>Querying Your Full Text Index</b></p>
      <ol>
        <li>Click on the <uicontrol>Search</uicontrol> tab again.</li>
        <li>From the list, select your newly created index.</li>
        <li>In the query field, type in a query term and press the <uicontrol>Search</uicontrol>
          button.</li></ol>
      <p>Congratulations, you’ve just executed your first full text query!</p>
    </section>
    <section><title>Using the Full Text Search REST API</title>
      <p>You can also use the full text search REST APIs to access your index. For example, if your
        index is named <userinput>myFirstIndex</userinput>, here's how you can use curl to check how
        many documents are indexed:
        <codeblock>curl -u Administrator:password http://localhost:8094/api/index/myFirstIndex/count</codeblock>
        Here's an example of using curl to query the index <userinput>myFirstIndex</userinput>:
        <codeblock>curl -X POST -H "Content-Type: application/json" \
          -d '{"size":10,"query":{"query":"your search string"}}' \
          http://localhost:8094/api/index/myFirstIndex/query</codeblock>
        That's it! You should be ready to explore, or read on to learn more about creating and
        querying indexes.</p>
    </section> 
    <note>Also, you may want to take a look at the following blog that explains how the full text search API (experimental) is expressed using the Java SDK: <xref
            href="http://blog.couchbase.com/2016/february/cbftjavapreview" format="html"
            scope="external"/></note> </body>
  <related-links>
    <link href="../rest-api/rest-fts.dita"></link>
  </related-links>
</topic>
