<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE reference PUBLIC "-//OASIS//DTD DITA Reference//EN" "reference.dtd">
<reference xml:lang="en-us" id="rest-xdcr-data-encrypt">
  <title>Managing XDCR Data Encryption</title>
  <shortdesc>XDCR data encryption provides SSL encryption for data replication. Enterprise Edition only.</shortdesc>
  <refbody>
    <section><title>Description</title>
    <p>The process for configuring XDCR with data encryption  involves
      configuring the XDCR cluster reference with data encryption enabled, providing the SSL
      certificate, and configuring replication.</p></section>
    
    <section><title>HTTP method and URI</title>
    <p>The following summarizes the HTTP methods used for defining XDCR data encryption:</p>
    <table>
      <tgroup cols="3">
          <colspec colname="col1" colwidth="1*"/>
          <colspec colname="col2" colwidth="2.29*"/>
          <colspec colname="col3" colwidth="2.29*"/>
          <thead>
            <row>
              <entry>HTTP method</entry>
              <entry>URI path</entry>
              <entry>Description</entry>
            </row>
          </thead>
          <tbody>
            <row>
              <entry>GET</entry>
              <entry><codeph>/pools/default/remoteClusters</codeph></entry>
              <entry>Gets the destination cluster reference</entry>
            </row>
            <row>
              <entry>POST</entry>
              <entry><codeph>/pools/default/remoteClusters</codeph></entry>
              <entry>Creates a reference to the destination cluster</entry>
            </row>
            <row>
              <entry>POST</entry>
              <entry><codeph>/pools/default/remoteClusters/[Name]</codeph></entry>
              <entry>Modifies the destination cluster reference</entry>
            </row>
            <row>
              <entry>DELETE</entry>
              <entry><codeph>/pools/default/remoteClusters/[Name]</codeph></entry>
              <entry>Deletes the reference to the destination cluster.</entry>
            </row>
          </tbody>
        </tgroup>
    </table>
    </section>
    
    
    <section><title>Retrieving certificates</title>
      <p>To retrieve the SSL certificate from the destination cluster to the source cluster use the
        following HTTP method and URI:</p>
      <p><b>HTTP method and URI</b></p>
      
      <codeblock outputclass="language-bash">GET /pools/default/certificate</codeblock>
      
      <p><b>Syntax</b></p>
      <codeblock outputclass="language-bash">curl http://[remoteHost]:[port]/pools/default/certificate</codeblock>
      
      <p><b>Example</b></p>
      <codeblock outputclass="language-bash">curl http://remoteHost:8091/pools/default/certificate &gt; ./remoteCert.pem</codeblock>
    </section>
    
    
    <section><title>Regenerating certificates</title>
      <p>To regenerate a certificate on a destination cluster, use the following HTTP method and URI:</p>
      <p><b>HTTP method and URI</b></p>
      <codeblock outputclass="language-bash">POST /controller/regenerateCertificate</codeblock>
      
      <p><b>Example</b></p>
      <codeblock outputclass="language-bash">curl -X POST http://Administrator:asdasd@remoteHost:8091/controller/regenerateCertificate</codeblock>
    </section>


    <section>
      
      <title>
        Configuring XDCR with data encryption
      </title>
      
      <p>
        A POST to <codeph>/pools/default/remoteClusters</codeph> creates the XDCR cluster reference from the
        source cluster to the destination cluster. The <codeph>secureType</codeph> parameter can be:
      </p>
      
      <ul>
        <li>
          <codeph>none</codeph>: The connection is not secured.
          
          <p>
            
          </p>
        </li>
        
        <li>
          <codeph>half</codeph>: Only the password is encrypted. If the destination cluster is running Couchbase
          Enterprise Server verion 5.5 or later, SCRAM-SHA is used, and no certificate is required. If the
          destination cluster is running a pre-5.5 version of Couchbase Enterprise Server, TLS is used, and
          the root certificate of the destination cluster must be provided. In both cases, the username and
          password of the destination cluster's Full, Cluster, or XDCR Administrator must be provided. If
          specified, the root certificate of the destination cluster is ignored if the destination cluster is
          running a pre-5.5 version of Couchbase Enterprise Edition.
          
          <p>
            
          </p>
        </li>
        
        <li>
          <codeph>full</codeph>: Both password and data are encrypted. TLS is used. This requires either:
          
          <ul>
            <li>The username and password of the destination cluster's Full, Cluster, or XDCR Administrator;
              plus the root certificate of the destination cluster.
              
              <p>
                
              </p>
            </li>
            
            <li>
              The root certificate of the destination cluster; plus the client certificate and client private
              key of the local cluster.
              <p>
                
              </p>
            </li>
          </ul>
        </li>
      </ul>
      
      <p><b>HTTP method and URI</b></p>
        <p>The following HTTP method and URI modifies the destination cluster reference.</p>
          <codeblock>PUT /pools/default/remoteClusters</codeblock>
            
            
      <p><b>Syntax</b></p>
            
      <codeblock outputclass="language-bash">curl -X POST  -u Admin:myPassword
  http://localHost:port/pools/default/remoteClusters 
  -d name=&lt;clusterName&gt;             // Remote cluster name
  -d hostname=&lt;host&gt;:&lt;port&gt;       // FQDN of the remote host.
  -d username=&lt;adminName&gt;           // Remote cluster Admin name
  -d password=&lt;adminPassword&gt;       // Remote cluster Admin password
  -d encryptionType=["half"|"full"] --data-urlencode "certificate=$(cat remoteCert.pem)"
 // set to "half" to just encrypt log-in details</codeblock>
            
            <p><b>Example 1</b></p>
      
      <p>
        This secures password and data, by means of TLS.
      </p>
            
      <codeblock outputclass="language-bash">curl -u Administrator:password -v -X POST http://10.142.180.1:8091/pools/default/remoteClusters 
-d 'name=remoteName' \
-d 'hostname=10.142.180.101:8091' \
-d 'username=remoteAdministrator' \
-d 'password=remotePassword' \
-d 'encryptionType=full' \
--data-urlencode "certificate=$(cat ./cert/remoteClusterRootCert.pem)"</codeblock>
      
      <p>
        <b>Example 2</b>
      </p>
      
      <p>
        This secures password only, by means of SCRAM-SHA.
      </p>
      
      <codeblock outputclass="language-bash">curl -u Administrator:password -v -X POST http://10.142.180.1:8091/pools/default/remoteClusters \
-d 'name=remoteName' \
-d 'hostname=10.142.180.101:8091' \
-d 'username=remoteAdministrator' \
-d 'password=remotePassword' \
-d 'secureType=half'</codeblock>
      
      <p>
        The response obtained from successfully securing the password with SCRAM-SHA is as follows:
      </p>
      
      <codeblock outputclass="language-bash">{
"deleted": false,
"demandEncryption": true,
"encryptionType": "half",
"hostname": "10.142.180.101:8091",
"name": "remoteName",
"secureType": "half",
"uri": "/pools/default/remoteClusters/remoteName",
"username": "remoteAdministrator",
"uuid": "9b323738eb48104a72d15e7230911358",
"validateURI": "/pools/default/remoteClusters/remoteName?just_validate=1"
}</codeblock>
    
    </section>
    
    
    <section><title>Disabling data encryption</title>
      
      <p>To modify the XDCR configuration so that SSL
        data encryption is disabled, execute a PUT from the source cluster to the destination
        cluster with <codeph>demandEncryption=0</codeph>.</p>
      
      <p><b>HTTP method and URI</b></p>
      <codeblock>PUT /pools/default/remoteClusters</codeblock>
      
      <p><b>Example</b></p>
      <codeblock outputclass="language-bash">curl -X PUT  -u myAdmin:myPassword
  http://192.168.0.1:8091/pools/default/remoteClusters/ \
  -d &apos;name=remoteName&apos; \ 
  -d &apos;hostname=10.3.4.187:8091&apos;\
  -d &apos;username=remoteAdmin&apos; -d &apos;password=remotePassword&apos; \
  -d &apos;demandEncryption=0&apos;</codeblock>
    </section>
    
  </refbody>
</reference>
