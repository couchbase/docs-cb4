<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE reference PUBLIC "-//OASIS//DTD DITA Reference//EN" "reference.dtd">
<reference xml:lang="en-us" id="rest-bucket-create">
	<title>Creating and Editing Buckets</title>
	<shortdesc>To create and edit buckets, use the <codeph>POST</codeph> operation with the 
			<codeph>/pools/default/buckets</codeph> URI.
			</shortdesc>
	<refbody>
		<section><title>Description</title>
			<p>Buckets are created and edited with a <codeph>POST</codeph> sent to the REST URI endpoint for buckets
				in a cluster. This can be used to create either a Couchbase or a Memcached type bucket.
				Bucket names cannot have a leading underscore.</p>
			
			<p>This endpoint is also used to get a list of buckets that exist for a cluster.</p>
			<note type="important"> When editing bucket properties, be sure to  specify all bucket properties.
				If a bucket property is not specified (whether or not you are changing the existing
				value), Couchbase Server may reset the property to the default. Even if you do not
				intend to change a certain property, re-specify the existing value to avoid this
				behavior.</note>
			<p>The REST API returns a successful response when preliminary files for a data bucket are created
				on one node. However, if a multi-node cluster is implemented, bucket creation may not
				have completed for all nodes when a response is sent. Therefore, it is possible that the
				bucket is not available for operations immediately after this REST call successful
				returns.</p>
			<p>To verify that a bucket is available, try to read a key from the bucket. If a ‘key not found’
				error is received or the document for the key is returned, then the bucket exists and is
				available to all nodes in a cluster. Key requests can be issued via a Couchbase Server SDK with
				any node in the cluster. See the <i>Couchbase Server Developer Guide</i> for more
				information.</p>
		</section>
		
		<section><title>HTTP method and URI</title>
			<codeblock>POST /pools/default/buckets</codeblock>
		
		<ul>
			<li>Request data - List of payload parameters for the new bucket</li>
			<li>Response data - JSON of the bucket confirmation or an error condition</li>
			<li>Authentication required - Yes </li>
		</ul>
		
		
		<p>Parameters for creating buckets:</p>

		<table>
			<title>Create bucket parameters</title>
			<tgroup cols="2">
					<colspec colname="col1" colwidth="1*"/>
					<colspec colname="col2" colwidth="2.37*"/>
					<thead>
						<row>
							<entry>Payload Arguments</entry>
							<entry>Description</entry>
						</row>
					</thead>
					<tbody>
						<row>
							<entry><codeph>authType</codeph></entry>
							<entry>Required parameter. Type of authorization to be enabled for the
								new bucket as a string. Defaults to blank password if not specified.
								"sasl" enables authentication. "none" disables
								authentication.</entry>
						</row>
						<row>
							<entry><codeph>bucketType</codeph></entry>
							<entry>Required parameter. Type of bucket to be created. String value.
								"memcached" configures as Memcached bucket. "couchbase" configures
								as Couchbase bucket. This cannot be changed for a pre-existing bucket.</entry>
						</row>
						<row>
							<entry><codeph>conflictResolutionType</codeph></entry>
							<entry>
								<p dir="ltr">Optional parameter. String value
										'<userinput>lww</userinput>' (timestamp-based conflict
									resolution) or '<userinput>seqno</userinput>' (revision ID-based
									conflict resolution). This parameter defaults to
										'<codeph>seqno</codeph>' if unspecified. This cannot be
									changed once a bucket has been created.</p>
							</entry>
						</row>
						<row>
							<entry><codeph>evictionPolicy</codeph></entry>
							<entry>Optional parameter, a string. Possible values are <codeph>fullEviction</codeph> and
									<codeph>valueOnly</codeph>. The default is
									<codeph>valueOnly</codeph>. This parameter determines what is
								ejected: only the value or the key, value, and all metadata. <note
									type="important"> If you change the ejection policy of a
									pre-existing bucket then it will be restarted, resulting in
									temporary inaccessibility of data while the bucket warms
									up.</note></entry>
						</row>
						<row>
							<entry><codeph>flushEnabled</codeph></entry>
							<entry>Optional parameter. Enables the ‘flush all’ functionality on the
								specified bucket. Boolean. 1 enables flush all support, 0 disables
								flush all support. Defaults to 0.</entry>
						</row>
						<row>
							<entry><codeph>name</codeph></entry>
							<entry>Required parameter. Name for new bucket. This cannot be changed for a pre-existing bucket.</entry>
						</row>
						<row>
							<entry><codeph>parallelDBAndViewCompaction</codeph></entry>
							<entry>Optional parameter. String value. Indicates whether database and
								view files on disk can be compacted simultaneously. Defaults to
								"false."</entry>
						</row>
						<row>
							<entry><codeph>proxyPort</codeph></entry>
							<entry>Required parameter. Numeric. Proxy port on which the bucket
								communicates. Must be a valid network port which is not already in
								use. You must provide a valid port number if the authorization type
								is not SASL.</entry>
						</row>
						<row>
							<entry><codeph>ramQuotaMB</codeph></entry>
							<entry>Required parameter. RAM Quota for new bucket in MB. Numeric. The
								minimum you can specify is 100, and the maximum can only be as great
								as the memory quota established for the node. If other buckets are
								associated with a node, RAM Quota can only be as large as the amount
								memory remaining for the node, accounting for the other bucket
								memory quota.</entry>
						</row>
						<row>
							<entry><codeph>replicaIndex</codeph></entry>
							<entry>Optional parameter. Boolean. 1 enable replica indexes for replica
								bucket data while 0 disables. Default of 1. This cannot be changed for a pre-existing bucket.</entry>
						</row>
						<row>
							<entry><codeph>replicaNumber</codeph></entry>
							<entry>Optional parameter. Numeric. Number of replicas to be configured
								for this bucket. Required parameter when creating a Couchbase
								bucket. Default 1, minimum 0, maximum 3.</entry>
						</row>
						<row>
							<entry><codeph>saslPassword</codeph></entry>
							<entry>Optional Parameter. String. Password for SASL authentication.
								Required if SASL authentication has been enabled.</entry>
						</row>
						<row>
							<entry><codeph>threadsNumber</codeph></entry>
							<entry>Optional Parameter. Integer from 2 to 8. Change the number of
								concurrent readers and writers for the data bucket. <note type="important"> If you change this setting for a pre-existing bucket then it will be restarted, 
									resulting in temporary inaccessibility of data while the bucket warms up.</note></entry>
							
						</row>
						<!--<row>
							<entry><codeph>hlc_drift_ahead_threshold_us</codeph></entry>
							<entry>µs-value</entry>
						</row>
						<row>
							<entry><codeph>hlc_drift_behind_threshold_us</codeph></entry>
							<entry>µs-value</entry>
						</row>-->
					</tbody>
				</tgroup>
		</table>
		
		<p>When creating a bucket, the <codeph>authType</codeph> parameter must be provided:</p>
		<ul>
			<li><p>If <codeph>authType</codeph> is set to <codeph>none</codeph>, then a proxyPort number must be specified.</p></li>
			<li><p>If <codeph>authType</codeph> is set to <codeph>sasl</codeph>, then the <codeph>saslPassword</codeph> parameter may optionally be specified.</p></li>
		</ul>
		<p>The <codeph>ramQuotaMB</codeph> parameter specifies how much memory, in megabytes, is 
			allocate to each node for the bucket. The minimum supported value is 100MB.</p>
		<ul>
			<li><p>If the items stored in a memcached bucket take space beyond the
						<codeph>ramQuotaMB</codeph>, Couchbase Sever typically evicts items on a 
					least-requested-item basis. Couchbase Server might evict other infrequently used
					items depending on object size or on whether or not an item is being referenced.</p></li>
			<li><p>In the case of Couchbase buckets, the system might return temporary failures if the
						<codeph>ramQuotaMB</codeph> is reached. The system tries to keep 25% of
					the available ramQuotaMB free for new items by ejecting old items from occupying
					memory. In the event these items are later requested, they are retrieved
					from disk.</p></li>
		</ul>
		</section>
		
		<section><title>Syntax</title>
			<p>Curl request syntax:</p>
			<codeblock>curl -X POST -u [admin]:[password] 
  -d name=[new-bucket-name] -d ramQuotaMB=[value] -d authType=[none | sasl] 
  -d replicaNumber=[value] 
  -d proxyPort=[proxy-port]   
  http://[localhost]:8091/pools/default/buckets	</codeblock>

		</section>
		
		<section>
			<title>Example</title>
			<p>Curl request example:</p>
			<codeblock>curl -X POST -u Administrator:password \
  -d &apos;name=newbucket&apos; -d &apos;ramQuotaMB=20&apos;0 -d &apos;authType=none&apos; \
  -d &apos;replicaNumber=2&apos; \
  -d &apos;proxyPort=11215&apos; \   
  http://10.5.2.54:8091/pools/default/buckets</codeblock>
			<p>Curl request example to set conflict resolution type:</p>
			<p>Set the parameter <parmname>conflictResolutionType</parmname> to <codeph>lww</codeph> during
				bucket creation. For example, use the following command to create a bucket on the
				source cluster:</p>
			<codeblock>curl -X POST -u Administrator:asdasd http://&lt;ip_address&gt;:8091/pools/default/buckets 
-d name=newBucketSource -d conflictResolutionType=lww 
-d authType=sasl -d ramQuotaMB=4096 
-d saslPassword=passw0rd -d bucketType=couchbase</codeblock>
			<p>Use the following command to create a bucket on the destination cluster:
				<codeblock>curl -X POST -u Administrator:asdasd http://&lt;ip_address&gt;:8091/pools/default/buckets 
-d name=newBucketDestination -d conflictResolutionType=lww 
-d authType=sasl -d ramQuotaMB=4096 
-d saslPassword=passw0rd -d bucketType=couchbase</codeblock></p>
			<p>Raw HTTP request example:</p>
			<p>The parameters for configuring the bucket are provided as payload data. Each
				parameter and value are provided as a key/value pair where each pair is separated by
				an ampersand. Include the parameters setting in the payload of the HTTP
					<codeph>POST</codeph> request.</p>
			<codeblock>POST /pools/default/buckets
HTTP/1.1
Host: 10.5.2.54:8091
Content-Type: application/x-www-form-urlencoded; charset=UTF-8
Authorization: Basic YWRtaW46YWRtaW4=
Content-Length: xx
name=newbucket&amp;ramQuotaMB=20&amp;authType=none&amp;replicaNumber=2&amp;proxyPort=11215</codeblock>
		</section>
			
			<section><title>Response</title>
				<p>If the bucket creation was successful, HTTP response 202 (Accepted) is returned with
					empty content.</p>
				<codeblock>202 Accepted</codeblock>
			</section>
		
		<section><title>Response codes</title>
			
			<p>If the bucket could not be created, because the parameter was missing or incorrect, HTTP
				response 400 returns, with a JSON payload containing the error reason.</p>
			<table>
				<title>Create bucket error codes</title>
				<tgroup cols="2">
					<colspec colname="col1" colwidth="1*"/>
					<colspec colname="col2" colwidth="4*"/>
					<thead>
						<row>
							<entry>Error codes</entry>
							<entry>Description</entry>
						</row>
					</thead>
					<tbody>
						<row>
							<entry>202</entry>
							<entry>Accepted</entry>
						</row>
						<row>
							<entry>400</entry>
							<entry>Bad Request JSON with errors in the form of <codeph>{"errors": {…. }}</codeph>.
								Possible error messages include:<ul>
									<li>name: Bucket with given name already exists </li>
									<li>ramQuotaMB: RAM Quota is too large or too small</li>
									<li>replicaNumber: Must be specified and must be a non-negative
										integer</li>
									<li>proxyPort: port is invalid, port is already in use</li>
								</ul></entry>
						</row>
						<row> 
							<entry>404</entry>
							<entry>Object Not Found</entry>
						</row>
					</tbody>
				</tgroup>
			</table>
			
		</section>
	</refbody>
	

</reference>
