<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE concept PUBLIC "-//OASIS//DTD DITA Concept//EN" "concept.dtd">
<concept id="concept_jgc_ddp_ts">
	<title>Sizing and Other Deployment Considerations</title>
	<shortdesc>To configure the Couchbase Server production environment, follow the recommendations
		about the cluster setup, sizing guidelines, swap space, and client server deployment
		strategies.</shortdesc>
	
	
	<conbody>
		
		
		<p>Proper configuration of I/O subsystems is critical for the optimal performance and
			operation and performance of Couchbase Server. These are the most common best practices recommended for storage configuration:</p>
		
		<section>
			<title>General Recommendations</title>
			<dl>
				<dlentry>
					<dt>Use RAID 1+0 (or RAID 1) if Couchbase bucket replication is 1 or lower</dt>
					<dd>If bucket replicas are set to 2 or higher, the administrator might rely on
						database-level replication for data durability.</dd>
				</dlentry>
			</dl>
			<dl>
				<dlentry>
					<dt><xref
						href="../understanding-couchbase/services-and-indexes/services/services.dita"
							>Multi-Dimensional Scaling (MDS)</xref></dt>
					<dd>MDS functionality allows separation of Index and Query services from the
						traditional Couchbase Server data/view services. With MDS and if it fits
						your use case needs, you can have different disk storage configurations for
						cluster nodes running the Data service and different ones running the Index
						service. For example, nodes running the Index service could have SSD backed
						storage for better performance. Refer to <xref
							href="sizing-general.dita#topic_axp_glg_xs"/> for more details.</dd>
				</dlentry>
			</dl>
			<dl>
				<dlentry>
					<dt>Linux OS</dt>
					<dd>When deploying Couchbase Server on production Linux, you should use either
						the XFS or ext4 filesystem. XFS is preferred because it provides better
						performance when multiple IO streams are accessing the filesystem, such as
						during Data Service compaction or when the working set exceeds the memory
						quota and the data is read from disk.</dd>
				</dlentry>
			</dl>
			<dl>
				<dlentry>
					<dt>Windows OS</dt>
					<dd>For Windows OS, use 64k allocation sizes on NTFS file systems.</dd>
				</dlentry>
			</dl>
		</section>
		
		<section><title>Nodes Running the Data Service</title>
			
			<dl>
				<dlentry>
					<dt> Isolate the data and indexes</dt>
					<dd>For the best performance, isolate the data and indexes (note that these are different from
						the Index Service) at the physical disk level. </dd>
					
				</dlentry>
			</dl>
			<dl>
				<dlentry>
					<dt>Combine different workloads</dt>
					<dd>Combining different workloads (workloads with very different I/O and latency characteristics)
						can have a negative effect on the overall performance. In case of combined workloads, it might
						be appropriate to have objects in different buckets and the files for each bucket on different
						mount points/paths.</dd>
				</dlentry>
			</dl>
			
			
		</section>
	</conbody>
</concept>
