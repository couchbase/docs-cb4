<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE concept PUBLIC "-//OASIS//DTD DITA Concept//EN" "concept.dtd">
<concept id="concept_jgc_ddp_ts">
	<title>Deployment Guidelines</title>
	<shortdesc>Before you install Couchbase Server, follow the recommended deployment guidelines for
		setting up your production environment.</shortdesc>
	
	
	<conbody>
		<table frame="all" rowsep="1" colsep="1" id="table_ccf_wr2_42b">
			<title>Couchbase Server Deployment Guidelines</title>
			<tgroup cols="2">
				<colspec colname="c1" colnum="1" colwidth="1*"/>
				<colspec colname="c2" colnum="2" colwidth="3*"/>
				<thead>
					<row>
						<entry>Guideline</entry>
						<entry>Description</entry>
					</row>
				</thead>
				<tbody>
					<row>
						<entry><b>Sizing</b></entry>
						<entry>Evaluate the overall performance and capacity requirements of your
							deployment, and determine the hardware and other resources.<p><xref
									href="sizing-general.dita#topic_axp_glg_xs"/></p><p><xref
									href="../understanding-couchbase/services-and-indexes/services/services.dita#services"
								/></p></entry>
					</row>
					<row>
						<entry><b>Time keeping</b></entry>
						<entry>Keeping accurate time is essential to a properly-functioning
							database. Ensure that you follow the guidelines for synchronizing each
							Couchbase node using Network Time Protocol (NTP).<p><xref
									href="synchronize-clocks-using-ntp.dita#topic_jbb_ccp_vx"
							/></p></entry>
					</row>
					<row>
						<entry><b>Disable Transparent Huge Pages</b></entry>
						<entry>You must disable the THP memory management system on each node that
							runs Couchbase Server.<p><xref href="thp-disable.dita#topic_wmm_1ps_pv"
								/></p></entry>
					</row>
					<row>
						<entry><b>Set kernel swappiness</b></entry>
						<entry>The <term>kernel swappiness</term> setting defines how aggressively
							the kernel will swap memory pages versus dropping pages from the page
							cache. You need to set the swappiness setting to 0, or at most 1, for
							optimal Couchbase Server operation. <p><xref
									href="install-swap-space.dita#concept_efx_mdp_ts"/></p></entry>
					</row>
					<row>
						<entry><b>Couchbase client deployment</b></entry>
						<entry>When you deploy Couchbase Server, you need to plan how clients will
							access and interact with the cluster.<p><xref
									href="install-client-server.dita#concept_d5r_vdp_ts"
							/></p></entry>
					</row>
					<row>
						<entry><b>Security</b></entry>
						<entry>Couchbase Server provides security features that allow administrators
							to implement various security controls to ensure secure deployment. You
							should take Couchbase security best practices into consideration before,
							during, and after deployment.<p><xref
									href="../security/security-best-practices.dita#security_best_practices_overview"
								/></p></entry>
					</row>
					<row>
						<entry><b>Virtualized and containerized deployments</b></entry>
						<entry>Certain considerations must be made when you're deploying Couchbase
							Server on a virtual machine or container.<p><xref
									href="best-practices-vm.dita#topic_sg3_1fz_bx"/></p></entry>
					</row>
					<row>
						<entry><b>Clusters with less than three nodes</b></entry>
						<entry>Couchbase Server clusters with less than three nodes are not
							recommended in production. However, you might find a need to have a
							smaller deployment for test and development purposes.<p><xref
									href="deployment-considerations-lt-3nodes.dita#topic_tdq_qbp_4v"
								/></p></entry>
					</row>
				</tbody>
			</tgroup>
		</table>
	</conbody>
	<concept id="concept_tyg_y3s_42b">
		<title>General Guidelines</title>
		<conbody>
			<dl>
				<dlentry>
					<dt>Use RAID 1+0 (or RAID 1) if Couchbase bucket replication is 1 or lower</dt>
					<dd>If bucket replicas are set to 2 or higher, the administrator might rely on
						database-level replication for data durability.</dd>
				</dlentry>
			</dl>
			<dl>
				<dlentry>
					<dt>Linux OS</dt>
					<dd>
						<ul id="ul_xmg_2js_42b">
							<li>When deploying Couchbase Server on production Linux, you should use
								either the XFS or ext4 file system. XFS is preferred because it
								provides better performance when multiple IO streams are accessing
								the file system, such as during Data Service compaction or when the
								working set exceeds the memory quota and the data is read from
								disk.</li>
							<li>The Couchbase Linux installer requires the ability to create a
								normal local Unix user with the name <codeph>couchbase</codeph>, if
								such a user doesn't already exist. This can be particularly
								important if you are using a directory service for user management,
								such as LDAP.</li>
						</ul>
					</dd>
				</dlentry>
			</dl>
			<dl>
				<dlentry>
					<dt>Windows OS</dt>
					<dd>For Windows OS, use 64k allocation sizes on NTFS file systems.</dd>
				</dlentry>
			</dl>
		</conbody>
		<concept id="concept_yd5_fjs_42b">
			<title>Nodes Running the Data Service</title>
			<conbody>
				<dl>
					<dlentry>
						<dt>Isolate the data and indexes</dt>
						<dd>For the best performance, isolate the data and indexes (note that these
							are different from the Index Service) at the physical disk level. </dd>
					</dlentry>
				</dl>
				<dl>
					<dlentry>
						<dt>Combine different workloads</dt>
						<dd>Combining different workloads (workloads with very different I/O and
							latency characteristics) can have a negative effect on the overall
							performance. In case of combined workloads, it might be appropriate to
							have objects in different buckets and the files for each bucket on
							different mount points/paths.</dd>
					</dlentry>
				</dl>
			</conbody>
		</concept>
	</concept>
</concept>
