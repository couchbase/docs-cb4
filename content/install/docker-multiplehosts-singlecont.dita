<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE topic PUBLIC "-//OASIS//DTD DITA Topic//EN" "topic.dtd">
<topic id="topic_dwf_n1c_ys">
  <title>Multiple Hosts, Single Container on Each Host</title><shortdesc>A typical Couchbase Server cluster with each node running on a dedicated host.</shortdesc>
  <body>
    <p>The multiple-hosts, single-container setup presents a typical Couchbase Server cluster, where
      each node runs on a dedicated host. All nodes are considered to be in the same datacenter
      with high-speed network links between them. We assume that the datacenter LAN configuration
      allows each host in the cluster to see each other host via known IPs. </p>
    <p><image href="picts/docker-04.png" id="image_gzs_xv3_ys"/></p>
    <p>Currently, the only supported approach for Couchbase Server on this deployment architecture is to use the --net=host flag.</p>
    <p>Using the <codeph>--net=host </codeph>flag will have the following effects:<ul>
        <li>The container will use the host's own networking stack, and bind directly to ports on
          the host.</li>
        <li>Removes networking complications with Couchbase Server being behind an NAT.</li>
        <li>From a networking perspective, it is effectively the same as running Couchbase Server
          directly on the host.</li>
        <li>There is no need to use <codeph>-p</codeph> to expose any ports. Each container will use
          the IP address(es) of its host.</li>
        <li>Increased efficiency, as there will be no Docker-imposed networking overhead. </li>
      </ul></p>
    <p>Start a container on each host with the following command:
      <codeblock>docker run -d -v ~/couchbase:/opt/couchbase/var --net=host couchbase/server</codeblock></p>
  <section><title>Configure Couchbase Cluster</title>
  <ul>
    <li>Access the Couchbase Web Console via port 8091 on any of the hosts.</li>
    <li>Follow the same steps as in <xref
            href="docker-singlehost-miltiplecont.dita#topic_wxx_g1c_ys"/>section. However, use the
          host IP address itself rather than having Docker inspect and discover the IP address.</li>
    
  </ul>
  
  </section>  
    
    
  </body>
</topic>
