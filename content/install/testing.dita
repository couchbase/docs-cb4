<?xml version="1.0" encoding="utf-8"?>
<!DOCTYPE concept PUBLIC "-//OASIS//DTD DITA Concept//EN" "concept.dtd">
<concept xml:lang="en-us" id="topic3291">
  <title>Verifying the Couchbase Server Installation</title>
  <shortdesc>Testing the connection to Couchbase Server can be performed in a number of different
    ways.</shortdesc>
  <conbody>
    <section id="section_qfz_gd4_r2b">
      <title>Basic Verification</title>
      <p>Connecting to the Couchbase Server Web Console with a Web browser provides basic
        confirmation that a node is available. </p>
      <p>On all platforms, you can access the Web Console by connecting to the embedded Web server
        on port 8091. For example, if your server can be identified on your network as
          <codeph>serverA</codeph>, you can access the Web Console by going to
          <codeph>http://serverA:8091/</codeph> or
          <codeph>http://<i>&lt;serverA's-IP-address></i>:8091/</codeph>. (If you set up Couchbase
        Server on a port other than <codeph>8091</codeph>, go to that specified port.) You should
        clear your browser's cache before attempting to access to the Web Console.</p>
      <p>If you are logged into the node itself, you can go to
          <codeph>http://localhost:8091</codeph>. You can also use the
          <codeph>couchbase-cli</codeph> command to query node to confirm that it is available.</p>
      <note type="note">The Web Console uses the same port as smart clients when communicating with
        Couchbase Server. If you can connect to the Web Console from a particular machine, then
        administration and database clients on the same machine can also connect to the core cluster
        port and perform operations. The Web Console will provide a warning if the Web browser loses
        connectivity to the node.</note>
    </section>
    <section id="section_jv5_jd4_r2b">
      <title>Detailed Verification</title>
      <p>To verify that clients can connect to the node, you can use either <xref
          href="#topic3291/testing-with-cbworkloadgen" format="dita">cbworkloadgen</xref> or <xref
          href="#topic3291/testing-with-telnet" format="dita">telnet</xref>. </p>
      <p>The <cmdname>cbworkloadgen</cmdname> command is a python program that performs basic
        operations (reads and writes) against the Couchbase Server cluster.</p>
      <p>Using <cmdname>telnet</cmdname> only checks the memcached compatibility ports and the
        memcached text-only protocol.</p>
      <dl>
        <dlentry>
          <dt id="testing-with-cbworkloadgen">Testing With cbworkloadgen</dt>
          <dd>
            <p>The command <cmdname>cbworkloadgen</cmdname> generates random data, then performs
              reads and writes of this data in Couchbase Server. It is not intended to be a
              performance benchmarking tool.</p>
            <p>To test a Couchbase Server installation using <cmdname>cbworkloadgen</cmdname>,
              execute the following command, supplying the IP address of the running node:</p>
            <codeblock>&gt; cbworkloadgen -n [host]:8091
        Thread 0 - average set time : 0.0257480939229 seconds , min : 0.00325512886047 seconds , max : 0.0705931186676 seconds , operation timeouts 0</codeblock>
            <p>The progress and activity of the tool can also be monitored within the Web
              Console.</p>
            <p>Further details about <codeph>cbworkloadgen</codeph> can be found on <xref
                href="../cli/cbworkloadgen-tool.dita">its CLI reference page</xref>.</p>
          </dd>
        </dlentry>
        <dlentry>
          <dt id="testing-with-telnet">Testing With telnet</dt>
          <dd>
            <p>The simplest method to determine whether Couchbase Server is running is to use
                <cmdname>telnet</cmdname> to connect to the server with the memcached text
              protocol.</p>
            <p><cmdname>Telnet</cmdname> must be installed on your server to connect to Couchbase
              Server using this method. Most platforms come with <cmdname>telnet</cmdname>
              pre-installed, but it can be obtained as a separate package if necessary.</p>
            <note type="note">You should not use the <cmdname>telnet</cmdname> method for
              communicating with Couchbase Server within your application. Instead, use one of the
              Couchbase Server SDKs.</note>
            <p>Connect to the server (via the legacy memcached protocol using Moxi):</p>
            <codeblock>&gt; telnet localhost1 11211
        Trying 127.0.0.1...
        Connected to localhost.localdomain (127.0.0.1).
        Escape character is '^]'.</codeblock>
            <p>Make sure it is responding (<codeph>stats</codeph> is a great way to check basic
              health):</p>
            <codeblock>stats
        STAT delete_misses 0
        STAT ep_io_num_write 0
        STAT rejected_conns 0
        ...
        STAT time 1286678223
        ...
        STAT curr_items_tot 0
        ...
        STAT threads 4
        STAT pid 23871
        ...
        END</codeblock>
            <p>Store a document:</p>
            <codeblock>set test_key 0 0 1
        a
        STORED</codeblock>
            <p>Retrieve the document:</p>
            <codeblock>get test_key
        VALUE test_key 0 1
        a
        END</codeblock>
            <p>Disconnect:</p>
            <codeblock>quit
        Connection closed by foreign host.
        &gt;</codeblock>
            <p>All of the memcached protocol's commands will work through
              <cmdname>telnet</cmdname>.</p>
          </dd>
        </dlentry>
      </dl>
    </section>
  </conbody>
</concept>
