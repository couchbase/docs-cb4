<?xml version="1.0" encoding="utf-8"?>
<!DOCTYPE topic
  PUBLIC "-//OASIS//DTD DITA Topic//EN" "topic.dtd">
<topic xml:lang="en-us" id="topic3291">
  <title>Testing</title><shortdesc>Testing the connection to the Couchbase Server can be performed in a number of different
    ways.</shortdesc>
  <body>
    <p>Connecting to the node using a web client to connect to Couchbase Web Console 
      provides basic confirmation that your node is available. Using the
       <codeph>couchbase-cli</codeph> command to query your Couchbase Server node will confirm that
      the node is available.</p>
    
    <note type="note">Couchbase Web Console uses the same port number as clients use when communicated
      with Couchbase Server. If you can connect to the Couchbase Web Console, administration and
      database clients can connect to the core cluster port and perform operations.
      Couchbase Web Console will also warn if the console loses connectivity to the node. </note>
    <p>To verify that your installation works for clients, you can use either the
       <cmdname>cbworkloadgen</cmdname> command, or <cmdname>telnet</cmdname>. </p>
      <p>The
      <cmdname>cbworkloadgen</cmdname> command uses the Python Client SDK to communicate with the
      cluster, checking both the cluster administration port and data update ports.</p>
    <p>Using <cmdname>telnet</cmdname> only checks the memcached compatibility ports and the memcached
      text-only protocol. </p>
    <section><title>Testing with <cmdname>telnet</cmdname></title>
      <p>The simplest method to determine whether Couchbase Server is running is to use
        <cmdname>Telnet</cmdname> to connect to the server with the memcached text
        protocol.</p>
      <p><cmdname>Telnet</cmdname> must be installed on your server to connect to Couchbase Server
        using this method. It is supplied as standard on most platforms, or can be obtained as a
        separate package and installed via your operating system's standard package manager.</p>
      
      <note type="note">You do not need to use the <cmdname>Telnet</cmdname> method for communicating
        with your server within your application. Instead, use one of the Couchbase Server SDKs. </note>
      
      <p>Connect to the server (connecting to the legacy memcached protocol using Moxi):</p>
      <codeblock>&gt; telnet localhost1 11211
        Trying 127.0.0.1...
        Connected to localhost.localdomain (127.0.0.1).
        Escape character is '^]'.</codeblock>
      <p>Make sure it is responding (stats is a great way to check basic health):</p>
      <codeblock>stats
        STAT delete_misses 0
        STAT ep_io_num_write 0
        STAT rejected_conns 0
        ...
        STAT time 1286678223
        ...
        STAT curr_items_tot 0
        ...
        STAT threads 4
        STAT pid 23871
        ...
        END</codeblock>
      <p>Put a key in:</p>
      <codeblock>set test_key 0 0 1
        a
        STORED</codeblock>
      <p>Retrieve the key:</p>
      <codeblock>get test_key
        VALUE test_key 0 1
        a
        END</codeblock>
      <p>Disconnect:</p>
      <codeblock>quit
        Connection closed by foreign host.
        &gt;</codeblock>
      <p>All of the memcached protocols commands will work through <cmdname>Telnet</cmdname>.</p>
    </section>  
    
    <section><title>Testing with <cmdname>cbworkloadgen</cmdname></title>
    
      <p>The command <cmdname>cbworkloadgen</cmdname> executes a number of different operations to provide basic testing
        functionality for Couchbase Server. It does not provide performance or workload testing. </p>
      
      <p>To test a
        Couchbase Server installation using the command <cmdname>cbworkloadgen</cmdname>, execute the command
        supplying the IP address of the running node:</p>
      <codeblock>&gt; cbworkloadgen -n localhost:8091
        Thread 0 - average set time : 0.0257480939229 seconds , min : 0.00325512886047 seconds , max : 0.0705931186676 seconds , operation timeouts 0</codeblock>
      <p>The progress and activity of the tool can also be monitored within the Couchbase Web Console.</p><p>For a
        longer test you can increase the number of
        iterations:</p>
      <codeblock>&gt; cbworkloadgen -n localhost:8091 --max-items=100000</codeblock>
    </section>
      
  </body>
</topic>
