<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE topic PUBLIC "-//OASIS//DTD DITA Topic//EN" "topic.dtd">
<topic id="topic_mln_twc_3w">
  <title>Running Couchbase Server Using Docker</title>
  <shortdesc>Using the official Couchbase Server images on Docker Hub, it's easy to get started with
    Couchbase Server on Docker containers.</shortdesc>
  <body>
    <p>If you're trying Couchbase Server for the first time and just want to explore a Couchbase
      configuration, the quickest way to install a pre-configured single-node using Docker is to
      follow the <xref href="../getting-started/start-here.dita#startHere"/> tutorial.</p>
    <p>For more traditional Docker deployments, review the <xref
        href="#topic_mln_twc_3w/section_jvt_zvj_42b" format="dita">single-node</xref> and <xref
        href="#topic_mln_twc_3w/section_msh_fbl_42b" format="dita">multi-node</xref> deployment
      instructions in this topic, which use the official Couchbase Docker images available on <xref
        href="https://hub.docker.com/_/couchbase/" scope="external" format="html">Docker
      Hub</xref>.</p>
    <section id="section_jvt_zvj_42b">
      <title>Deploying a Single-Node Cluster</title>
      <p>To run a single node cluster, you need to deploy a single Couchbase Server container
        representing the single node.</p>
      <note>Before you begin, review the Couchbase Server <xref
          href="plan-for-production.dita#topic_tqm_rcx_fw">system requirements</xref> and <xref
          href="install-production-deployment.dita#concept_jgc_ddp_ts">deployment guidelines</xref>,
        paying particular attention to the <xref href="best-practices-vm.dita#topic_sg3_1fz_bx"
          >guidelines for virtualized environments</xref> and <xref
          href="deployment-considerations-lt-3nodes.dita#topic_tdq_qbp_4v"/>.</note>
      <ol id="ol_b23_dck_42b">
        <li>Download and install Docker on the host machine.<p>To set up Docker on the host system,
            go to the <xref href="https://www.docker.com/get-docker" format="html" scope="external"
              >Docker installation page</xref> and follow the instructions.</p></li>
        <li>Run the following command to install the Couchbase Server
            container:<codeblock>docker run -d --name db -p 8091-8096:8091-8096 -p 11210-11211:11210-11211 couchbase</codeblock><p>This
            command downloads and runs the container image that is tagged <codeph>latest</codeph>
            from the official Couchbase repository on Docker Hub.</p><note type="tip">The container
            image on Docker Hub is based on Ubuntu. If you want to install a container image that is
            based on Red Hat Enterprise Linux (RHEL), follow the instructions on the <xref
              href="https://access.redhat.com/containers/?tab=images&amp;platform=docker#/registry.connect.redhat.com/couchbase/server"
              format="html" scope="external">Red Hat Container Catalog</xref> to download the image,
            and then run the following command to install and run the
            container:<codeblock>docker run -d --name db -p 8091-8096:8091-8096 -p 11210-11211:11210-11211 couchbase/server</codeblock></note><note>If
            Couchbase Server is running locally on the machine without containers, the port mappings
            specified using the <codeph>-p</codeph> option may fail. Ensure that you stop any local
            instance of Couchbase Server before running the above command.</note>You can check the
          Docker logs to verify that the container has started:
          <codeblock>docker logs db</codeblock>If the container has started, the output should start
          with the following:
          <codeblock>Starting Couchbase Server -- Web UI available at http://&lt;ip>:8091
...</codeblock></li>
        <li>From a Web browser, go to <filepath>http://localhost:8091</filepath> to access the
          Couchbase Server Web Console. If the container is up and running, you should see the
          Couchbase Server Setup Screen. <image placement="break" href="../admin/picts/welcome.png"
            id="image_c23_dck_42b" width="300"/></li>
        <li>Walk through the setup wizard to <xref href="init-setup.dita#topic12527">initialize the
            Couchbase Server cluster</xref> as normal.<p>You may need to lower the RAM allocation
            for various services to fit within the bounds of the resource for the
            containers.</p><p>You can enable the <codeph>travel-sample</codeph> and
              <codeph>beer-sample</codeph> buckets to load some sample data.</p></li>
      </ol>
      <p>This is all that is needed for a single node deployment of a Couchbase Server cluster with
        containers. Go to <xref href="#topic_mln_twc_3w/section_pfz_p1r_42b" format="dita"/>.</p>
    </section>
    <section id="section_msh_fbl_42b"><title>Deploying a Multi-node Cluster with Docker</title>There
      are two popular topologies for multi-node Couchbase Server clusters:<ul id="ul_svt_ybl_42b">
        <li><xref href="#topic_mln_twc_3w/ol_v2q_h2l_42b" format="dita">All Couchbase Server
            containers on one physical machine</xref><p>This model is commonly used for
            scale-minimized deployments that simulate production deployments for development and
            testing purposes.</p></li>
      </ul><ul id="ul_zhr_ccl_42b">
        <li>
          <p><xref href="#topic_mln_twc_3w/ol_txh_tlm_42b" format="dita">Each Couchbase Server
              container on its own physical machine</xref></p>
          <p>This model is commonly used for production deployments. This is the only supported
            topology for production with Couchbase Server 4.5 and higher.</p>
        </li>
      </ul><note>Before you begin, review the Couchbase Server <xref
          href="plan-for-production.dita#topic_tqm_rcx_fw">system requirements</xref> and <xref
          href="install-production-deployment.dita#concept_jgc_ddp_ts">deployment guidelines</xref>,
        paying particular attention to the <xref href="best-practices-vm.dita#topic_sg3_1fz_bx"
          >guidelines for virtualized environments</xref>.</note><p><b>Deploying all Couchbase
          Server containers on one physical machine</b></p><p>In this deployment model, all
        containers are placed on the same physical machine. Placing all containers on a single
        physical machine means all containers will compete for the same resources. That is okay for
        test systems, but it isnâ€™t recommended for applications sensitive to performance.</p><p>The
        following example explains how to set up a three-node Couchbase Server cluster with all of
        the containers running on one physical machine:</p><ol id="ol_v2q_h2l_42b">
        <li>Download and install Docker on the host machine.<p>To set up Docker on the host system,
            go to the <xref href="https://www.docker.com/get-docker" format="html" scope="external"
              >Docker installation page</xref> and follow the instructions.</p></li>
        <li>Run the following commands to install the Couchbase Server containers
            <codeph>db1</codeph>, <codeph>db2</codeph>, and
            <codeph>db3</codeph>:<codeblock>$ docker run -d --name db1 couchbase

$ docker run -d --name db2 couchbase

$ docker run -d --name db3 -p 8091-8096:8091-8096 -p 11210-11211:11210-11211 couchbase</codeblock><p>These
            commands download and run three instances of the container image that is tagged
              <codeph>latest</codeph> from the official Couchbase repository on Docker Hub.<note
              type="tip">The container image on Docker Hub is based on Ubuntu. If you want to
              install a container image that is based on Red Hat Enterprise Linux (RHEL), follow the
              instructions on the <xref
                href="https://access.redhat.com/containers/?tab=images&amp;platform=docker#/registry.connect.redhat.com/couchbase/server"
                format="html" scope="external">Red Hat Container Catalog</xref> to download the
              image, and then run the following command to install and run the
              container:<codeblock>$ docker run -d --name db1 couchbase/server

$ docker run -d --name db2 couchbase/server

$ docker run -d --name db3 -p 8091-8096:8091-8096 -p 11210-11211:11210-11211 couchbase/server</codeblock></note><note>If
              Couchbase Server is running locally on the machine without containers, the port
              mappings specified using the <codeph>-p</codeph> option may fail. Ensure that you stop
              any local instance of Couchbase Server before running the above
              command.</note><note>If you are using encrypted communication for the Web Console,
              client, and server, and using XDCR, you need to open up additional ports. For details,
              see <xref href="install-ports.dita"/>.</note></p>You can check the Docker logs to
          verify that each container has started:
          <codeblock>$ docker logs db1

$ docker logs db2

$ docker logs db3</codeblock>If the
          containers have started, the output of each of the above commands should start with the
          following:<codeblock>Starting Couchbase Server -- Web UI available at http://&lt;ip>:8091
...</codeblock></li>
        <li>Run the following commands to discover the local IP addresses of <codeph>db1</codeph>
          and
            <codeph>db2</codeph>:<codeblock>$ docker inspect --format '{{ .NetworkSettings.IPAddress }}' db1

$ docker inspect --format '{{ .NetworkSettings.IPAddress }}' db2</codeblock><p>You
            need the IP addresses of <codeph>db1</codeph> and <codeph>db2</codeph> to set up the
            three-node Couchbase Server cluster. The initial cluster setup will automatically pick
            up the IP address for <codeph>db3</codeph>.</p></li>
        <li>From a Web browser, go to <filepath>http://localhost:8091</filepath> to access the Web
          Console. If <codeph>db3</codeph> is up and running, you should see the Couchbase Server
          Setup Screen.<image placement="break" href="../admin/picts/welcome.png"
            id="image_lsh_kdm_ccb" width="300"/></li>
        <li>Click <uicontrol>Setup New Cluster</uicontrol> and walk through the setup wizard to
            <xref href="init-setup.dita#topic12527">initialize the Couchbase Server cluster</xref>
          as normal.<p>You may need to lower the RAM allocation for various services to fit within
            the bounds of the resource for the containers.</p><p>You can enable the
              <codeph>travel-sample</codeph> and <codeph>beer-sample</codeph> buckets to load some
            sample data.</p></li>
        <li>After the cluster is initialized on the first Couchbase Server node
            (<codeph>db3</codeph>), the next step is to add the Couchbase nodes from
            <codeph>db1</codeph> and <codeph>db2</codeph> to the cluster.<ol id="ol_w2q_h2l_42b">
            <li>In the Web Console, go to the <uicontrol>Servers</uicontrol> tab and click
                <uicontrol>ADD SERVER</uicontrol>. Enter the IP address that you previously captured
              for <codeph>db1</codeph>, and click <uicontrol>Add Server</uicontrol>.<image
                placement="break" href="picts/cluster-setup-add-server-db1.png"
                id="image_kxc_lgg_3w" width="350"/></li>
            <li>After <codeph>db1</codeph> is successfully added, click <uicontrol>ADD
                SERVER</uicontrol> again. Enter the IP address that you previously captured for
                <codeph>db2</codeph>, and click <uicontrol>Add Server</uicontrol>.</li>
            <li>Click <uicontrol>Rebalance</uicontrol>.<image placement="break"
                href="picts/docker-single-machine-db123.png" width="570" id="image_ybp_2gg_3w"
              /></li>
          </ol></li>
      </ol><p>This is all that is needed for a multi-node Couchbase Server cluster deployment with
        containers on a single physical machine. Go to <xref
          href="#topic_mln_twc_3w/section_pfz_p1r_42b" format="dita"/>.</p><p><b>Deploying Couchbase
          Server Containers Across Many Physical Machines</b></p><p>In this deployment model, each
        container is placed on its own physical machine. This is the supported model for production
        deployments with Couchbase Server containers.</p><p>The following example explains how to
        set up a three-node Couchbase Server cluster with each Couchbase Server container running on
        its own physical machine:</p><ol id="ol_txh_tlm_42b">
        <li>Download and install Docker on each host machine.<p>To set up Docker on the host system,
            go to the <xref href="https://www.docker.com/get-docker" format="html" scope="external"
              >Docker installation page</xref> and follow the instructions.</p></li>
        <li>On all three physical hosts, start the Couchbase Server container, <codeph>db</codeph>,
          using the following
            command:<codeblock>docker run -d --name db -v ~/couchbase:/opt/couchbase/var --net=host couchbase</codeblock><p>This
            command downloads and runs the container image that is tagged <codeph>latest</codeph>
            from the official Couchbase repository on Docker Hub. The <cmdname>-v</cmdname> option
            is recommended for better I/O performance and persists the data stored by Couchbase on
            the local host. The <codeph>--net=host</codeph> option provides better network
            performance and maps the host network stack to the container.<note type="tip">The
              container image on Docker Hub is based on Ubuntu. If you want to install a container
              image that is based on Red Hat Enterprise Linux (RHEL), follow the instructions on the
                <xref
                href="https://access.redhat.com/containers/?tab=images&amp;platform=docker#/registry.connect.redhat.com/couchbase/server"
                format="html" scope="external">Red Hat Container Catalog</xref> to download the
              image, and then run the following command to install and run the
              container:<codeblock>docker run -d --name db -v ~/couchbase:/opt/couchbase/var --net=host couchbase/server</codeblock></note></p>You
          can check the Docker logs to verify that the container has started:
          <codeblock>docker logs db</codeblock>If the container has started, the output should start
          with the following:
          <codeblock>Starting Couchbase Server -- Web UI available at http://&lt;ip>:8091
...</codeblock></li>
        <li>On all three physical hosts, run the following command to discover the local IP
          addresses for each Couchbase Server
            container:<codeblock>docker inspect --format '{{ .NetworkSettings.IPAddress }}' db</codeblock><p>You
            need the IP address of each container to set up the three-node Couchbase Server
            cluster.</p></li>
        <li>On one of the physical hosts, open a Web browser and go to
            <filepath>http://localhost:8091</filepath> or <codeph>http://&lt;node-ip>:8091</codeph>
          to access the Web Console. If the container is up and running, you should see the
          Couchbase Server Setup Screen.<image placement="break" href="../admin/picts/welcome.png"
            id="image_uxh_tlm_42b" width="300"/><p>Click <uicontrol>Setup New Cluster</uicontrol>
            and walk through the setup wizard to <xref href="init-setup.dita#topic12527">initialize
              the Couchbase Server cluster</xref> as normal.</p><p>You can enable the
              <codeph>travel-sample</codeph> and <codeph>beer-sample</codeph> buckets to load some
            sample data.</p></li>
        <li>On the remaining physical hosts, open a Web browser and go to
            <filepath>http://localhost:8091</filepath> or <codeph>http://&lt;node-ip>:8091</codeph>
          to access the Web Console. If the container is up and running, you should see the
          Couchbase Server Setup Screen.<p>Click <uicontrol>Join Existing Cluster</uicontrol>, and
            walk through the setup wizard. </p></li>
        <li>On the last physical host, after you join the cluster, go to the
            <uicontrol>Servers</uicontrol> tab and click <uicontrol>Rebalance</uicontrol>. <image
            placement="break" href="picts/docker-single-machine-db123.png" width="570"
            id="image_vxh_tlm_42b"/></li>
      </ol><p>This all that is needed for a multi-node Couchbase Server cluster deployment with
        containers across multiple physical machines. Go to <xref
          href="#topic_mln_twc_3w/section_pfz_p1r_42b" format="dita"/>.</p></section>
    <section id="section_pfz_p1r_42b">
      <title>Next Steps</title>
      <p>Once you've successfully initialized  a Couchbase Server cluster using containers, you can
        start querying Couchbase and connecting clients.<ul id="ul_utt_x1r_42b">
          <li><xref href="../getting-started/first-n1ql-query.dita#first-n1ql"/><p>If you would like
              to practice querying on a new Couchbase Server cluster, log into the Web Console at
                <filepath>http://localhost:8091</filepath> and go to the
                <uicontrol>Query</uicontrol> tab. If you don't have any buckets set up yet, you can
              go to the <uicontrol>Buckets</uicontrol> tab and click <uicontrol>sample
                bucket</uicontrol> to load some sample data.</p></li>
          <li>Connect via SDK<p>The SDKs communicate with Couchbase Server services over various
              ports using the name that is used to register each node in the
                <uicontrol>Servers</uicontrol> tab. Given that each node is registered using the IP
              address of the hosts, applications using the SDK can be run from any host that can
              reach the nodes of the cluster.</p><p>For single-node clusters, simply run your
              application through the Couchbase Server SDK on the host and point it to
                <filepath>http://localhost:8091/pools</filepath> to connect to the
              container.</p><p>For more information on deploying a sample application to a
              container, see <xref href="../travel-app/index.dita"/>.</p></li>
        </ul></p>
    </section>
  </body>
</topic>
