<?xml version="1.0" encoding="utf-8"?>
<!DOCTYPE topic
  PUBLIC "-//OASIS//DTD DITA Topic//EN" "topic.dtd">
<topic xml:lang="en-us" id="topic2913">
<title>Performance Tuning</title>

	<shortdesc>
		You can tune the performance of your Couchbase-Elasticsearch data-replication
		system, by adjusting the number of Couchbase document-fields or documents that you wish
		to index; by adding nodes to your Elasticsearch cluster; and by changing
		Couchbase XDCR parameters. This section describes the available options.
	</shortdesc>

<body>

<section>
		
	<title>
		Disable Fields from Indexing
	</title>

		<p>
			A custom mapping allows fields not required for searching to be disabled, and 
			so omitted from the Elasticsearch indexing process. See 
			<xref href="https://www.elastic.co/guide/en/elasticsearch/reference/1.4/mapping-object-type.html" scope="external" format="html">Object Type</xref>, in the 
			online Elasticsearch documentation.
		</p>
</section>
	
<section>
	<title>
		Limit the Number of Index Entries
	</title>
	<p>
		To limit the number of index entries, you can filter the documents on the 
		Elasticsearch side, by means of the <b>couchbase.keyFilter</b> setting: either expressly including 
		or excluding documents whose ID matches a specified
		regular expression. Included documents are indexed; excluded are omitted. To configure filtering, see the 
		chapter <xref href="./advanced-settings.dita" scope="local" format="dita">Advanced Settings</xref>.
	</p>
</section>
	
	<section>
		<title>
			Add Elasticsearch Nodes
		</title>
		<p>
			If your Couchbase Server-cluster experiences a backlog of items in the replication 
			queue, consider adding additional Elasticsearch nodes: this should increase 
			indexing-speed.	
		</p>
	</section>
	
	<section>
		<title>
			Adjust Concurrent Replication
		</title>
		<p>
			Couchbase provides XDCR parameters that can be adjusted, to increase replication-speed. See 
			<xref href="https://developer.couchbase.com/documentation/server/current/xdcr/xdcr-tuning-performance.html" scope="external" format="html">Tune 
			XDCR Performance</xref> for detailed information. 
		</p>
		
		<p>
			Take special note of the parameters <codeph>XDCR Source Nozzles per Node</codeph>
			and <codeph>XDRC Target Nozzles per Node</codeph>, which respectively increase and decrease the 
			maximum concurrent replication performed by a Couchbase node. Their use may be 
			of critical importance if the numbers of concurrent replications, and/or the number of 
			connections per replication prove too great for the Elasticsearch node to handle. 
		</p>
		
		<p>
			In such cases, errors may be displayed by the Couchbase Web Console. 
			To inspect them, left-click on the XDCR tab, and examine the <uicontrol>Ongoing Replications</uicontrol> section. 
			The following string provides the ID of the CAPI nozzle (a component in 
			XDCR replication), which writes to the target:
		</p>
		
		<codeblock>"capi_f4268e62702130298bf87f17cc481219/default/default_172.23.105.146:9091_1 - Connection"</codeblock>
			
		<p>
			This message indicates that data-replication operations are not being completed
			in the expected timeframes, necessitating replication-retries. To mitigate 
			this problem, reduce the default <codeph>XDCR Source Nozzles per Node</codeph> 
			setting, and adjust the <codeph>XDCR Target Nozzles per Node</codeph> setting accordingly.
			
		</p>
	</section>
	
	<section>
		<title>
			Adjust Elasticsearch Node-Configuration
		</title>
		
		<p>
			Check your Elasticsearch documentation to ensure that your Elasticsearch 
			nodes are optimally configured for performance. Note the following options:
		</p>
	
		<ul>
			<li>
				When bulk-loading, increase the Elasticsearch <codeph>index.refresh_interval</codeph>
				setting, in order to improve indexing-performance. This setting 
				determines how quickly Elasticsearch makes the indexed documents 
				available to query. For a large bulk-load, where real-time indexing 
				is not needed, a high setting, such as 30 seconds, may significantly 
				increase throughput. 
				
				<p>
					<!-- Vertical space -->
				</p>
			</li>
			
			<li>
				In the event that specific documents are known typically to be queried 
				together, document routing within the plug-in can be configured such 
				that the documents always reside on the same Elasticsearch shard; in 
				order to boost query performance.
				
				<p>
					<!-- Vertical space -->
				</p>
			</li>
			
			<li>
				Mapping documents to specific Elasticsearch types, and then searching 
				within a specific type, is faster than searching the entire Elasticsearch 
				index.
				
				<p>
					<!-- Vertical space -->
				</p>
			</li>
		</ul>
		
	</section>	
	
</body>

</topic>
