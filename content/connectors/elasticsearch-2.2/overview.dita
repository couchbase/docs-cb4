<?xml version="1.0" encoding="utf-8"?>
<!DOCTYPE topic
  PUBLIC "-//OASIS//DTD DITA Topic//EN" "topic.dtd">
<topic xml:lang="en-us" id="topic1393">
<title>Elasticsearch Plug-in 2.2</title>
	
<shortdesc>
	This document explains how to use the <i>Elasticsearch Transport Plugin</i> to coordinate data-searches
	across Elasticsearch and Couchbase Server. It explains the system architecture, provides
	step-by-step instructions on installation and configuration; and includes a code-example, whereby the Couchbase
	SDK can be used in conjunction with the plug-in, to query both repositories.
</shortdesc>	
	
<body>
	
<section>

<title>
	Using Elasticsearch and Couchbase
</title>
	

<p>
	The <i>Elasticsearch Transport Plug-in</i> from Couchbase allows the functionality of Elasticsearch — an open source 
	search-engine — to be combined with that of Couchbase Server; so as to drive the retrieval of more complex 
	document-structures, from Couchbase Server. For example, a product-catalog application that uses Elasticsearch 
	as a repository for product-names may, on successful completion of a name-search, use the search-results 
	to access a corresponding, highly detailed product-description from Couchbase Server. 	
</p>

<p>
	Conversely, the <i>full text search</i> capability provided by Elasticsearch brings extreme
	flexibility to the process of identifying and returning critical data-values stored within
	Couchbase Server.
</p>

<p>
	Couchbase provides a suite of Software Development Kits that you can use, in conjunction with Elasticsearch
	interfaces, to manage these kinds of data-retrieval.
</p>

<p>
	Note that Elasticsearch clusters can be scaled independently of the Couchbase Server-clusters with which they
	work: this allows Elasticsearch search-performance to be appropriately resourced; and highly CPU-intensive
	searches thereby conducted, without any entailed impact on the performance of Couchbase Server reads or writes.
</p>

<p>
	The Elasticsearch Transport Plug-in provides the following:
</p>

<ul>
	<li>
		<i>Real-time replication</i>: The plug-in transfers all new or modified Couchbase data to the Elasticsearch 
		cluster as soon as the Couchbase Server has written that data to disk. This ensures that the Elasticsearch 
		search-index is always current.	
		
		<p>
			<!-- Vertical space -->
		</p>
	</li>
	
	<li>
		<i>Topology-awareness</i>: The plug-in handles any node-failures that might occur within either a Couchbase or 
		an Elasticsearch cluster, and so keeps data constantly accessible. Data-replication from a Couchbase cluster 
		always continues from its still-functioning nodes; with the data-items duly sent to Elasticsearch, and thereby
		made available to be searched on from currently available servers in the Elasticsearch cluster.
		<p>
			<!-- Vertical space -->
		</p>
		
	</li>
	
	<li>
		<i>Network-failure recovery</i>: The plug-in is aware both of what data has already been replicated from Couchbase Server, 
		and of what data still needs to be replicated. If a network-failure interrupts data-transfer from a Couchbase 
		Server-cluster, replication resumes for the remaining data, once the network issue is resolved.
		
		<p>
			<!-- Vertical space -->
		</p>
	</li>
</ul>

<p>
	The interaction of elements within a Couchbase-Elasticsearch data-replication system is represented by the
	following illustration:
</p>

	<image href="images/esCbArch_components.png" id="esCbArch_components" align="left" width="630"/>

<p>
	As the illustration shows, the Couchbase Server-cluster constantly replicates its data to the Elasticsearch Cluster, ensuring 
	that the Elasticsearch Cluster is fully up-to-date. The plug-in transmits the data by means of a protocol understood 
	by Elasticsearch. On receipt of the data, the Elasticsearch cluster performs indexing based on the data provided by 
	Couchbase Server. (Not all the Couchbase data need be indexed within Elasticsearch: if appropriate, a subset of fields or
	of documents can be specified for indexing.)
</p>

<p>
	Code within an Application Server uses Elasticsearch queries to make text-based searches across its available data. 
	When such a search is conducted on an index that is based on a bucket replicated from the Couchbase Server-cluster, the 
	application can retrieve the document ID for each returned value, and pass this to Couchbase Server, by means of a call 
	defined by the Couchbase SDK. A corresponding document is returned for each ID.
</p>
		
</section>	
</body>

</topic>
