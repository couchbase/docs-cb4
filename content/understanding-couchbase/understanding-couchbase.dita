<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE topic PUBLIC "-//OASIS//DTD DITA Topic//EN" "topic.dtd">
<topic id="understanding-couchbase-overview">
  
  <title>
    Overview
  </title>
  
  <shortdesc>
    An overview of Couchbase Server's core features.
  </shortdesc>
  
  <body>
    
    <section id="key_elements_and_concepts">
      
      <title>
        Core Features
      </title>
      
    <p>
      This section provides descriptions of Couchbase Server's core features. The descriptions are
      organized as follows:
    </p>
      <p>
        
      </p>
      
      <ul>
        <li>
          <p>
            <b>Data</b>: Couchbase Server stores data as <i>items</i>.
            Each item consists of a <i>key</i>, by which
            the item is referenced; and an associated <i>value</i>, which must be either <i>binary</i> 
            or a <i>JSON document</i>. 
          </p>
          
          <p>
            See
            <xref href="./data/data.dita" scope="local" format="dita">Data</xref> for information.
          </p>
          
          <p>
            
          </p>
        </li>
        
        <li>
          <p>
            <b>Buckets, Memory, and Storage</b>: Items are stored in named <i>Buckets</i>;
            being kept only in memory, others both in memory and on disk. 
          </p>
          
          <p>
            See
            <xref href="./buckets-memory-and-storage/buckets-memory-and-storage.dita" scope="local" format="dita">Buckets, Memory, and Storage</xref>
            for information.
          </p>
          
          <p>
          </p>
        </li>
        
        <li>
          <p>
            <b>Services and Indexes</b>: <i>Services</i> can be deployed to
            support different forms of data-access: 
            for example, the <i>Data Service</i> allows items to be retrieved by <i>key</i>;
            while the <i>Query Service</i> allows them to be retrieved by means of <i>queries</i>, 
            designed in the <i>N1QL</i> query-language. Individual services 
            can be configured to run across multiple cluster-nodes, allowing
            high-priority workloads to be distributed and scaled appropriately. <i>Indexes</i> support
            services, by enabling high-performance access to data.
          </p>
          
          <p>
            See
            <xref href="./services-and-indexes/services-and-indexes.dita" scope="local" format="dita">Services and Indexes</xref> for
            information.
          </p>
          
          <p>
          </p>
        </li>
        
        <li>
          <p>
            <b>Clusters and Availability</b>: A single node running Couchbase Server is considered
            a <i>cluster</i> of one node. As successive nodes are 
            initialized, each can be configured to 
            join the existing cluster. 
          </p>
          
          <p>
            Across the nodes of each cluster, Couchbase data is evenly distributed and replicated: nodes can
            be removed, and node-failure handled, without data-loss. Data can be selected for
            replication across clusters residing in different data centers, to ensure high availability.
          </p>
          
          <p>
            See
            <xref href="./clusters-and-availability/clusters-and-availability.dita" scope="local" format="dita">Clusters and Availability</xref>
            for information.
          </p>
          
          <p>
          </p>
        </li>      

      </ul>
      
    </section>
    
    <section id="couchbase-glossary">
      
      <title>
        Couchbase Glossary
      </title>
      
      <p>
        The following glossary introduces the principal terms used in descriptions of Couchbase
        Server-technology. Use the links to locate the full descriptions of each.
      </p>
      
      <p>
        
      </p>
      
      <ul>
        
        <li>
          <xref href="../introduction/intro.dita" scope="local" format="dita">Server</xref>: An instance
          of <i>Couchbase Server</i> &#8212; an open source, distributed, NoSQL document-oriented engagement database,
          specialized to provide low-latency data management for large-scale interactive web, mobile, and other 
          applications. Each instance runs on its on physical or virtual machine.
          
          <p>
            
          </p>
        </li>
        
        <li>
          <xref href="./clusters-and-availability/clusters-and-availability.dita" scope="local" format="dita">Cluster</xref>: One 
          or more instances of Couchbase Server, 
          each running on an independent node; but cooperating with any and all others, so as to form a unified system; 
          whereby resources are
          shared, and a single interface provided for data-access and management.
          
          <p>
          </p>
        </li>
        
        <li>
          <xref href="./buckets-memory-and-storage/buckets.dita">Bucket</xref>: A logical, user-named entity that 
          groups items; allowing them to be accessed, indexed, replicated, and access-controlled. There are three types:
          
          <p>
            
          </p>
          
          <ul>
            <li>
              <b>Couchbase</b>: Retains data both in memory and on disk.
              <p>
                
              </p>
            </li>
            
            <li>
              <b>Ephemeral</b>: Retains data in memory only.
              <p>
                
              </p>
            </li>
            
            <li>
              <b>Memcached</b>: Designed to be used in the context of other database platforms, such as ones 
              employing relational database technology, in order to provide a managed memory-cache for frequently-used data.
              
              <p>
                
              </p>
            </li>
            
          </ul>
          
        </li>
        
        <li>
          <xref href="./buckets-memory-and-storage/memory.dita" scope="local" format="dita">Memory</xref>: An automatically managed caching 
          layer, supporting high-speed data-access. 
          
          <p>
          </p>
        </li>
        
        <li>
          <xref href="./buckets-memory-and-storage/storage.dita" scope="local" format="dita">Storage</xref>: The
          persistent retention of items on disk, in compressed form, with high-speed threaded access.
          
          <p>
          </p>
        </li>
        
        
        
        <li>
          <xref href="./data/data.dita" scope="local" format="dita">Data</xref>: Items, each of which consists of a key
          by which the item is referenced; and an associated value, which must 
          be either binary or a JSON document.
          
          <p>
          </p>
          
          <ul>
            
            <li>
              Access: The creation, update, and deletion of items, as supported by the 
              <xref href="../admin/ui-intro.dita" scope="local" format="dita">Couchbase Web Console UI</xref> and the 
              <xref href="../sdk/development-intro.dita" scope="local" format="dita">Couchbase SDK</xref>.
              
              <p>
                
              </p>
            </li>
            
            <li>
              <xref href="./data/document-data-model.dita" scope="local" format="dita">Model</xref>: A lightweight, flexible 
              schema; which can be progressively evolved by applications over time, and allows information
              to be stored in the form of items.
              
              <p>
                
              </p>
            </li>
            
          </ul>
          
        </li>
        
        <li>
          <xref href="../clustersetup/server-setup.dita" scope="local" format="dita">Node</xref>: A computer 
          (potentially, a virtual machine) running an instance
          of Couchbase Server. 
          
          <p>
          </p>
          
          <ul>
            
            <li>
              <xref href="../clustersetup/adding-nodes.dita" scope="local" format="dita">Addition</xref>: The 
              ability to add a Couchbase 
              Cluster of one node to another existing cluster,
              so that a single, combined cluster is produced. Following addition, rebalance
              ensures that data and indexes are optimally distributed across all available nodes.
              
              <p>
                
              </p>
              
            </li>
            
            <li>
              <xref href="../clustersetup/failover.dita" scope="local" format="dita">Failover</xref>: The ability
              to allow healthy nodes to continue functioning as a cluster, potentially without data-loss,
              when one node has gone offline. Rebalance
              ensures that data and indexes are optimally distributed across all available nodes. Failover can be
              automated.
              
              <p>
              </p>
              
            </li>
            
            <li>
              <xref href="../clustersetup/remove-nodes.dita" scope="local" format="dita">Removal</xref>: The
              ability to remove a node
              from a cluster. Following removal, rebalance
              ensures that data and indexes are optimally distributed across all available nodes.
              
              <p>
              </p>
              
            </li>
            
          </ul>
        </li>
        
        <li>
          <xref href="../clustersetup/rebalance.dita" scope="local" format="dita">Rebalance</xref>: The process of 
          redistributing data and indexes optimally among 
          the available nodes of a cluster. This should be performed whenever a
          cluster-configuration has changed.
          
          <p>
          </p>
        </li>
        
        
        
        <li>
          <xref href="./clusters-and-availability/clusters-and-availability.dita" scope="local" format="dita">Availability</xref>: 
          The preservation of data from system-failure, by the following means:
          
          <p>
          </p>
          
          <ul>
            
            <li>
              <xref href="../backup-restore/backup-restore.dita" >Backup and Restore</xref>: The storing in archive-repositories 
              of the current state of data, indexes,
              and bucket configurations; and the restoration of such state to a running
              cluster.
              
              <p>
                
              </p>
            </li>
            
            <li>
              <xref href="../xdcr/xdcr-intro.dita" scope="local" format="dita">Cross Datacenter Replication</xref> (<i>XDCR</i>): 
              The replication of data between clusters, 
              to ensure the least chance of data-loss
              in the event of data-center failure, and to provide high-performance data-access 
              for globally distributed applications.
              <p>
                
              </p>
            </li>
            
            <li>
              <xref href="../cli/cbcli/couchbase-cli-recovery.html" scope="local" format="html">Data Recovery</xref>: The
              restoration of current data to a node that is recovered from failure: either
              by updating data still held locally, or by substituting current data from other 
              nodes.
              <p>
                
              </p>
            </li>
            
            <li>
              <xref href="./clusters-and-availability/replication-architecture.dita#availability/intra-cluster-replication" scope="local" format="dita">Intra-Cluster Replication</xref>: The maintenance and continuous update of data-copies, 
              distributed across the nodes of a cluster, to ensure the least chance of data-loss in the event of 
              single-node failure.
              
              <p>
                
              </p>
            </li>
            
          </ul>
          
          
        </li>
        

        <li>
          <xref href="../install/get-started.dita" scope="local" format="dita">Deployment</xref>: The installation of a 
          single instance of Couchbase Server, subsequent to the 
          appropriate resourcing and configuration of an underlying platform.
          
          <p>
          </p>
          
          <ul>

            
            <li>
              <xref href="../cloud/couchbase-cloud-deployment.dita" scope="local" format="dita">Cloud</xref>: Couchbase Server 
              runs on a pre-established cloud-configuration.
              <p>
                
              </p>
            </li>
            
            <li>
              <xref href="../install/running-couchbase-in-containers.dita" scope="local" format="dita">Container</xref>: Couchbase 
              Server runs within a software container or virtual machine.
              <p>
                
              </p>
            </li>
            
            <li>
              <xref href="../install/install-intro.dita" scope="local" format="dita">Native</xref>: Couchbase Server runs on 
              an individual, physical machine.
              <p>
                
              </p>
            </li>
            
          </ul>
        </li>
        
        <li>
          <xref href="../install/init-setup.dita" scope="local" format="dita">Initialization</xref>: The configuration of a
          new instance of Couchbase Server, either as the first
          node in a new cluster, or as an additional node for an existing cluster.
          
          <p>
          </p>
        </li>
        

        
        
        <li>
          <xref href="../security/security-intro.dita" scope="local" format="dita">Security</xref>: Couchbase-Server Authentication, Authorization, Auditing, and Encryption.
          
          <p>
          </p>
          
            <ul>
              <li>
                <xref href="../security/security-authentication.dita" scope="local" format="dita">Authentication</xref>: To 
                access Couchbase Server, administrators and applications must be authenticated. 
                Authentication is a process for identifying a user who is attempting to access 
                a system. Authentication can be attempted by passing credentials, or by means
                of certificates.
                
                <p>
                  
                </p>
              </li>
              
              <li>
                <xref href="../security/security-authorization.dita" scope="local" format="dita">Authorization</xref>: Role-Based 
                Access Control (<i>RBAC</i>), whereby access-privileges 
                are assigned to fixed roles that are themselves assigned to administrators and 
                applications.
                <p>
                  
                </p>
              </li>
              
              <li>
                <xref href="../security/security-auditing.dita" scope="local" format="dita">Auditing</xref>: The detailed, automated 
                recording of actions performed on Couchbase
                Server, allowing administrative review; in order to ensure that system-management 
                tasks are being appropriately performed.
                <p>
                  
                </p>
              </li>
              
              <li>
                <xref href="../security/security-encryption.dita" scope="local" format="dita">Encryption</xref>: SSL/TLS, 
                used to encrypt data passed over the wire. 
                
                <p>
                  
                </p>
              </li>
              
            </ul>
        </li>
        
        <li>
          <xref href="./services-and-indexes/services/services.dita" scope="local" format="dita">Services</xref>: Couchbase 
          Server-facilities that support different forms of data-access:
          
          <p>
            
          </p>
          
            <ul>
              
              <li>
                <xref href="./services-and-indexes/services/analytics-service.dita" scope="local" format="dita">Analytics</xref>: 
                Supports join, set, aggregation, and grouping operations that are expected to 
                be large, long-running, and highly consumptive of memory and CPU resources.
                <p>
                  
                </p>
              </li>
              
              <li>
                <xref href="./services-and-indexes/services/data-service.dita" scope="local" format="dita">Data</xref>: Supports 
                the storing, setting, and retrieving of data-items, specified by key.
                <p>
                  
                </p>
              </li>
              
              <li>
                <xref href="../eventing/eventing-overview.dita" scope="local" format="dita">Eventing</xref>: Supports 
                near real-time handling of changes to data: code can be executed both 
                in response to document-mutations, and as scheduled by timers.
                <p>
                  
                </p>
                
              </li>
                
              
              <li>
                <xref href="./services-and-indexes/services/index-service.dita" scope="local" format="dita">Index</xref>: 
                Creates indexes, for use by the Query and Analytics services.
                <p>
                  
                </p>
              </li>
              
              <li>
                <xref href="./services-and-indexes/services/query-service.dita" scope="local" format="dita">Query</xref>: Parses 
                input specified in the N1QL query-language, executes queries, and 
                returns results. The Query Service interacts with both the Data and Index 
                services.
                <p>
                  
                </p>
              </li>
              
              <li>
                <xref href="../fts/full-text-intro.dita" scope="local" format="dita">Search</xref>: Creates indexes 
                specially purposed for Full Text Search. This supports 
                language-aware searching; allowing users to search for, say, the word beauties, 
                and additionally obtain results for beauty and beautiful.
                <p>
                  
                </p>
              </li>
              
            </ul>
        </li>
        
        <li>
          <xref href="./services-and-indexes/services/services.dita" scope="local" format="dita">Scaling</xref>: The optional 
          allocation of services to cluster-nodes in accordance
          with workload-requirements. For example, if a particular service is expected to 
          handle a heavy workload, it can be allocated a large memory quota, and 
          might be deployed as the only service on its node, to ensure optimal
          availability of CPU cycles.
          
          <p>
          </p>
        </li>
        
        <li>
          <xref href="../admin/admin-intro.dita" scope="local" format="dita">Tools</xref>: Provided by Couchbase Server 
          to support cluster-management:
          
          <p>
            
          </p>
          
          <ul>
            
            <li>
              <xref href="../cli/cli-intro.dita" scope="local" format="dita">CLI</xref>: Command-line-based management.
              <p>
              </p>
            </li>
            
            <li>
              <xref href="../admin/ui-intro.dita" scope="local" format="dita">Couchbase Web Console</xref>: UI-based management.
              
              <p>
              </p>
            </li>
            
            <li>
              <xref href="../rest-api/rest-intro.dita" scope="local" format="dita">REST API</xref>: RESTful management. 
              Note that the REST API, as well as being directly
              available to the administrator, also underlies the features of the
              Couchbase Web Console and CLI.
              
              <p>
              </p>
            </li>
            
          </ul>
        </li>
        
        <li>
          <xref href="../sdk/java/start-using-sdk.dita" scope="local" format="dita">SDK</xref>: Libraries that support 
          cluster-access for applications written in Java, .NET, C, Go, 
          PHP, Python, and NodeJs.
          
          <p>
          </p>
        </li>
        
      </ul>
        
      
    </section>
    
  </body>
  
</topic>
