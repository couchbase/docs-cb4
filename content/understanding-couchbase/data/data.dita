<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE topic PUBLIC "-//OASIS//DTD DITA Topic//EN" "topic.dtd">
<topic id="topic_tlg_jqz_bw2">
  <title>Data</title>
  <shortdesc>
    Couchbase Server saves data as <i>items</i>, each of which has a <i>key</i> and a <i>value</i>.
  </shortdesc>
  
  <body>
    
    <section>
      
      <title>
        Items, Keys, and Values
      </title>
      
      <p>
        Each item consists of a key and a value. Each key is unique
        within its bucket, and values
        can be either binary or JSON.  
      </p>
      
    </section>
    
    <section>
      <title>
        Keys
      </title>
          
        <p>
          Each value (binary or JSON) is identified by a unique key, defined by the user or
          application when the item is saved.
          The key is immutable: once the item is saved, the key cannot be changed.
        </p>
      
        <p>
          Note that Couchbase also refers to an item's key as its <i>id</i>.
        </p>
      
        <p>
          Each key:
        </p>
      
        <p>
        </p>
      
          <ul>
            <li>
              Must be a UTF-8 string with no spaces. Special characters, such as <codeph>(</codeph>, <codeph>%</codeph>, 
              <codeph>/</codeph>, <codeph>"</codeph>, and <codeph>_</codeph>, are acceptable.
              <p>
                
              </p>
            </li>

            <li>
              May be no longer than 250 bytes.
              <p>
                
              </p>
            </li>
            
            <li>
              Must be unique within its bucket.
              <p>
                
              </p>
            </li>
        
          </ul>

    </section>
    
    <section>
      <title>
        Values
      </title>
      
        <p>
          The maximum size of a value is 20 MiB. A value can be either:
        </p>
      
      <ul>
        <li>
          <b>Binary</b>: Any form of binary is acceptable. Note that a binary value cannnot be parsed, indexed,
          or queried: it can only be retrieved by key.
          
          <p>
          </p>
          
        </li>

        <li>
          <b>JSON</b>: A JSON value, referred to as a <i>document</i>, can be parsed, indexed, and queried. 
          Each document consists of one or more <i>attributes</i>,
          each of which has its own value. An attribute's value can be a <i>basic</i> type, such 
          as a number, string, or Boolean; or a <i>complex</i>, such as an embedded document or an array. 
          
          <p>
            
          </p>
        </li>
        
      </ul>

    </section>
    
    <section>
      <title>
        Document Structure
      </title>
      
      <p>
       A sample JSON document is provided immediately below. Its contents are as follows:
      </p>
      
      <p>
      </p>
      
      <ul>
        <li>
          <codeph>a1</codeph> and <codeph>a2</codeph> are attributes that respectively
          have a single number and a single string as their values.
          
          <p>
            
          </p>
        </li>
        
        <li>
          <codeph>a3</codeph> is an attribute whose value is an embedded document consisting of a single
          attribute, <codeph>b1</codeph>, whose own value is an array of three numbers.
          
          <p>
            
          </p>
          
        </li>
        
        <li>
          <codeph>a4</codeph> is an attribute whose value is an array of two
          documents, each document consisting an attribute (<codeph>c1</codeph> or <codeph>c2</codeph>) 
          whose own values are respectively a string and a number.
          
          <p>
            
          </p>
        </li>
      </ul>
      
      <codeblock outputclass="language-javascript">{  
  "a1" : number,
  "a2" : "string",
  "a3" : {
    "b1" : [ number, number, number ]
    },
  "a4" : [
    { "c1" : "string", "c2" : number },
    { "c1" : "string", "c2" : number }
  ]
}</codeblock>
      
      <p>
        Note that the official JSON definition is provided at 
        <xref href="https://tools.ietf.org/html/rfc7159" format="html" scope="external">RFC 7159</xref>, and at 
        <xref href="http://www.ecma-international.org/publications/files/ECMA-ST/ECMA-404.pdf" format="pdf" scope="external">ECMA 404</xref>. 
      </p>
      
      <p>
        The benefits offered to application-programmers by JSON are considered in
        <xref href="./document-data-model.dita" scope="local" format="dita">The Couchbase Data Model</xref>.
      </p>
      
    </section>
    
    <section>
      <title>
        Sub-Documents
      </title>
      
      <p>
        A <i>sub-document</i> is an inner component of a JSON document. The sub-document is referred to by a <i>path</i>,
        which specifies attributes and array-positions.
        </p>
      
      <p>
        The example given above includes the following paths:
      </p>
      
      <p>
      </p>
      
      <ul>
        <li>
          <codeph>a1</codeph>, whose value is a number.
          <p>
            
          </p>
        </li>
        
        <li>
          <codeph>a3.b1</codeph>, whose value is an array of numbers.
          <p>
            
          </p>
        </li>
        
        <li>
          <codeph>a3.b1[0]</codeph>, whose value is the first number in an array.
            
            <p>
            </p>
        </li>
        
        <li>
          <codeph>a4[1].c2</codeph>, whose value is a number.
        </li>
      </ul>
      
      <p>
        The Couchbase SDK provides a <i>Sub-Document API</i>, which allows paths to be specified,
        and sub-documents thereby read and written to. This makes it unnecessary to transfer entire 
        documents over the network when only partial modifications are required, potentially 
        providing significant improvements in network-performance.
        For further information, see
        <xref href="../../sdk/subdocument-operations.dita" scope="local" format="dita">Sub-Document Operations</xref>.
      </p> 
      
     </section>
    
    <section>
      
      <title>
        Metadata
      </title>
      
      <p>
        <i>Metadata</i> is automatically generated and stored for each item saved in Couchbase Server. For
        example, the following document, which contains airport-information, has been 
        saved with the key <codeph>airport_1306</codeph>:
      </p>
      
      <codeblock outputclass="language-javascript">{
  "airportname": "Brienne Le Chateau",
  "city": "Brienne-le Chateau",
  "country": "France",
  "faa": null,
  "geo": {
    "alt": 381,
    "lat": 48.429764,
    "lon": 4.482222
  },
  "icao": "LFFN",
  "id": 1306,
  "type": "airport",
  "tz": "Europe/Paris"
}</codeblock>
      
      <p>
        Couchbase Server generates metadata in association with the document, when the document is saved. The metadata might
        be as follows:
      </p>
      
      <codeblock outputclass="language-javascript">{
  "meta": {
    "id": "airport_1306",
    "rev": "1-1526338d1bbb00000000000002000000",
    "expiration": 0,
    "flags": 33554432,
    "type": "json"
  },
  "xattrs": {}
}</codeblock>
      
      <p>
        The attributes within the metadata are:
      </p>
      
      <p>
        
      </p>
      
      <ul>
        
        <li>
          <codeph>meta</codeph>: The attribute whose value is the standard metadata for the saved 
          document, <codeph>airport-1306</codeph>.
          <p></p>
        </li>
        
        <li>
          <codeph>id</codeph>: The <i>key</i> of the saved document, which is <codeph>airport_1306</codeph>.
          <p></p>
        </li>
        
        <li>
          <codeph>rev</codeph>: The <i>revision</i> or <i>sequence</i> number. This value is for internal server-use only: it is
          used in the resolution of conflicts that occur when replicated documents are updated concurrently on different servers,
          representing the number of times the document has been mutated. For more information, see
          <xref href="../clusters-and-availability/replication-architecture.dita#availability/xdcr-conflict-resolution" scope="local" format="dita">XDCR Conflict Resolution</xref>.
          <p></p>
        </li>
        
        <li>
          <codeph>expiration</codeph>: The expiration-time (or <i>Time-To-Live</i>) of the document. If non-zero, this 
          determines the point at which the document is removed from the system. The value can be set either 
          per-document, by means of Couchbase SDK APIs (which is referred to as <i>TTL</i>); or
          per bucket, by means of Couchbase Web Console, the Couchbase CLI, or the
          Couchbase REST API (which is referred to as <i>Bucket TTL</i>).
          
          <p>
            For information on <i>TTL</i>, see
            <xref href="../../sdk/core-operations.dita" scope="local" format="dita">Core Operations</xref>. For information
            on <i>Bucket TTL</i>, see
            <xref href="../buckets-memory-and-storage/expiration.dita" scope="local" format="dita">Bucket TTL</xref>.
          </p>
          
          <p></p>
          
        </li>
        
        <li>
          <codeph>flags</codeph>: Couchbase SDK-specific values that may be used to identify the type of data saved, or to
          specify formatting.
          
          <p></p>
        </li>
        
        <li>
          <codeph>type</codeph>: The type of the saved value, which in this case is <codeph>json</codeph>.
          <p></p>
        </li>
        
        <li>
          <codeph>xattrs</codeph>: <i>Extended Attributes</i>, which constitute a special kind of metadata, some of
          which is system-internal, some of which can optionally be written and read by user-applications. See
          <xref href="../data/extended-attributes-fundamentals.dita" scope="local" format="dita">Extended Attributes</xref> for
          more information.
          <p></p>
        </li>
        
        
      </ul>
      
    </section>
    
    <section id="size-limits">
      
      <title>
        Size Limits
      </title>
      
      <p>
        The following diagram indicates the respective maximum sizes of the components of a Couchbase Server data-item.
      </p>
      
      <p>
        <image href="./images/item-maximum-sizes.png" id="item-maximum-sizes" align="left" width="520"/>
      </p>
      
      
      
    </section>
    
    
  </body>
</topic>
