<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE topic PUBLIC "-//OASIS//DTD DITA Topic//EN" "topic.dtd">
<topic id="services">
  
  <title>
    Services
  </title>
  
  <shortdesc>
    Couchbase <i>Services</i> support access to and maintenance of data.
  </shortdesc>
  
  <body>
    
    <section>
      
      <title>
        Services
      </title>
      
      <p>
        Couchbase Server provides the following services: 
      </p>
      
      <p>
        
      </p>
      
      <ul>
        
        <li>
          <b>Data</b>: Supports the storing, setting, and retrieving of data-items, specified by
          key. 
          <p>
            
          </p>
        </li>
        
        <li>
          <b>Query</b>: Parses queries specified in the <i>N1QL</i> query-language, executes
          the queries, and returns results. The Query Service interacts with both the
          Data and Index services.
          <p>
            
          </p>
        </li>
        
        <li>
          <b>Index</b>: Creates indexes, for use by the Query and Analytics
          services.
          <p>
            
          </p>
        </li>
        
        <li>
          <b>Search</b>: Create indexes specially purposed for <i>Full Text Search</i>. This
          supports language-aware searching; allowing users to search for,
          say, the word <codeph>beauties</codeph>, and additionally obtain
          results for <codeph>beauty</codeph> and <codeph>beautiful</codeph>.
          <p>
            
          </p>
        </li>
        
        <li>
          <b>Analytics</b>: Supports join, set,
          aggregation, and grouping operations; which are expected to
          be large, long-running, and highly consumptive of memory and CPU resources.
          <p>
            
          </p>
        </li>
        
        <li>
          <b>Eventing</b>: Supports near real-time handling of changes to
          data: code can be executed both in response to document-mutations, 
          and as scheduled by timers.
          <p>
            
          </p>
        </li>
        
      </ul>
      
    </section>
    
    <section>
      <title>
        Setting Up Services
      </title>
      
      <p>
        Services are set up on a per node basis. Each node can run at most one instance of
        a service. The <i>Data Service</i> must run on at least one node. Some services are
        interdependent, and therefore require at least one instance of each of their dependencies to be running on
        the cluster (for example, the <i>Query Service</i> depends on the
        <i>Index Service</i> and on the <i>Data Service</i>).
      </p>
      
      <p>
        When the first node in a cluster is initialized, the services assigned to it become
        the default assignment for each other node subsequently to be added to the cluster. 
        However, this default can be departed from, node by node; with one or more services omitted from the
        default, and one or more added. 
      </p>
      
      <p>
        When first allocated to a node, a service requires the assignment of a specific memory quota,
        which becomes standard for that service in each of its instances across the cluster. (The
        exception to this is the Query Service, which never requires a memory quota.)
      </p>
      
      <p>
        Service-allocation should be designed based on workload-analysis: if a particular service is
        expected to handle a heavy workload, it should be allocated with a larger memory quota, and
        potentially as the only service on the node. Alternatively, if a cluster is to be used for
        development purposes only, it may be convenient to allocate services in the quickest and
        most convenient way, with some quotas being equal.
      </p>
      
      <p>
        For example, the following illustration shows how four services &#8212; Data, Index, Query, and Search &#8212;
        might be allocated evenly across the five nodes of a <i>development</i> cluster:
      </p>
      
      <p>
        <image href="./images/cbClusterWithServicesDevelopment.png" id="cb_cluster_with_services_development" align="left" width="720"/>
      </p>
      
      <p>
        This configuration might provide perfectly acceptable performance for each of the four services, in the context
        of development and testing. However, if a large amount of data needed, in production, to be intensively indexed,
        and addressed by means of Query and Search, the following configuration would be more efficient:
      </p>
      
      <p>
        <image href="./images/cbClusterWithServicesProduction.png" id="cb_cluster_with_services_production" align="left" width="720"/>
      </p>
      
      <p>
        In this revised configuration, the Data Service is the only service to run on two of the nodes; the Index Service the only
        service on two futher nodes; and the Query and Search Services share the fifth and final node.
      </p>
      
      <p>
        For a more detailed explanation of service memory quotas, see
        <xref href="../../buckets-memory-and-storage/memory.dita" scope="local" format="dita">Memory</xref>.
        For information on the practical steps required to initialize a cluster, including the allocation
        of services to nodes, see
        <xref href="../../../install/init-setup.dita" scope="local" format="dita">Initialize the Cluster</xref>.
      </p>

    </section>
    
  </body>
  
</topic>
